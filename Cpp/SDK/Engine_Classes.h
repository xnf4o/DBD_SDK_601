#pragma once

/**
 * Name: DBD
 * Version: 601
 */

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
	// --------------------------------------------------
	// # Classes
	// --------------------------------------------------
	/**
	 * Class Engine.Actor
	 * Size -> 0x0200 (FullSize[0x0230] - InheritedSize[0x0030])
	 */
	class AActor : public UObject
	{
	public:
		struct FActorTickFunction                                  PrimaryActorTick;                                        // 0x0030(0x0030) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              bNetTemporary : 1;                                       // 0x0060(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNetStartup : 1;                                         // 0x0060(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOnlyRelevantToOwner : 1;                                // 0x0060(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAlwaysRelevant : 1;                                     // 0x0060(0x0001) BIT_FIELD Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bReplicateMovement : 1;                                  // 0x0060(0x0001) BIT_FIELD Edit, Net, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bHidden : 1;                                             // 0x0060(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, Net, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bTearOff : 1;                                            // 0x0060(0x0001) BIT_FIELD Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bForceNetAddressable : 1;                                // 0x0060(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bExchangedRoles : 1;                                     // 0x0061(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNetLoadOnClient : 1;                                    // 0x0061(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNetUseOwnerRelevancy : 1;                               // 0x0061(0x0001) BIT_FIELD Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRelevantForNetworkReplays : 1;                          // 0x0061(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRelevantForLevelBounds : 1;                             // 0x0061(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bReplayRewindable : 1;                                   // 0x0061(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAllowTickBeforeBeginPlay : 1;                           // 0x0061(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAutoDestroyWhenFinished : 1;                            // 0x0061(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bCanBeDamaged : 1;                                       // 0x0062(0x0001) BIT_FIELD Edit, BlueprintVisible, Net, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bBlockInput : 1;                                         // 0x0062(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCollideWhenPlacing : 1;                                 // 0x0062(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFindCameraComponentWhenViewTarget : 1;                  // 0x0062(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bGenerateOverlapEventsDuringLevelStreaming : 1;          // 0x0062(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoresOriginShifting : 1;                              // 0x0062(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableAutoLODGeneration : 1;                            // 0x0062(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsEditorOnlyActor : 1;                                  // 0x0062(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bActorSeamlessTraveled : 1;                              // 0x0063(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bReplicates : 1;                                         // 0x0063(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bCanBeInCluster : 1;                                     // 0x0063(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bAllowReceiveTickEventOnDedicatedServer : 1;             // 0x0063(0x0001) BIT_FIELD NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_Y35M : 4;                                    // 0x0063(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              UnknownData_UJOL : 3;                                    // 0x0064(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bActorEnableCollision : 1;                               // 0x0064(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bActorIsBeingDestroyed : 1;                              // 0x0064(0x0001) BIT_FIELD Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EActorUpdateOverlapsMethod                                 UpdateOverlapsMethodDuringLevelStreaming;                // 0x0065(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EActorUpdateOverlapsMethod                                 DefaultUpdateOverlapsMethodDuringLevelStreaming;         // 0x0066(0x0001) Edit, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		ENetRole                                                   RemoteRole;                                              // 0x0067(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FRepMovement                                        ReplicatedMovement;                                      // 0x0068(0x0034) Edit, Net, DisableEditOnInstance, RepNotify, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPrivate
		float                                                      InitialLifeSpan;                                         // 0x009C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CustomTimeDilation;                                      // 0x00A0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YK74[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRepAttachment                                      AttachmentReplication;                                   // 0x00A8(0x0040) Net, Transient, RepNotify, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		class AActor*                                              Owner;                                                   // 0x00E8(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                NetDriverName;                                           // 0x00F0(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ENetRole                                                   Role;                                                    // 0x00FC(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		ENetDormancy                                               NetDormancy;                                             // 0x00FD(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpawnActorCollisionHandlingMethod                         SpawnCollisionHandlingMethod;                            // 0x00FE(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAutoReceiveInput                                          AutoReceiveInput;                                        // 0x00FF(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InputPriority;                                           // 0x0100(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PZIR[0x4];                                   // 0x0104(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInputComponent*                                     InputComponent;                                          // 0x0108(0x0008) ExportObject, ZeroConstructor, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetCullDistanceSquared;                                  // 0x0110(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NetTag;                                                  // 0x0114(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetUpdateFrequency;                                      // 0x0118(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinNetUpdateFrequency;                                   // 0x011C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetPriority;                                             // 0x0120(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SSCI[0x4];                                   // 0x0124(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APawn*                                               Instigator;                                              // 0x0128(0x0008) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class AActor*>                                      Children;                                                // 0x0130(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		class USceneComponent*                                     RootComponent;                                           // 0x0140(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class AMatineeActor*>                               ControllingMatineeActors;                                // 0x0148(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_EOMD[0x8];                                   // 0x0158(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        Layers;                                                  // 0x0160(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UChildActorComponent>                 ParentComponent;                                         // 0x0170(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_34CY[0x8];                                   // 0x0178(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        Tags;                                                    // 0x0180(0x0010) Edit, BlueprintVisible, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnTakeAnyDamage;                                         // 0x0190(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnTakePointDamage;                                       // 0x0191(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnTakeRadialDamage;                                      // 0x0192(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnActorBeginOverlap;                                     // 0x0193(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnActorEndOverlap;                                       // 0x0194(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnBeginCursorOver;                                       // 0x0195(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnEndCursorOver;                                         // 0x0196(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnClicked;                                               // 0x0197(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnReleased;                                              // 0x0198(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnInputTouchBegin;                                       // 0x0199(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnInputTouchEnd;                                         // 0x019A(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnInputTouchEnter;                                       // 0x019B(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnInputTouchLeave;                                       // 0x019C(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnActorHit;                                              // 0x019D(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnDestroyed;                                             // 0x019E(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnEndPlay;                                               // 0x019F(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QS7E[0x60];                                  // 0x01A0(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UActorComponent*>                             InstanceComponents;                                      // 0x0200(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class UActorComponent*>                             BlueprintCreatedComponents;                              // 0x0210(0x0010) ExportObject, ZeroConstructor, NonTransactional, ContainsInstancedReference, TextExportTransient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_89GJ[0x10];                                  // 0x0220(0x0010) MISSED OFFSET (PADDING)

	public:
		bool WasRecentlyRendered(float Tolerance);
		void UserConstructionScript();
		void TearOff();
		void SnapRootComponentTo(class AActor* InParentActor, const class FName& InSocketName);
		void SetTickGroup(ETickingGroup NewTickGroup);
		void SetTickableWhenPaused(bool bTickableWhenPaused);
		void SetReplicates(bool bInReplicates);
		void SetReplicateMovement(bool bInReplicateMovement);
		void SetOwner(class AActor* NewOwner);
		void SetNetDormancy(ENetDormancy NewDormancy);
		void SetLifeSpan(float InLifespan);
		void SetAutoDestroyWhenFinished(bool bVal);
		void SetActorTickInterval(float TickInterval);
		void SetActorTickEnabled(bool bEnabled);
		void SetActorScale3D(const struct FVector& NewScale3D);
		void SetActorRelativeScale3D(const struct FVector& NewRelativeScale);
		void SetActorHiddenInGame(bool bNewHidden);
		void SetActorEnableCollision(bool bNewActorEnableCollision);
		void RemoveTickPrerequisiteComponent(class UActorComponent* PrerequisiteComponent);
		void RemoveTickPrerequisiteActor(class AActor* PrerequisiteActor);
		void ReceiveTick(float DeltaSeconds);
		void ReceiveRadialDamage(float DamageReceived, class UDamageType* DamageType, const struct FVector& Origin, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser);
		void ReceivePointDamage(float Damage, class UDamageType* DamageType, const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, const class FName& BoneName, const struct FVector& ShotFromDirection, class AController* InstigatedBy, class AActor* DamageCauser, const struct FHitResult& HitInfo);
		void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void ReceiveEndPlay(EEndPlayReason EndPlayReason);
		void ReceiveDestroyed();
		void ReceiveBeginPlay();
		void ReceiveAnyDamage(float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
		void ReceiveActorOnReleased(const struct FKey& ButtonReleased);
		void ReceiveActorOnInputTouchLeave(ETouchIndex FingerIndex);
		void ReceiveActorOnInputTouchEnter(ETouchIndex FingerIndex);
		void ReceiveActorOnInputTouchEnd(ETouchIndex FingerIndex);
		void ReceiveActorOnInputTouchBegin(ETouchIndex FingerIndex);
		void ReceiveActorOnClicked(const struct FKey& ButtonPressed);
		void ReceiveActorEndOverlap(class AActor* OtherActor);
		void ReceiveActorEndCursorOver();
		void ReceiveActorBeginOverlap(class AActor* OtherActor);
		void ReceiveActorBeginCursorOver();
		void PrestreamTextures(float Seconds, bool bEnableStreaming, int32_t CinematicTextureGroups);
		void OnRep_ReplicateMovement();
		void OnRep_ReplicatedMovement();
		void OnRep_Owner();
		void OnRep_Instigator();
		void OnRep_AttachmentReplication();
		void MakeNoise(float Loudness, class APawn* NoiseInstigator, const struct FVector& NoiseLocation, float MaxRange, const class FName& Tag);
		class UMaterialInstanceDynamic* MakeMIDForMaterial(class UMaterialInterface* Parent);
		bool K2_TeleportTo(const struct FVector& DestLocation, const struct FRotator& DestRotation);
		bool K2_SetActorTransform(const struct FTransform& NewTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		bool K2_SetActorRotation(const struct FRotator& NewRotation, bool bTeleportPhysics);
		void K2_SetActorRelativeTransform(const struct FTransform& NewRelativeTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_SetActorRelativeRotation(const struct FRotator& NewRelativeRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_SetActorRelativeLocation(const struct FVector& NewRelativeLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		bool K2_SetActorLocationAndRotation(const struct FVector& NewLocation, const struct FRotator& NewRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		bool K2_SetActorLocation(const struct FVector& NewLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_OnReset();
		void K2_OnEndViewTarget(class APlayerController* PC);
		void K2_OnBecomeViewTarget(class APlayerController* PC);
		class USceneComponent* K2_GetRootComponent();
		TArray<class UActorComponent*> K2_GetComponentsByClass(class UClass* ComponentClass);
		struct FRotator K2_GetActorRotation();
		struct FVector K2_GetActorLocation();
		void K2_DetachFromActor(EDetachmentRule LocationRule, EDetachmentRule RotationRule, EDetachmentRule ScaleRule);
		void K2_DestroyComponent(class UActorComponent* Component);
		void K2_DestroyActor();
		void K2_AttachToComponent(class USceneComponent* Parent, const class FName& SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, bool bWeldSimulatedBodies);
		void K2_AttachToActor(class AActor* ParentActor, const class FName& SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, bool bWeldSimulatedBodies);
		void K2_AttachRootComponentToActor(class AActor* InParentActor, const class FName& InSocketName, EAttachLocation AttachLocationType, bool bWeldSimulatedBodies);
		void K2_AttachRootComponentTo(class USceneComponent* InParent, const class FName& InSocketName, EAttachLocation AttachLocationType, bool bWeldSimulatedBodies);
		void K2_AddActorWorldTransformKeepScale(const struct FTransform& DeltaTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_AddActorWorldTransform(const struct FTransform& DeltaTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_AddActorWorldRotation(const struct FRotator& DeltaRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_AddActorWorldOffset(const struct FVector& DeltaLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_AddActorLocalTransform(const struct FTransform& NewTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_AddActorLocalRotation(const struct FRotator& DeltaRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_AddActorLocalOffset(const struct FVector& DeltaLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		bool IsOverlappingActor(class AActor* Other);
		bool IsChildActor();
		bool IsActorTickEnabled();
		bool IsActorBeingDestroyed();
		bool HasAuthority();
		float GetVerticalDistanceTo(class AActor* OtherActor);
		struct FVector GetVelocity();
		struct FTransform GetTransform();
		bool GetTickableWhenPaused();
		float GetSquaredHorizontalDistanceTo(class AActor* OtherActor);
		float GetSquaredDistanceTo(class AActor* OtherActor);
		ENetRole GetRemoteRole();
		class UChildActorComponent* GetParentComponent();
		class AActor* GetParentActor();
		class AActor* GetOwner();
		void GetOverlappingComponents(TArray<class UPrimitiveComponent*>* OverlappingComponents);
		void GetOverlappingActors(TArray<class AActor*>* OverlappingActors, class UClass* ClassFilter);
		ENetRole GetLocalRole();
		float GetLifeSpan();
		class AController* GetInstigatorController();
		class APawn* GetInstigator();
		struct FVector GetInputVectorAxisValue(const struct FKey& InputAxisKey);
		float GetInputAxisValue(const class FName& InputAxisName);
		float GetInputAxisKeyValue(const struct FKey& InputAxisKey);
		float GetHorizontalDotProductTo(class AActor* OtherActor);
		float GetHorizontalDistanceTo(class AActor* OtherActor);
		float GetGameTimeSinceCreation();
		float GetDotProductTo(class AActor* OtherActor);
		float GetDistanceTo(class AActor* OtherActor);
		TArray<class UActorComponent*> GetComponentsByTag(class UClass* ComponentClass, const class FName& Tag);
		TArray<class UActorComponent*> GetComponentsByInterface(class UClass* Interface);
		class UActorComponent* GetComponentByClass(class UClass* ComponentClass);
		class FName GetAttachParentSocketName();
		class AActor* GetAttachParentActor();
		void GetAttachedActors(TArray<class AActor*>* OutActors, bool bResetArray);
		void GetAllChildActors(TArray<class AActor*>* ChildActors, bool bIncludeDescendants);
		struct FVector GetActorUpVector();
		float GetActorTimeDilation();
		float GetActorTickInterval();
		struct FVector GetActorScale3D();
		struct FVector GetActorRightVector();
		struct FVector GetActorRelativeScale3D();
		struct FVector GetActorForwardVector();
		void GetActorEyesViewPoint(struct FVector* OutLocation, struct FRotator* OutRotation);
		bool GetActorEnableCollision();
		void GetActorBounds(bool bOnlyCollidingComponents, struct FVector* Origin, struct FVector* BoxExtent, bool bIncludeFromChildActors);
		void ForceNetUpdate();
		void FlushNetDormancy();
		void FinishAddComponent(class UActorComponent* Component, bool bManualAttachment, const struct FTransform& RelativeTransform);
		void EnableInput(class APlayerController* PlayerController);
		void DisableInput(class APlayerController* PlayerController);
		void DetachRootComponentFromParent(bool bMaintainWorldPosition);
		void AddTickPrerequisiteComponent(class UActorComponent* PrerequisiteComponent);
		void AddTickPrerequisiteActor(class AActor* PrerequisiteActor);
		class UActorComponent* AddComponentByClass(class UClass* Class, bool bManualAttachment, const struct FTransform& RelativeTransform, bool bDeferredFinish);
		class UActorComponent* AddComponent(const class FName& TemplateName, bool bManualAttachment, const struct FTransform& RelativeTransform, class UObject* ComponentTemplateContext, bool bDeferredFinish);
		bool ActorHasTag(const class FName& Tag);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.GameInstance
	 * Size -> 0x01D0 (FullSize[0x0200] - InheritedSize[0x0030])
	 */
	class UGameInstance : public UObject
	{
	public:
		unsigned char                                              UnknownData_08Y8[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ULocalPlayer*>                                LocalPlayers;                                            // 0x0040(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		class UOnlineSession*                                      OnlineSession;                                           // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UObject*>                                     ReferencedObjects;                                       // 0x0058(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_GBKN[0x18];                                  // 0x0068(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPawnControllerChangedDelegates;                        // 0x0080(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_0KY2[0x170];                                 // 0x0090(0x0170) MISSED OFFSET (PADDING)

	public:
		void ToggleDisableComponent(const class FString& comp);
		void ReceiveShutdown();
		void ReceiveInit();
		void HandleTravelError(ETravelFailure FailureType);
		void HandleNetworkError(ENetworkFailure FailureType, bool bIsServer);
		void DumpDisabledComponents();
		void DebugRemovePlayer(int32_t ControllerId);
		void DebugCreatePlayer(int32_t ControllerId);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Info
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class AInfo : public AActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BlueprintFunctionLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UBlueprintFunctionLibrary : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BlueprintAsyncActionBase
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UBlueprintAsyncActionBase : public UObject
	{
	public:
		unsigned char                                              UnknownData_HCU0[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)

	public:
		void Activate();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.OnlineBlueprintCallProxyBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UOnlineBlueprintCallProxyBase : public UBlueprintAsyncActionBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Player
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UPlayer : public UObject
	{
	public:
		unsigned char                                              UnknownData_B4KZ[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerController*                                   PlayerController;                                        // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentNetSpeed;                                         // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConfiguredInternetSpeed;                                 // 0x0044(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConfiguredLanSpeed;                                      // 0x0048(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DUFT[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NetConnection
	 * Size -> 0x1B78 (FullSize[0x1BC8] - InheritedSize[0x0050])
	 */
	class UNetConnection : public UPlayer
	{
	public:
		TArray<class UChildConnection*>                            Children;                                                // 0x0050(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		class UNetDriver*                                          Driver;                                                  // 0x0060(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              PackageMapClass;                                         // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPackageMap*                                         PackageMap;                                              // 0x0070(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UChannel*>                                    OpenChannels;                                            // 0x0078(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      SentTemporaries;                                         // 0x0088(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class AActor*                                              ViewTarget;                                              // 0x0098(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              OwningActor;                                             // 0x00A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxPacket;                                               // 0x00A8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              InternalAck : 1;                                         // 0x00AC(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UWTQ[0xBB];                                  // 0x00AD(0x00BB) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FUniqueNetIdRepl                                    playerID;                                                // 0x0168(0x0028) HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X4W3[0x48];                                  // 0x0190(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     LastReceiveTime;                                         // 0x01D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U8A3[0x1340];                                // 0x01E0(0x1340) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UChannel*>                                    ChannelsToTick;                                          // 0x1520(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_GCN7[0x698];                                 // 0x1530(0x0698) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NetDriver
	 * Size -> 0x0750 (FullSize[0x0780] - InheritedSize[0x0030])
	 */
	class UNetDriver : public UObject
	{
	public:
		unsigned char                                              UnknownData_QAZU[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              NetConnectionClassName;                                  // 0x0038(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ReplicationDriverClassName;                              // 0x0048(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxDownloadSize;                                         // 0x0058(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bClampListenServerTickRate : 1;                          // 0x005C(0x0001) BIT_FIELD Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5G81[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NetServerMaxTickRate;                                    // 0x0060(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxNetTickRate;                                          // 0x0064(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxInternetClientRate;                                   // 0x0068(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxClientRate;                                           // 0x006C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ServerTravelPause;                                       // 0x0070(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnPrioritySeconds;                                    // 0x0074(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RelevantTimeout;                                         // 0x0078(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      KeepAliveTime;                                           // 0x007C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialConnectTimeout;                                   // 0x0080(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConnectionTimeout;                                       // 0x0084(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialDevConnectionTimeout;                             // 0x0088(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeoutMultiplierForUnoptimizedBuilds;                   // 0x008C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNoTimeouts;                                             // 0x0090(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNeverApplyNetworkEmulationSettings;                     // 0x0091(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DW6O[0x6];                                   // 0x0092(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UNetConnection*                                      ServerConnection;                                        // 0x0098(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UNetConnection*>                              ClientConnections;                                       // 0x00A0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AGM8[0x60];                                  // 0x00B0(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RecentlyDisconnectedTrackingTime;                        // 0x0110(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5MD1[0x3C];                                  // 0x0114(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWorld*                                              World;                                                   // 0x0150(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPackage*                                            WorldPackage;                                            // 0x0158(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2R5O[0x20];                                  // 0x0160(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              NetConnectionClass;                                      // 0x0180(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ReplicationDriverClass;                                  // 0x0188(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q7RE[0x10];                                  // 0x0190(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                NetDriverName;                                           // 0x01A0(0x000C) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SQCJ[0x4];                                   // 0x01AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FChannelDefinition>                          ChannelDefinitions;                                      // 0x01B0(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic
		TMap<class FName, struct FChannelDefinition>               ChannelDefinitionMap;                                    // 0x01C0(0x0050) NativeAccessSpecifierPublic
		TArray<class UChannel*>                                    ActorChannelPool;                                        // 0x0210(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_M88Y[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Time;                                                    // 0x0228(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7CLP[0x4BC];                                 // 0x022C(0x04BC) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExpireViewTargetDelay;                                   // 0x06E8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_2IIT[0x34];                                  // 0x06EC(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UReplicationDriver*                                  ReplicationDriver;                                       // 0x0720(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4AE8[0x58];                                  // 0x0728(0x0058) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.OnlineEngineInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UOnlineEngineInterface : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.OnlineSession
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UOnlineSession : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ActorComponent
	 * Size -> 0x0088 (FullSize[0x00B8] - InheritedSize[0x0030])
	 */
	class UActorComponent : public UObject
	{
	public:
		unsigned char                                              UnknownData_YMVE[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FActorComponentTickFunction                         PrimaryComponentTick;                                    // 0x0038(0x0030) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FName>                                        ComponentTags;                                           // 0x0068(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UAssetUserData*>                              AssetUserData;                                           // 0x0078(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_VFHR[0x4];                                   // 0x0088(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UCSSerializationIndex;                                   // 0x008C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_B3IC : 3;                                    // 0x0090(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bNetAddressable : 1;                                     // 0x0090(0x0001) BIT_FIELD NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bReplicates : 1;                                         // 0x0090(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SCHY : 3;                                    // 0x0090(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              UnknownData_4DKL : 7;                                    // 0x0091(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bAutoActivate : 1;                                       // 0x0091(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsActive : 1;                                           // 0x0092(0x0001) BIT_FIELD Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bEditableWhenInherited : 1;                              // 0x0092(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_79MW : 1;                                    // 0x0092(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bCanEverAffectNavigation : 1;                            // 0x0092(0x0001) BIT_FIELD Edit, Config, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_S65X : 1;                                    // 0x0092(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bIsEditorOnly : 1;                                       // 0x0092(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EZZN[0x1];                                   // 0x0093(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EComponentCreationMethod                                   CreationMethod;                                          // 0x0094(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnComponentActivated;                                    // 0x0095(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnComponentDeactivated;                                  // 0x0096(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DAGU[0x1];                                   // 0x0097(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSimpleMemberReference>                      UCSModifiedProperties;                                   // 0x0098(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2MWN[0x10];                                  // 0x00A8(0x0010) MISSED OFFSET (PADDING)

	public:
		void ToggleActive();
		void SetTickGroup(ETickingGroup NewTickGroup);
		void SetTickableWhenPaused(bool bTickableWhenPaused);
		void SetIsReplicated(bool ShouldReplicate);
		void SetComponentTickIntervalAndCooldown(float TickInterval);
		void SetComponentTickInterval(float TickInterval);
		void SetComponentTickEnabled(bool bEnabled);
		void SetAutoActivate(bool bNewAutoActivate);
		void SetActive(bool bNewActive, bool bReset);
		void RemoveTickPrerequisiteComponent(class UActorComponent* PrerequisiteComponent);
		void RemoveTickPrerequisiteActor(class AActor* PrerequisiteActor);
		void ReceiveTick(float DeltaSeconds);
		void ReceiveEndPlay(EEndPlayReason EndPlayReason);
		void ReceiveBeginPlay();
		void OnRep_IsActive();
		void K2_DestroyComponent(class UObject* Object);
		bool IsComponentTickEnabled();
		bool IsBeingDestroyed();
		bool IsActive();
		class AActor* GetOwner();
		float GetComponentTickInterval();
		void Deactivate();
		bool ComponentHasTag(const class FName& Tag);
		void AddTickPrerequisiteComponent(class UActorComponent* PrerequisiteComponent);
		void AddTickPrerequisiteActor(class AActor* PrerequisiteActor);
		void Activate(bool bReset);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SceneComponent
	 * Size -> 0x0168 (FullSize[0x0220] - InheritedSize[0x00B8])
	 */
	class USceneComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_YZ1I[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class APhysicsVolume>                       PhysicsVolume;                                           // 0x00C0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USceneComponent*                                     AttachParent;                                            // 0x00C8(0x0008) ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                AttachSocketName;                                        // 0x00D0(0x000C) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ZGMS[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class USceneComponent*>                             AttachChildren;                                          // 0x00E0(0x0010) ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class USceneComponent*>                             ClientAttachedChildren;                                  // 0x00F0(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_N03X[0x34];                                  // 0x0100(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             RelativeLocation;                                        // 0x0134(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FRotator                                            RelativeRotation;                                        // 0x0140(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPrivate
		struct FVector                                             RelativeScale3D;                                         // 0x014C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             ComponentVelocity;                                       // 0x0158(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IOEG : 1;                                    // 0x0164(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bComponentToWorldUpdated : 1;                            // 0x0164(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_5UG1 : 1;                                    // 0x0164(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bAbsoluteLocation : 1;                                   // 0x0164(0x0001) BIT_FIELD Edit, BlueprintVisible, Net, RepNotify, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bAbsoluteRotation : 1;                                   // 0x0164(0x0001) BIT_FIELD Edit, BlueprintVisible, Net, RepNotify, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bAbsoluteScale : 1;                                      // 0x0164(0x0001) BIT_FIELD Edit, BlueprintVisible, Net, RepNotify, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bVisible : 1;                                            // 0x0164(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bShouldBeAttached : 1;                                   // 0x0164(0x0001) BIT_FIELD Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bShouldSnapLocationWhenAttached : 1;                     // 0x0165(0x0001) BIT_FIELD Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bShouldSnapRotationWhenAttached : 1;                     // 0x0165(0x0001) BIT_FIELD Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bShouldUpdatePhysicsVolume : 1;                          // 0x0165(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bSkipComponentAndChildrenTransformUpdate : 1;            // 0x0165(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bHiddenInGame : 1;                                       // 0x0165(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bBoundsChangeTriggersStreamingDataRebuild : 1;           // 0x0165(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseAttachParentBound : 1;                               // 0x0165(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FHHZ[0x1];                                   // 0x0166(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EComponentMobility                                         Mobility;                                                // 0x0167(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDetailMode                                                DetailMode;                                              // 0x0168(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0RHF[0x3];                                   // 0x0169(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DetailModeBitMask;                                       // 0x016C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             PhysicsVolumeChangedDelegate;                            // 0x0170(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WE62[0xAF];                                  // 0x0171(0x00AF) MISSED OFFSET (PADDING)

	public:
		void ToggleVisibility(bool bPropagateToChildren);
		bool SnapTo(class USceneComponent* InParent, const class FName& InSocketName);
		void SetWorldScale3D(const struct FVector& NewScale);
		void SetVisibility(bool bNewVisibility, bool bPropagateToChildren);
		void SetSkipComponentAndChildrenTransformUpdate_NoUpdate(bool value);
		void SetSkipComponentAndChildrenTransformUpdate(bool value);
		void SetShouldUpdatePhysicsVolume(bool bInShouldUpdatePhysicsVolume);
		void SetRelativeScale3D(const struct FVector& NewScale3D);
		void SetMobility(EComponentMobility NewMobility);
		void SetHiddenInGame(bool NewHidden, bool bPropagateToChildren);
		void SetAbsolute(bool bNewAbsoluteLocation, bool bNewAbsoluteRotation, bool bNewAbsoluteScale);
		void ResetRelativeTransform();
		void OnRep_Visibility(bool oldValue);
		void OnRep_Transform();
		void OnRep_AttachSocketName();
		void OnRep_AttachParent();
		void OnRep_AttachChildren();
		void K2_SetWorldTransform(const struct FTransform& NewTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_SetWorldRotation(const struct FRotator& NewRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_SetWorldLocationAndRotation(const struct FVector& NewLocation, const struct FRotator& NewRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_SetWorldLocation(const struct FVector& NewLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_SetRelativeTransform(const struct FTransform& NewTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_SetRelativeRotation(const struct FRotator& NewRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_SetRelativeLocationAndRotation(const struct FVector& NewLocation, const struct FRotator& NewRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_SetRelativeLocation(const struct FVector& NewLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		struct FTransform K2_GetComponentToWorld();
		struct FVector K2_GetComponentScale();
		struct FRotator K2_GetComponentRotation();
		struct FVector K2_GetComponentLocation();
		void K2_DetachFromComponent(EDetachmentRule LocationRule, EDetachmentRule RotationRule, EDetachmentRule ScaleRule, bool bCallModify);
		bool K2_AttachToComponent(class USceneComponent* Parent, const class FName& SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, bool bWeldSimulatedBodies);
		bool K2_AttachTo(class USceneComponent* InParent, const class FName& InSocketName, EAttachLocation AttachType, bool bWeldSimulatedBodies);
		void K2_AddWorldTransformKeepScale(const struct FTransform& DeltaTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_AddWorldTransform(const struct FTransform& DeltaTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_AddWorldRotation(const struct FRotator& DeltaRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_AddWorldOffset(const struct FVector& DeltaLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_AddRelativeRotation(const struct FRotator& DeltaRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_AddRelativeLocation(const struct FVector& DeltaLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_AddLocalTransform(const struct FTransform& DeltaTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_AddLocalRotation(const struct FRotator& DeltaRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		void K2_AddLocalOffset(const struct FVector& DeltaLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
		bool IsVisible();
		bool IsSimulatingPhysics(const class FName& BoneName);
		bool IsAnySimulatingPhysics();
		struct FVector GetUpVector();
		struct FTransform GetSocketTransform(const class FName& InSocketName, ERelativeTransformSpace TransformSpace);
		struct FRotator GetSocketRotation(const class FName& InSocketName);
		struct FQuat GetSocketQuaternion(const class FName& InSocketName);
		struct FVector GetSocketLocation(const class FName& InSocketName);
		bool GetSkipComponentAndChildrenTransformUpdate();
		bool GetShouldUpdatePhysicsVolume();
		struct FVector GetRightVector();
		struct FTransform GetRelativeTransform();
		class APhysicsVolume* GetPhysicsVolume();
		void GetParentComponents(TArray<class USceneComponent*>* Parents);
		int32_t GetNumChildrenComponents();
		struct FVector GetForwardVector();
		struct FVector GetComponentVelocity();
		void GetChildrenComponents(bool bIncludeAllDescendants, TArray<class USceneComponent*>* Children);
		class USceneComponent* GetChildComponent(int32_t ChildIndex);
		class FName GetAttachSocketName();
		class USceneComponent* GetAttachParent();
		TArray<class FName> GetAllSocketNames();
		bool DoesSocketExist(const class FName& InSocketName);
		void DetachFromParent(bool bMaintainWorldPosition, bool bCallModify);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PrimitiveComponent
	 * Size -> 0x0260 (FullSize[0x0480] - InheritedSize[0x0220])
	 */
	class UPrimitiveComponent : public USceneComponent
	{
	public:
		float                                                      MinDrawDistance;                                         // 0x0220(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LDMaxDrawDistance;                                       // 0x0224(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CachedMaxDrawDistance;                                   // 0x0228(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESceneDepthPriorityGroup                                   DepthPriorityGroup;                                      // 0x022C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESceneDepthPriorityGroup                                   ViewOwnerDepthPriorityGroup;                             // 0x022D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EIndirectLightingCacheQuality                              IndirectLightingCacheQuality;                            // 0x022E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELightmapType                                              LightmapType;                                            // 0x022F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseMaxLODAsImposter : 1;                                // 0x0230(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bBatchImpostersAsInstances : 1;                          // 0x0230(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNeverDistanceCull : 1;                                  // 0x0230(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L0JU : 4;                                    // 0x0230(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bAlwaysCreatePhysicsState : 1;                           // 0x0230(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceCastStaticShadows : 1;                             // 0x0231(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceToBeInCachedShadowmap : 1;                         // 0x0231(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bGenerateOverlapEvents : 1;                              // 0x0231(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bMultiBodyOverlap : 1;                                   // 0x0231(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTraceComplexOnMove : 1;                                 // 0x0231(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bReturnMaterialOnMove : 1;                               // 0x0231(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseViewOwnerDepthPriorityGroup : 1;                     // 0x0231(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAllowCullDistanceVolume : 1;                            // 0x0231(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHasMotionBlurVelocityMeshes : 1;                        // 0x0232(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YCNK[0x1];                                   // 0x0233(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bRenderCustomColourNoDepth : 1;                          // 0x0234(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R24C[0x3];                                   // 0x0235(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bVisibleInReflectionCaptures : 1;                        // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bVisibleInRealTimeSkyCaptures : 1;                       // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bVisibleInRayTracing : 1;                                // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRenderInMainPass : 1;                                   // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRenderInDepthPass : 1;                                  // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bReceivesDecals : 1;                                     // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOwnerNoSee : 1;                                         // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOnlyOwnerSee : 1;                                       // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTreatAsBackgroundForOcclusion : 1;                      // 0x0239(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseAsOccluder : 1;                                      // 0x0239(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSelectable : 1;                                         // 0x0239(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceMipStreaming : 1;                                  // 0x0239(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHasPerInstanceHitProxies : 1;                           // 0x0239(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CastShadow : 1;                                          // 0x0239(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAffectDynamicIndirectLighting : 1;                      // 0x0239(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAffectDistanceFieldLighting : 1;                        // 0x0239(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastDynamicShadow : 1;                                  // 0x023A(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastStaticShadow : 1;                                   // 0x023A(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDetailMode                                                DetailLevelBeforeCastShadows;                            // 0x023B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ELightingDetailMode                                        DetailLevelBeforeCastDynamicShadows;                     // 0x023C(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_7SF2[0x3];                                   // 0x023C(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              bCastVolumetricTranslucentShadow : 1;                    // 0x0240(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastContactShadow : 1;                                  // 0x0240(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSelfShadowOnly : 1;                                     // 0x0240(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastFarShadow : 1;                                      // 0x0240(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastInsetShadow : 1;                                    // 0x0240(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastCinematicShadow : 1;                                // 0x0240(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastHiddenShadow : 1;                                   // 0x0240(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastShadowAsTwoSided : 1;                               // 0x0240(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLightAsIfStatic : 1;                                    // 0x0241(0x0001) BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLightAttachmentsAsGroup : 1;                            // 0x0241(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bExcludeFromLightAttachmentGroup : 1;                    // 0x0241(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bReceiveMobileCSMShadows : 1;                            // 0x0241(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSingleSampleShadowFromStationaryLights : 1;             // 0x0241(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreRadialImpulse : 1;                                // 0x0241(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreRadialForce : 1;                                  // 0x0241(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bApplyImpulseOnDamage : 1;                               // 0x0241(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bReplicatePhysicsToAutonomousProxy : 1;                  // 0x0242(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFillCollisionUnderneathForNavmesh : 1;                  // 0x0242(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AlwaysLoadOnClient : 1;                                  // 0x0242(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AlwaysLoadOnServer : 1;                                  // 0x0242(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseEditorCompositing : 1;                               // 0x0242(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRenderCustomDepth : 1;                                  // 0x0242(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bVisibleInSceneCaptureOnly : 1;                          // 0x0242(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHiddenInSceneCapture : 1;                               // 0x0242(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9N81[0x1];                                   // 0x0243(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EHasCustomNavigableGeometry                                bHasCustomNavigableGeometry;                             // 0x0244(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QIFD[0x1];                                   // 0x0245(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ECanBeCharacterBase                                        CanCharacterStepUpOn;                                    // 0x0246(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLightingChannels                                   LightingChannels;                                        // 0x0247(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic
		ERendererStencilMask                                       CustomDepthStencilWriteMask;                             // 0x0248(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C2SG[0x3];                                   // 0x0249(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CustomDepthStencilValue;                                 // 0x024C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCustomPrimitiveData                                CustomPrimitiveData;                                     // 0x0250(0x0010) Edit, AdvancedDisplay, NativeAccessSpecifierPrivate
		struct FCustomPrimitiveData                                CustomPrimitiveDataInternal;                             // 0x0260(0x0010) Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2VVT[0x8];                                   // 0x0270(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TranslucencySortPriority;                                // 0x0278(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TranslucencySortDistanceOffset;                          // 0x027C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VisibilityId;                                            // 0x0280(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BX9C[0x4];                                   // 0x0284(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class URuntimeVirtualTexture*>                      RuntimeVirtualTextures;                                  // 0x0288(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int8_t                                                     VirtualTextureLodBias;                                   // 0x0298(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     VirtualTextureCullMips;                                  // 0x0299(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     VirtualTextureMinCoverage;                               // 0x029A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERuntimeVirtualTextureMainPassType                         VirtualTextureRenderPassType;                            // 0x029B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YDW0[0x4];                                   // 0x029C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LpvBiasMultiplier;                                       // 0x02A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4FY3[0x8];                                   // 0x02A4(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BoundsScale;                                             // 0x02AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_48H2[0x10];                                  // 0x02B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      MoveIgnoreActors;                                        // 0x02C0(0x0010) ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic
		TArray<class UPrimitiveComponent*>                         MoveIgnoreComponents;                                    // 0x02D0(0x0010) ExportObject, ZeroConstructor, Transient, DuplicateTransient, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ECMJ[0x10];                                  // 0x02E0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBodyInstance                                       BodyInstance;                                            // 0x02F0(0x0160) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnComponentHit;                                          // 0x0450(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnComponentBeginOverlap;                                 // 0x0451(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnComponentEndOverlap;                                   // 0x0452(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnComponentWake;                                         // 0x0453(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnComponentSleep;                                        // 0x0454(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9QE2[0x1];                                   // 0x0455(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FMulticastSparseDelegate                             OnBeginCursorOver;                                       // 0x0456(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnEndCursorOver;                                         // 0x0457(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnClicked;                                               // 0x0458(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnReleased;                                              // 0x0459(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnInputTouchBegin;                                       // 0x045A(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnInputTouchEnd;                                         // 0x045B(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnInputTouchEnter;                                       // 0x045C(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		class FMulticastSparseDelegate                             OnInputTouchLeave;                                       // 0x045D(0x0001) InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LRAI[0x1A];                                  // 0x045E(0x001A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPrimitiveComponent*                                 LODParentPrimitive;                                      // 0x0478(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		bool WasRecentlyRendered(float Tolerance);
		void WakeRigidBody(const class FName& BoneName);
		void WakeAllRigidBodies();
		void SetWalkableSlopeOverride(const struct FWalkableSlopeOverride& NewOverride);
		void SetVisibleInSceneCaptureOnly(bool bValue);
		void SetVisibleInReflectionCaptures(bool bValue);
		void SetVisibleInRayTracing(bool bValue);
		void SetUseCCD(bool InUseCCD, const class FName& BoneName);
		void SetTranslucentSortPriority(int32_t NewTranslucentSortPriority);
		void SetTranslucencySortDistanceOffset(float NewTranslucencySortDistanceOffset);
		void SetSingleSampleShadowFromStationaryLights(bool bNewSingleSampleShadowFromStationaryLights);
		void SetSimulatePhysics(bool bSimulate);
		void SetRenderInMainPass(bool bValue);
		void SetRenderCustomDepth(bool bValue);
		void SetRenderCustomColourNoDepth(bool bValue);
		void SetReceivesDecals(bool bNewReceivesDecals);
		void SetPhysMaterialOverride(class UPhysicalMaterial* NewPhysMaterial);
		void SetPhysicsMaxAngularVelocityInRadians(float NewMaxAngVel, bool bAddToCurrent, const class FName& BoneName);
		void SetPhysicsMaxAngularVelocityInDegrees(float NewMaxAngVel, bool bAddToCurrent, const class FName& BoneName);
		void SetPhysicsMaxAngularVelocity(float NewMaxAngVel, bool bAddToCurrent, const class FName& BoneName);
		void SetPhysicsLinearVelocity(const struct FVector& NewVel, bool bAddToCurrent, const class FName& BoneName);
		void SetPhysicsAngularVelocityInRadians(const struct FVector& NewAngVel, bool bAddToCurrent, const class FName& BoneName);
		void SetPhysicsAngularVelocityInDegrees(const struct FVector& NewAngVel, bool bAddToCurrent, const class FName& BoneName);
		void SetPhysicsAngularVelocity(const struct FVector& NewAngVel, bool bAddToCurrent, const class FName& BoneName);
		void SetOwnerNoSee(bool bNewOwnerNoSee);
		void SetOnlyOwnerSee(bool bNewOnlyOwnerSee);
		void SetNotifyRigidBodyCollision(bool bNewNotifyRigidBodyCollision);
		void SetMaterialByName(const class FName& MaterialSlotName, class UMaterialInterface* Material);
		void SetMaterial(int32_t ElementIndex, class UMaterialInterface* Material);
		void SetMassScale(const class FName& BoneName, float InMassScale);
		void SetMassOverrideInKg(const class FName& BoneName, float MassInKg, bool bOverrideMass);
		void SetLinearDamping(float InDamping);
		void SetLightingChannels(bool bChannel0, bool bChannel1, bool bChannel2);
		void SetLightAttachmentsAsGroup(bool bInLightAttachmentsAsGroup);
		void SetHiddenInSceneCapture(bool bValue);
		void SetGenerateOverlapEvents(bool bInGenerateOverlapEvents);
		void SetExcludeFromLightAttachmentGroup(bool bInExcludeFromLightAttachmentGroup);
		void SetEnableGravity(bool bGravityEnabled);
		void SetDefaultCustomPrimitiveDataVector4(int32_t DataIndex, const struct FVector4& value);
		void SetDefaultCustomPrimitiveDataVector3(int32_t DataIndex, const struct FVector& value);
		void SetDefaultCustomPrimitiveDataVector2(int32_t DataIndex, const struct FVector2D& value);
		void SetDefaultCustomPrimitiveDataFloat(int32_t DataIndex, float value);
		void SetCustomPrimitiveDataVector4(int32_t DataIndex, const struct FVector4& value);
		void SetCustomPrimitiveDataVector3(int32_t DataIndex, const struct FVector& value);
		void SetCustomPrimitiveDataVector2(int32_t DataIndex, const struct FVector2D& value);
		void SetCustomPrimitiveDataFloat(int32_t DataIndex, float value);
		void SetCustomDepthStencilWriteMask(ERendererStencilMask WriteMaskBit);
		void SetCustomDepthStencilValue(int32_t value);
		void SetCullDistance(float NewCullDistance);
		void SetConstraintMode(EDOFMode ConstraintMode);
		void SetCollisionResponseToChannel(ECollisionChannel Channel, ECollisionResponse NewResponse);
		void SetCollisionResponseToAllChannels(ECollisionResponse NewResponse);
		void SetCollisionProfileName(const class FName& InCollisionProfileName, bool bUpdateOverlaps);
		void SetCollisionObjectType(ECollisionChannel Channel);
		void SetCollisionEnabled(ECollisionEnabled NewType);
		void SetCenterOfMass(const struct FVector& CenterOfMassOffset, const class FName& BoneName);
		void SetCastShadow(bool NewCastShadow);
		void SetCastInsetShadow(bool bInCastInsetShadow);
		void SetCastHiddenShadow(bool NewCastHiddenShadow);
		void SetBoundsScale(float NewBoundsScale);
		void SetAngularDamping(float InDamping);
		void SetAllUseCCD(bool InUseCCD);
		void SetAllPhysicsLinearVelocity(const struct FVector& NewVel, bool bAddToCurrent);
		void SetAllPhysicsAngularVelocityInRadians(const struct FVector& NewAngVel, bool bAddToCurrent);
		void SetAllPhysicsAngularVelocityInDegrees(const struct FVector& NewAngVel, bool bAddToCurrent);
		void SetAllMassScale(float InMassScale);
		struct FVector ScaleByMomentOfInertia(const struct FVector& InputVector, const class FName& BoneName);
		void PutRigidBodyToSleep(const class FName& BoneName);
		bool K2_SphereTraceComponent(const struct FVector& TraceStart, const struct FVector& TraceEnd, float SphereRadius, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, struct FVector* HitLocation, struct FVector* HitNormal, class FName* BoneName, struct FHitResult* OutHit);
		bool K2_SphereOverlapComponent(const struct FVector& InSphereCentre, float InSphereRadius, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, struct FVector* HitLocation, struct FVector* HitNormal, class FName* BoneName, struct FHitResult* OutHit);
		bool K2_LineTraceComponent(const struct FVector& TraceStart, const struct FVector& TraceEnd, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, struct FVector* HitLocation, struct FVector* HitNormal, class FName* BoneName, struct FHitResult* OutHit);
		bool K2_IsQueryCollisionEnabled();
		bool K2_IsPhysicsCollisionEnabled();
		bool K2_IsCollisionEnabled();
		bool K2_BoxOverlapComponent(const struct FVector& InBoxCentre, const struct FBox& InBox, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, struct FVector* HitLocation, struct FVector* HitNormal, class FName* BoneName, struct FHitResult* OutHit);
		bool IsOverlappingComponent(class UPrimitiveComponent* OtherComp);
		bool IsOverlappingActor(class AActor* Other);
		bool IsGravityEnabled();
		bool IsAnyRigidBodyAwake();
		void IgnoreComponentWhenMoving(class UPrimitiveComponent* Component, bool bShouldIgnore);
		void IgnoreActorWhenMoving(class AActor* Actor, bool bShouldIgnore);
		struct FWalkableSlopeOverride GetWalkableSlopeOverride();
		struct FVector GetPhysicsLinearVelocityAtPoint(const struct FVector& Point, const class FName& BoneName);
		struct FVector GetPhysicsLinearVelocity(const class FName& BoneName);
		struct FVector GetPhysicsAngularVelocityInRadians(const class FName& BoneName);
		struct FVector GetPhysicsAngularVelocityInDegrees(const class FName& BoneName);
		struct FVector GetPhysicsAngularVelocity(const class FName& BoneName);
		void GetOverlappingComponents(TArray<class UPrimitiveComponent*>* OutOverlappingComponents);
		void GetOverlappingActors(TArray<class AActor*>* OverlappingActors, class UClass* ClassFilter);
		int32_t GetNumMaterials();
		class UMaterialInterface* GetMaterialFromCollisionFaceIndex(int32_t FaceIndex, int32_t* SectionIndex);
		class UMaterialInterface* GetMaterial(int32_t ElementIndex);
		float GetMassScale(const class FName& BoneName);
		float GetMass();
		float GetLinearDamping();
		struct FVector GetInertiaTensor(const class FName& BoneName);
		bool GetGenerateOverlapEvents();
		ECollisionResponse GetCollisionResponseToChannel(ECollisionChannel Channel);
		class FName GetCollisionProfileName();
		ECollisionChannel GetCollisionObjectType();
		ECollisionEnabled GetCollisionEnabled();
		float GetClosestPointOnCollision(const struct FVector& Point, struct FVector* OutPointOnBody, const class FName& BoneName);
		struct FVector GetCenterOfMass(const class FName& BoneName);
		float GetAngularDamping();
		class UMaterialInstanceDynamic* CreateDynamicMaterialInstance(int32_t ElementIndex, class UMaterialInterface* SourceMaterial, const class FName& OptionalName);
		class UMaterialInstanceDynamic* CreateAndSetMaterialInstanceDynamicFromMaterial(int32_t ElementIndex, class UMaterialInterface* Parent);
		class UMaterialInstanceDynamic* CreateAndSetMaterialInstanceDynamic(int32_t ElementIndex);
		TArray<class UPrimitiveComponent*> CopyArrayOfMoveIgnoreComponents();
		TArray<class AActor*> CopyArrayOfMoveIgnoreActors();
		void ClearMoveIgnoreComponents();
		void ClearMoveIgnoreActors();
		bool CanCharacterStepUp(class APawn* Pawn);
		void AddTorqueInRadians(const struct FVector& Torque, const class FName& BoneName, bool bAccelChange);
		void AddTorqueInDegrees(const struct FVector& Torque, const class FName& BoneName, bool bAccelChange);
		void AddTorque(const struct FVector& Torque, const class FName& BoneName, bool bAccelChange);
		void AddRadialImpulse(const struct FVector& Origin, float Radius, float Strength, ERadialImpulseFalloff Falloff, bool bVelChange);
		void AddRadialForce(const struct FVector& Origin, float Radius, float Strength, ERadialImpulseFalloff Falloff, bool bAccelChange);
		void AddImpulseAtLocation(const struct FVector& Impulse, const struct FVector& Location, const class FName& BoneName);
		void AddImpulse(const struct FVector& Impulse, const class FName& BoneName, bool bVelChange);
		void AddForceAtLocationLocal(const struct FVector& force, const struct FVector& Location, const class FName& BoneName);
		void AddForceAtLocation(const struct FVector& force, const struct FVector& Location, const class FName& BoneName);
		void AddForce(const struct FVector& force, const class FName& BoneName, bool bAccelChange);
		void AddAngularImpulseInRadians(const struct FVector& Impulse, const class FName& BoneName, bool bVelChange);
		void AddAngularImpulseInDegrees(const struct FVector& Impulse, const class FName& BoneName, bool bVelChange);
		void AddAngularImpulse(const struct FVector& Impulse, const class FName& BoneName, bool bVelChange);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MeshComponent
	 * Size -> 0x0050 (FullSize[0x04D0] - InheritedSize[0x0480])
	 */
	class UMeshComponent : public UPrimitiveComponent
	{
	public:
		TArray<class UMaterialInterface*>                          OverrideMaterials;                                       // 0x0480(0x0010) Edit, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPublic
		TArray<class UMaterialInterface*>                          BackupMaterials;                                         // 0x0490(0x0010) Edit, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_13S6[0x28];                                  // 0x04A0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bEnableMaterialParameterCaching : 1;                     // 0x04C8(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_YSPZ[0x7];                                   // 0x04C9(0x0007) MISSED OFFSET (PADDING)

	public:
		void SetVectorParameterValueOnMaterials(const class FName& ParameterName, const struct FVector& ParameterValue);
		void SetScalarParameterValueOnMaterials(const class FName& ParameterName, float ParameterValue);
		bool SaveMaterials();
		bool RestoreMaterials();
		void PrestreamTextures(float Seconds, bool bPrioritizeCharacterTextures, int32_t CinematicTextureGroups);
		bool IsMaterialSlotNameValid(const class FName& MaterialSlotName);
		TArray<class FName> GetMaterialSlotNames();
		TArray<class UMaterialInterface*> GetMaterials();
		int32_t GetMaterialIndex(const class FName& MaterialSlotName);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SkinnedMeshComponent
	 * Size -> 0x0270 (FullSize[0x0740] - InheritedSize[0x04D0])
	 */
	class USkinnedMeshComponent : public UMeshComponent
	{
	public:
		unsigned char                                              UnknownData_7PBD[0x8];                                   // 0x04D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeletalMesh*                                       SkeletalMesh;                                            // 0x04D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class USkinnedMeshComponent>                SelectedMasterPoseComponent;                             // 0x04E0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class USkinnedMeshComponent>                MasterPoseComponent;                                     // 0x04E8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<ESkinCacheUsage>                                    SkinCacheUsage;                                          // 0x04F0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FVertexOffsetUsage>                          VertexOffsetUsage;                                       // 0x0500(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CF0X[0x108];                                 // 0x0510(0x0108) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPhysicsAsset*                                       PhysicsAssetOverride;                                    // 0x0618(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ForcedLodModel;                                          // 0x0620(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinLodModel;                                             // 0x0624(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseMasterPoseLod;                                       // 0x0628(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D8AY[0x7];                                   // 0x0629(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UStaticMeshComponent*>                        StaticMeshesUsingSameLOD;                                // 0x0630(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GEO5[0x8];                                   // 0x0640(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StreamingDistanceMultiplier;                             // 0x0648(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JOUN[0xC];                                   // 0x064C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSkelMeshComponentLODInfo>                   LODInfo;                                                 // 0x0658(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DSRF[0x24];                                  // 0x0668(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EVisibilityBasedAnimTickOption                             VisibilityBasedAnimTickOption;                           // 0x068C(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1MPZ[0x1];                                   // 0x068D(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              UnknownData_6BWI : 3;                                    // 0x068E(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bOverrideMinLod : 1;                                     // 0x068E(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseBoundsFromMasterPoseComponent : 1;                   // 0x068E(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceWireframe : 1;                                     // 0x068E(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisplayBones : 1;                                       // 0x068E(0x0001) BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableMorphTarget : 1;                                 // 0x068E(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHideSkin : 1;                                           // 0x068F(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPerBoneMotionBlur : 1;                                  // 0x068F(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bComponentUseFixedSkelBounds : 1;                        // 0x068F(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bConsiderAllBodiesForBounds : 1;                         // 0x068F(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSyncAttachParentLOD : 1;                                // 0x068F(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCanHighlightSelectedSections : 1;                       // 0x068F(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRecentlyRendered : 1;                                   // 0x068F(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAnySlaveRecentlyRendered : 1;                           // 0x068F(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastCapsuleDirectShadow : 1;                            // 0x0690(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastCapsuleIndirectShadow : 1;                          // 0x0690(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCPUSkinning : 1;                                        // 0x0690(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableUpdateRateOptimizations : 1;                      // 0x0690(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7PBR[0x7];                                   // 0x0691(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTresholdToFrameSkip>                        AnimationTresholdToFrameSkip;                            // 0x0698(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              bDisplayDebugUpdateRateOptimizations : 1;                // 0x06A8(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRenderStatic : 1;                                       // 0x06A8(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreMasterPoseComponentLOD : 1;                       // 0x06A8(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F8UT : 2;                                    // 0x06A8(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bCachedLocalBoundsUpToDate : 1;                          // 0x06A8(0x0001) BIT_FIELD Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_VHDV : 1;                                    // 0x06A8(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bForceMeshObjectUpdate : 1;                              // 0x06A8(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Q3EF[0x3];                                   // 0x06A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CapsuleIndirectShadowMinVisibility;                      // 0x06AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4TAY[0x14];                                  // 0x06B0(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBoxSphereBounds                                    CachedWorldSpaceBounds;                                  // 0x06C4(0x001C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FMatrix                                             CachedWorldToLocalTransform;                             // 0x06E0(0x0040) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_VY9J[0x20];                                  // 0x0720(0x0020) MISSED OFFSET (PADDING)

	public:
		void UnloadSkinWeightProfile(const class FName& InProfileName);
		void UnHideBoneByName(const class FName& BoneName);
		void TransformToBoneSpace(const class FName& BoneName, const struct FVector& InPosition, const struct FRotator& InRotation, struct FVector* OutPosition, struct FRotator* OutRotation);
		void TransformFromBoneSpace(const class FName& BoneName, const struct FVector& InPosition, const struct FRotator& InRotation, struct FVector* OutPosition, struct FRotator* OutRotation);
		void ShowMaterialSection(int32_t MaterialID, int32_t SectionIndex, bool bShow, int32_t LODIndex);
		void ShowAllMaterialSections(int32_t LODIndex);
		void SetVertexOffsetUsage(int32_t LODIndex, int32_t Usage);
		void SetVertexColorOverride_LinearColor(int32_t LODIndex, TArray<struct FLinearColor> VertexColors);
		bool SetSkinWeightProfile(const class FName& InProfileName);
		void SetSkinWeightOverride(int32_t LODIndex, TArray<struct FSkelMeshSkinWeightInfo> SkinWeights);
		void SetSkeletalMesh(class USkeletalMesh* NewMesh, bool bReinitPose);
		void SetRenderStatic(bool bNewValue);
		void SetPreSkinningOffsets(int32_t LODIndex, TArray<struct FVector> Offsets);
		void SetPostSkinningOffsets(int32_t LODIndex, TArray<struct FVector> Offsets);
		void SetPhysicsAsset(class UPhysicsAsset* NewPhysicsAsset, bool bForceReInit);
		void SetMinLOD(int32_t InNewMinLOD);
		void SetMasterPoseComponent(class USkinnedMeshComponent* NewMasterBoneComponent, bool bForceUpdate);
		void SetForcedLOD(int32_t InNewForcedLOD);
		void SetCastCapsuleIndirectShadow(bool bNewValue);
		void SetCastCapsuleDirectShadow(bool bNewValue);
		void SetCapsuleIndirectShadowMinVisibility(float NewValue);
		bool IsUsingSkinWeightProfile();
		bool IsMaterialSectionShown(int32_t MaterialID, int32_t LODIndex);
		bool IsBoneHiddenByName(const class FName& BoneName);
		void HideBoneByName(const class FName& BoneName, EPhysBodyOp PhysBodyOption);
		int32_t GetVertexOffsetUsage(int32_t LODIndex);
		bool GetTwistAndSwingAngleOfDeltaRotationFromRefPose(const class FName& BoneName, float* OutTwistAngle, float* OutSwingAngle);
		class FName GetSocketBoneName(const class FName& InSocketName);
		struct FVector GetRefPosePosition(int32_t BoneIndex);
		class FName GetParentBone(const class FName& BoneName);
		int32_t GetNumLODs();
		int32_t GetNumBones();
		int32_t GetForcedLOD();
		struct FTransform GetDeltaTransformFromRefPose(const class FName& BoneName, const class FName& BaseName);
		class FName GetCurrentSkinWeightProfileName();
		class FName GetBoneName(int32_t BoneIndex);
		int32_t GetBoneIndex(const class FName& BoneName);
		class FName FindClosestBone_K2(const struct FVector& TestLocation, struct FVector* BoneLocation, float IgnoreScale, bool bRequirePhysicsAsset);
		void ClearVertexColorOverride(int32_t LODIndex);
		void ClearSkinWeightProfile();
		void ClearSkinWeightOverride(int32_t LODIndex);
		bool BoneIsChildOf(const class FName& BoneName, const class FName& ParentBoneName);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.StreamableRenderAsset
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	class UStreamableRenderAsset : public UObject
	{
	public:
		unsigned char                                              UnknownData_V3DC[0x18];                                  // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     ForceMipLevelsToBeResidentTimestamp;                     // 0x0048(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    NumCinematicMipLevels;                                   // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StreamingIndex;                                          // 0x0054(0x0004) ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NonTransactional, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    CachedCombinedLODBias;                                   // 0x0058(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              NeverStream : 1;                                         // 0x005C(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bGlobalForceMipLevelsToBeResident : 1;                   // 0x005C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHasStreamingUpdatePending : 1;                          // 0x005C(0x0001) BIT_FIELD Transient, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceMiplevelsToBeResident : 1;                         // 0x005C(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreStreamingMipBias : 1;                             // 0x005C(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseCinematicMipLevels : 1;                              // 0x005C(0x0001) BIT_FIELD Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_HRD4[0xB];                                   // 0x005D(0x000B) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SkeletalMesh
	 * Size -> 0x0340 (FullSize[0x03A8] - InheritedSize[0x0068])
	 */
	class USkeletalMesh : public UStreamableRenderAsset
	{
	public:
		unsigned char                                              UnknownData_X9QH[0x20];                                  // 0x0068(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeleton*                                           Skeleton;                                                // 0x0088(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBoxSphereBounds                                    ImportedBounds;                                          // 0x0090(0x001C) ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
		struct FBoxSphereBounds                                    ExtendedBounds;                                          // 0x00AC(0x001C) ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
		struct FVector                                             PositiveBoundsExtension;                                 // 0x00C8(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             NegativeBoundsExtension;                                 // 0x00D4(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FSkeletalMaterial>                           Materials;                                               // 0x00E0(0x0010) Edit, BlueprintVisible, ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic
		TArray<struct FBoneMirrorInfo>                             SkelMirrorTable;                                         // 0x00F0(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSkeletalMeshLODInfo>                        LODInfo;                                                 // 0x0100(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_KLG2[0x50];                                  // 0x0110(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPerPlatformInt                                     MinLOD;                                                  // 0x0160(0x0004) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FPerPlatformBool                                    DisableBelowMinLodStripping;                             // 0x0164(0x0001) Edit, NoDestructor, NativeAccessSpecifierPublic
		EAxis                                                      SkelMirrorAxis;                                          // 0x0165(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAxis                                                      SkelMirrorFlipAxis;                                      // 0x0166(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseFullPrecisionUVs : 1;                                // 0x0167(0x0001) BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseHighPrecisionTangentBasis : 1;                       // 0x0167(0x0001) BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHasBeenSimplified : 1;                                  // 0x0167(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHasVertexColors : 1;                                    // 0x0167(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RRD0 : 1;                                    // 0x0167(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bEnablePerPolyCollision : 1;                             // 0x0167(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBodySetup*                                          BodySetup;                                               // 0x0168(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicsAsset*                                       PhysicsAsset;                                            // 0x0170(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicsAsset*                                       ShadowPhysicsAsset;                                      // 0x0178(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UNodeMappingContainer*>                       NodeMappingData;                                         // 0x0180(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bSupportRayTracing : 1;                                  // 0x0190(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OWUY[0x7];                                   // 0x0191(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMorphTarget*>                                MorphTargets;                                            // 0x0198(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E5Q2[0x178];                                 // 0x01A8(0x0178) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              PostProcessAnimBlueprint;                                // 0x0320(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UClothingAssetBase*>                          MeshClothingAssets;                                      // 0x0328(0x0010) Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSkeletalMeshSamplingInfo                           SamplingInfo;                                            // 0x0338(0x0030) Edit, Protected, NativeAccessSpecifierProtected
		TArray<class UAssetUserData*>                              AssetUserData;                                           // 0x0368(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected
		TArray<class USkeletalMeshSocket*>                         Sockets;                                                 // 0x0378(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_53GX[0x10];                                  // 0x0388(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSkinWeightProfileInfo>                      SkinWeightProfiles;                                      // 0x0398(0x0010) Edit, EditFixedSize, ZeroConstructor, Protected, NativeAccessSpecifierProtected

	public:
		void SetMorphTargets(TArray<class UMorphTarget*> InMorphTargets);
		void SetMeshClothingAssets(TArray<class UClothingAssetBase*> InMeshClothingAssets);
		void SetMaterials(TArray<struct FSkeletalMaterial> InMaterials);
		void SetLODSettings(class USkeletalMeshLODSettings* InLODSettings);
		void SetDefaultAnimatingRig();
		int32_t NumSockets();
		TArray<class FString> K2_GetAllMorphTargetNames();
		bool IsSectionUsingCloth(int32_t InSectionIndex, bool bCheckCorrespondingSections);
		class USkeletalMeshSocket* GetSocketByIndex(int32_t Index);
		class USkeleton* GetSkeleton();
		class UPhysicsAsset* GetShadowPhysicsAsset();
		class UPhysicsAsset* GetPhysicsAsset();
		TArray<class UNodeMappingContainer*> GetNodeMappingData();
		class UNodeMappingContainer* GetNodeMappingContainer(class UBlueprint* SourceAsset);
		TArray<class UMorphTarget*> GetMorphTargets();
		TArray<class UClothingAssetBase*> GetMeshClothingAssets();
		TArray<struct FSkeletalMaterial> GetMaterials();
		class USkeletalMeshLODSettings* GetLODSettings();
		struct FBoxSphereBounds GetImportedBounds();
		void GetDefaultAnimatingRig();
		struct FBoxSphereBounds GetBounds();
		class USkeletalMeshSocket* FindSocketInfo(const class FName& InSocketName, struct FTransform* OutTransform, int32_t* OutBoneIndex, int32_t* OutIndex);
		class USkeletalMeshSocket* FindSocketAndIndex(const class FName& InSocketName, int32_t* OutIndex);
		class USkeletalMeshSocket* FindSocket(const class FName& InSocketName);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AssetImportData
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAssetImportData : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AssetUserData
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAssetUserData : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.FXSystemComponent
	 * Size -> 0x0000 (FullSize[0x0480] - InheritedSize[0x0480])
	 */
	class UFXSystemComponent : public UPrimitiveComponent
	{
	public:
		void SetVectorParameter(const class FName& ParameterName, const struct FVector& Param);
		void SetUseAutoManageAttachment(bool bAutoManage);
		void SetIntParameter(const class FName& ParameterName, int32_t Param);
		void SetFloatParameter(const class FName& ParameterName, float Param);
		void SetEmitterEnable(const class FName& EmitterName, bool bNewEnableState);
		void SetColorParameter(const class FName& ParameterName, const struct FLinearColor& Param);
		void SetBoolParameter(const class FName& ParameterName, bool Param);
		void SetAutoAttachmentParameters(class USceneComponent* Parent, const class FName& SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule);
		void SetActorParameter(const class FName& ParameterName, class AActor* Param);
		void ReleaseToPool();
		class UFXSystemAsset* GetFXSystemAsset();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.FXSystemAsset
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UFXSystemAsset : public UObject
	{
	public:
		uint32_t                                                   MaxPoolSize;                                             // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   PoolPrimeSize;                                           // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimNotify
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UAnimNotify : public UObject
	{
	public:
		unsigned char                                              UnknownData_6VNF[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (PADDING)

	public:
		bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
		class FString GetNotifyName();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimNotifyState
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UAnimNotifyState : public UObject
	{
	public:
		unsigned char                                              UnknownData_0EL7[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)

	public:
		bool Received_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);
		bool Received_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
		bool Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);
		class FString GetNotifyName();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Subsystem
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class USubsystem : public UObject
	{
	public:
		unsigned char                                              UnknownData_0U3I[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.GameInstanceSubsystem
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UGameInstanceSubsystem : public USubsystem
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Brush
	 * Size -> 0x0038 (FullSize[0x0268] - InheritedSize[0x0230])
	 */
	class ABrush : public AActor
	{
	public:
		EBrushType                                                 BrushType;                                               // 0x0230(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q5AA[0x3];                                   // 0x0231(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FColor                                              BrushColor;                                              // 0x0234(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PolyFlags;                                               // 0x0238(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bColored : 1;                                            // 0x023C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSolidWhenSelected : 1;                                  // 0x023C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPlaceableFromClassBrowser : 1;                          // 0x023C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNotForClientOrServer : 1;                               // 0x023C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XTVR[0x3];                                   // 0x023D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UModel*                                              Brush;                                                   // 0x0240(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBrushComponent*                                     BrushComponent;                                          // 0x0248(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bInManipulation : 1;                                     // 0x0250(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VNLP[0x7];                                   // 0x0251(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FGeomSelection>                              SavedSelections;                                         // 0x0258(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Volume
	 * Size -> 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
	 */
	class AVolume : public ABrush
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.World
	 * Size -> 0x0780 (FullSize[0x07B0] - InheritedSize[0x0030])
	 */
	class UWorld : public UObject
	{
	public:
		static class UWorld**                                      GWorld;                                                  // 0x0000(0x0008) PREDEFINED PROPERTY
		unsigned char                                              UnknownData_H93A[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULevel*                                              PersistentLevel;                                         // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UNetDriver*                                          NetDriver;                                               // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULineBatchComponent*                                 LineBatcher;                                             // 0x0048(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULineBatchComponent*                                 PersistentLineBatcher;                                   // 0x0050(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULineBatchComponent*                                 ForegroundLineBatcher;                                   // 0x0058(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AGameNetworkManager*                                 NetworkManager;                                          // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicsCollisionHandler*                            PhysicsCollisionHandler;                                 // 0x0068(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UObject*>                                     ExtraReferencedObjects;                                  // 0x0070(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		TArray<class UObject*>                                     PerModuleDataObjects;                                    // 0x0080(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2Q3D[0x8];                                   // 0x0090(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ULevelStreaming*>                             StreamingLevels;                                         // 0x0098(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		struct FStreamingLevelsToConsider                          StreamingLevelsToConsider;                               // 0x00A8(0x0028) Transient, DuplicateTransient, NativeAccessSpecifierPublic
		class FString                                              StreamingLevelsPrefix;                                   // 0x00D0(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULevel*                                              CurrentLevelPendingVisibility;                           // 0x00E0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ULevel*                                              CurrentLevelPendingInvisibility;                         // 0x00E8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDemoNetDriver*                                      DemoNetDriver;                                           // 0x00F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AParticleEventManager*                               MyParticleEventManager;                                  // 0x00F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APhysicsVolume*                                      DefaultPhysicsVolume;                                    // 0x0100(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ONEW[0x16];                                  // 0x0108(0x0016) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              UnknownData_IVV2 : 2;                                    // 0x011E(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bAreConstraintsDirty : 1;                                // 0x011E(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_95JW[0x1];                                   // 0x011F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UNavigationSystemBase*                               NavigationSystem;                                        // 0x0120(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AGameModeBase*                                       AuthorityGameMode;                                       // 0x0128(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AGameStateBase*                                      GameState;                                               // 0x0130(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAISystemBase*                                       AISystem;                                                // 0x0138(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAvoidanceManager*                                   AvoidanceManager;                                        // 0x0140(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class ULevel*>                                      Levels;                                                  // 0x0148(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<struct FLevelCollection>                            LevelCollections;                                        // 0x0158(0x0010) ZeroConstructor, Transient, NonTransactional, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_D7VB[0x28];                                  // 0x0168(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGameInstance*                                       OwningGameInstance;                                      // 0x0190(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UMaterialParameterCollectionInstance*>        ParameterCollectionInstances;                            // 0x0198(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class UCanvas*                                             CanvasForRenderingToTarget;                              // 0x01A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCanvas*                                             CanvasForDrawMaterialToRenderTarget;                     // 0x01B0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_X3T2[0x50];                                  // 0x01B8(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPhysicsFieldComponent*                              PhysicsField;                                            // 0x0208(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ComponentsThatNeedPreEndOfFrameSync[0x50];               // 0x0210(0x0050) UNKNOWN PROPERTY: SetProperty
		TArray<class UActorComponent*>                             ComponentsThatNeedEndOfFrameUpdate;                      // 0x0260(0x0010) ExportObject, ZeroConstructor, Transient, NonTransactional, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class UActorComponent*>                             ComponentsThatNeedEndOfFrameUpdate_OnGameThread;         // 0x0270(0x0010) ExportObject, ZeroConstructor, Transient, NonTransactional, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EGWN[0x370];                                 // 0x0280(0x0370) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWorldComposition*                                   WorldComposition;                                        // 0x05F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_17AE[0x98];                                  // 0x05F8(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWorldPSCPool                                       PSCPool;                                                 // 0x0690(0x0058) ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_GOD8[0xC8];                                  // 0x06E8(0x00C8) MISSED OFFSET (PADDING)

	public:
		class AWorldSettings* K2_GetWorldSettings();
		void HandleTimelineScrubbed();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrack
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	class UInterpTrack : public UObject
	{
	public:
		unsigned char                                              UnknownData_70MS[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UInterpTrack*>                                SubTracks;                                               // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UClass*                                              TrackInstClass;                                          // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETrackActiveCondition                                      ActiveCondition;                                         // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MXYK[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TrackTitle;                                              // 0x0060(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOnePerGroup : 1;                                        // 0x0070(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDirGroupOnly : 1;                                       // 0x0070(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableTrack : 1;                                       // 0x0070(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bIsSelected : 1;                                         // 0x0070(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bIsAnimControlTrack : 1;                                 // 0x0070(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSubTrackOnly : 1;                                       // 0x0070(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bVisible : 1;                                            // 0x0070(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsRecording : 1;                                        // 0x0070(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QB6N[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackVectorBase
	 * Size -> 0x0020 (FullSize[0x0098] - InheritedSize[0x0078])
	 */
	class UInterpTrackVectorBase : public UInterpTrack
	{
	public:
		struct FInterpCurveVector                                  VectorTrack;                                             // 0x0078(0x0018) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurveTension;                                            // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZF4O[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackFloatBase
	 * Size -> 0x0020 (FullSize[0x0098] - InheritedSize[0x0078])
	 */
	class UInterpTrackFloatBase : public UInterpTrack
	{
	public:
		struct FInterpCurveFloat                                   FloatTrack;                                              // 0x0078(0x0018) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurveTension;                                            // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WA57[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInst
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UInterpTrackInst : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DataAsset
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UDataAsset : public UObject
	{
	public:
		class UClass*                                              NativeClass;                                             // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PrimaryDataAsset
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UPrimaryDataAsset : public UDataAsset
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpression
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UMaterialExpression : public UObject
	{
	public:
		class UMaterial*                                           Material;                                                // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialFunction*                                   Function;                                                // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsParameterExpression : 1;                              // 0x0040(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_STPO[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTextureBase
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionTextureBase : public UMaterialExpression
	{
	public:
		class UTexture*                                            Texture;                                                 // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTextureSample
	 * Size -> 0x0020 (FullSize[0x0070] - InheritedSize[0x0050])
	 */
	class UMaterialExpressionTextureSample : public UMaterialExpressionTextureBase
	{
	public:
		struct FExpressionInput                                    Coordinates;                                             // 0x0050(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TN1U[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTextureSampleParameter
	 * Size -> 0x0028 (FullSize[0x0098] - InheritedSize[0x0070])
	 */
	class UMaterialExpressionTextureSampleParameter : public UMaterialExpressionTextureSample
	{
	public:
		class FName                                                ParameterName;                                           // 0x0070(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               ExpressionGUID;                                          // 0x007C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Group;                                                   // 0x008C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTextureSampleParameter2D
	 * Size -> 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
	 */
	class UMaterialExpressionTextureSampleParameter2D : public UMaterialExpressionTextureSampleParameter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Pawn
	 * Size -> 0x0060 (FullSize[0x0290] - InheritedSize[0x0230])
	 */
	class APawn : public AActor
	{
	public:
		unsigned char                                              UnknownData_D0R5[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bUseControllerRotationPitch : 1;                         // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseControllerRotationYaw : 1;                           // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseControllerRotationRoll : 1;                          // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCanAffectNavigationGeneration : 1;                      // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_55SR[0x3];                                   // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BaseEyeHeight;                                           // 0x023C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAutoReceiveInput                                          AutoPossessPlayer;                                       // 0x0240(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAutoPossessAI                                             AutoPossessAI;                                           // 0x0241(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RemoteViewPitch;                                         // 0x0242(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OY38[0x5];                                   // 0x0243(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              AIControllerClass;                                       // 0x0248(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerState*                                        PlayerState;                                             // 0x0250(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Q3V9[0x8];                                   // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AController*                                         LastHitBy;                                               // 0x0260(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AController*                                         Controller;                                              // 0x0268(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AUKG[0x4];                                   // 0x0270(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             ControlInputVector;                                      // 0x0274(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             LastControlInputVector;                                  // 0x0280(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_GMRE[0x4];                                   // 0x028C(0x0004) MISSED OFFSET (PADDING)

	public:
		void SpawnDefaultController();
		void SetCanAffectNavigationGeneration(bool bNewValue, bool bForceUpdate);
		void ReceiveUnpossessed(class AController* OldController);
		void ReceivePossessed(class AController* NewController);
		void PawnMakeNoise(float Loudness, const struct FVector& NoiseLocation, bool bUseNoiseMakerLocation, class AActor* NoiseMaker);
		void OnRep_PlayerState();
		void OnRep_Controller();
		void LaunchPawn(const struct FVector& LaunchVelocity, bool bXYOverride, bool bZOverride);
		struct FVector K2_GetMovementInputVector();
		bool IsPlayerControlled();
		bool IsPawnControlled();
		bool IsMoveInputIgnored();
		bool IsLocallyControlled();
		bool IsControlled();
		bool IsBotControlled();
		struct FVector GetPendingMovementInputVector();
		struct FVector GetNavAgentLocation();
		class UPawnMovementComponent* GetMovementComponent();
		class AActor* STATIC_GetMovementBaseActor(class APawn* Pawn);
		struct FVector GetLastMovementInputVector();
		struct FRotator GetControlRotation();
		class AController* GetController();
		struct FRotator GetBaseAimRotation();
		void DetachFromControllerPendingDestroy();
		struct FVector ConsumeMovementInputVector();
		void AddMovementInput(const struct FVector& WorldDirection, float ScaleValue, bool bForce);
		void AddControllerYawInput(float Val);
		void AddControllerRollInput(float Val);
		void AddControllerPitchInput(float Val);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Character
	 * Size -> 0x0240 (FullSize[0x04D0] - InheritedSize[0x0290])
	 */
	class ACharacter : public APawn
	{
	public:
		class USkeletalMeshComponent*                              Mesh;                                                    // 0x0290(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCharacterMovementComponent*                         CharacterMovement;                                       // 0x0298(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCapsuleComponent*                                   CapsuleComponent;                                        // 0x02A0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FBasedMovementInfo                                  BasedMovement;                                           // 0x02A8(0x0030) NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		struct FBasedMovementInfo                                  ReplicatedBasedMovement;                                 // 0x02D8(0x0030) Net, RepNotify, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		float                                                      AnimRootMotionTranslationScale;                          // 0x0308(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             BaseTranslationOffset;                                   // 0x030C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KWCI[0x8];                                   // 0x0318(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FQuat                                               BaseRotationOffset;                                      // 0x0320(0x0010) IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		float                                                      ReplicatedServerLastTransformUpdateTimeStamp;            // 0x0330(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ReplayLastTransformUpdateTimeStamp;                      // 0x0334(0x0004) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              ReplicatedMovementMode;                                  // 0x0338(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bInBaseReplication;                                      // 0x0339(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_4EMY[0x2];                                   // 0x033A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CrouchedEyeHeight;                                       // 0x033C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsCrouched : 1;                                         // 0x0340(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bProxyIsJumpForceApplied : 1;                            // 0x0340(0x0001) BIT_FIELD Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPressedJump : 1;                                        // 0x0340(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bClientUpdating : 1;                                     // 0x0340(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bClientWasFalling : 1;                                   // 0x0340(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bClientResimulateRootMotion : 1;                         // 0x0340(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bClientResimulateRootMotionSources : 1;                  // 0x0340(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSimGravityDisabled : 1;                                 // 0x0340(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bClientCheckEncroachmentOnNetUpdate : 1;                 // 0x0341(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bServerMoveIgnoreRootMotion : 1;                         // 0x0341(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bWasJumping : 1;                                         // 0x0341(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SPKX[0x2];                                   // 0x0342(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      JumpKeyHoldTime;                                         // 0x0344(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JumpForceTimeRemaining;                                  // 0x0348(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProxyJumpForceStartedTime;                               // 0x034C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JumpMaxHoldTime;                                         // 0x0350(0x0004) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    JumpMaxCount;                                            // 0x0354(0x0004) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    JumpCurrentCount;                                        // 0x0358(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    JumpCurrentCountPreJump;                                 // 0x035C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OMWZ[0x8];                                   // 0x0360(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnReachedJumpApex;                                       // 0x0368(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NK6V[0x10];                                  // 0x0378(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             MovementModeChangedDelegate;                             // 0x0388(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnCharacterMovementUpdated;                              // 0x0398(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FRootMotionSourceGroup                              SavedRootMotion;                                         // 0x03A8(0x0038) Transient, NativeAccessSpecifierPublic
		struct FRootMotionMovementParams                           ClientRootMotionParams;                                  // 0x03E0(0x0040) Transient, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FSimulatedRootMotionReplicatedMove>          RootMotionRepMoves;                                      // 0x0420(0x0010) ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRepRootMotionMontage                               RepRootMotion;                                           // 0x0430(0x0098) Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       UseMovementPrediction;                                   // 0x04C8(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2FWM[0x7];                                   // 0x04C9(0x0007) MISSED OFFSET (PADDING)

	public:
		void UnCrouch(bool bClientSimulation);
		void StopJumping();
		void StopAnimMontage(class UAnimMontage* AnimMontage);
		void ServerReceiveInput(float Timestamp, const struct FVector_NetQuantize10& InAccel, unsigned char CompressedMoveFlags, unsigned char ClientRoll, uint32_t View);
		void ServerMovePacked(const struct FCharacterServerMovePackedBits& PackedBits);
		void ServerMoveOld(float OldTimeStamp, const struct FVector_NetQuantize10& OldAccel, unsigned char OldMoveFlags);
		void ServerMoveNoBase(float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char CompressedMoveFlags, unsigned char ClientRoll, uint32_t View, unsigned char ClientMovementMode);
		void ServerMoveDualNoBase(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, unsigned char PendingFlags, uint32_t View0, float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char NewFlags, unsigned char ClientRoll, uint32_t View, unsigned char ClientMovementMode);
		void ServerMoveDualHybridRootMotion(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, unsigned char PendingFlags, uint32_t View0, float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char NewFlags, unsigned char ClientRoll, uint32_t View, class UPrimitiveComponent* ClientMovementBase, const class FName& ClientBaseBoneName, unsigned char ClientMovementMode);
		void ServerMoveDual(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, unsigned char PendingFlags, uint32_t View0, float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char NewFlags, unsigned char ClientRoll, uint32_t View, class UPrimitiveComponent* ClientMovementBase, const class FName& ClientBaseBoneName, unsigned char ClientMovementMode);
		void ServerMove(float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char CompressedMoveFlags, unsigned char ClientRoll, uint32_t View, class UPrimitiveComponent* ClientMovementBase, const class FName& ClientBaseBoneName, unsigned char ClientMovementMode);
		void RootMotionDebugClientPrintOnScreen(const class FString& inString);
		float PlayAnimMontage(class UAnimMontage* AnimMontage, float InPlayRate, const class FName& StartSectionName);
		void OnWalkingOffLedge(const struct FVector& PreviousFloorImpactNormal, const struct FVector& PreviousFloorContactNormal, const struct FVector& PreviousLocation, float TimeDelta);
		void OnRep_RootMotion();
		void OnRep_ReplicatedBasedMovement();
		void OnRep_ReplayLastTransformUpdateTimeStamp();
		void OnRep_IsCrouched();
		void OnLaunched(const struct FVector& LaunchVelocity, bool bXYOverride, bool bZOverride);
		void OnLanded(const struct FHitResult& Hit);
		void OnJumped();
		void LaunchCharacter(const struct FVector& LaunchVelocity, bool bXYOverride, bool bZOverride);
		void K2_UpdateCustomMovement(float DeltaTime);
		void K2_OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
		void K2_OnMovementModeChanged(EMovementMode PrevMovementMode, EMovementMode NewMovementMode, unsigned char PrevCustomMode, unsigned char NewCustomMode);
		void K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
		void Jump();
		bool IsPlayingRootMotion();
		bool IsPlayingNetworkedRootMotionMontage();
		bool IsJumpProvidingForce();
		bool HasAnyRootMotion();
		class UAnimMontage* GetCurrentMontage();
		struct FVector GetBaseTranslationOffset();
		struct FRotator GetBaseRotationOffsetRotator();
		float GetAnimRootMotionTranslationScale();
		void Crouch(bool bClientSimulation);
		void ClientVeryShortAdjustPosition(float Timestamp, const struct FVector& NewLoc, class UPrimitiveComponent* NewBase, const class FName& NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode);
		void ClientMoveResponsePacked(const struct FCharacterMoveResponsePackedBits& PackedBits);
		void ClientCheatWalk();
		void ClientCheatGhost();
		void ClientCheatFly();
		void ClientAdjustRootMotionSourcePosition(float Timestamp, const struct FRootMotionSourceGroup& ServerRootMotion, bool bHasAnimRootMotion, float ServerMontageTrackPosition, const struct FVector& ServerLoc, const struct FVector_NetQuantizeNormal& ServerRotation, float ServerVelZ, class UPrimitiveComponent* ServerBase, const class FName& ServerBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode);
		void ClientAdjustRootMotionPosition(float Timestamp, float ServerMontageTrackPosition, const struct FVector& ServerLoc, const struct FVector_NetQuantizeNormal& ServerRotation, float ServerVelZ, class UPrimitiveComponent* ServerBase, const class FName& ServerBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode);
		void ClientAdjustPosition(float Timestamp, const struct FVector& NewLoc, const struct FVector& NewVel, class UPrimitiveComponent* NewBase, const class FName& NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode);
		void ClientAckGoodMove(float Timestamp);
		bool CanJumpInternal();
		bool CanJump();
		bool CanCrouch();
		void CacheInitialMeshOffset(const struct FVector& MeshRelativeLocation, const struct FRotator& MeshRelativeRotation);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SplineComponent
	 * Size -> 0x0100 (FullSize[0x0580] - InheritedSize[0x0480])
	 */
	class USplineComponent : public UPrimitiveComponent
	{
	public:
		struct FSplineCurves                                       SplineCurves;                                            // 0x0480(0x0070) Edit, NativeAccessSpecifierPublic
		struct FInterpCurveVector                                  SplineInfo;                                              // 0x04F0(0x0018) ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FInterpCurveQuat                                    SplineRotInfo;                                           // 0x0508(0x0018) ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FInterpCurveVector                                  SplineScaleInfo;                                         // 0x0520(0x0018) ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FInterpCurveFloat                                   SplineReparamTable;                                      // 0x0538(0x0018) ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowSplineEditingPerInstance;                          // 0x0550(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YF00[0x3];                                   // 0x0551(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ReparamStepsPerSegment;                                  // 0x0554(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0558(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStationaryEndpoints;                                    // 0x055C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSplineHasBeenEdited;                                    // 0x055D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bModifiedByConstructionScript;                           // 0x055E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInputSplinePointsToConstructionScript;                  // 0x055F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDrawDebug;                                              // 0x0560(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClosedLoop;                                             // 0x0561(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bLoopPositionOverride;                                   // 0x0562(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ZO9T[0x1];                                   // 0x0563(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LoopPosition;                                            // 0x0564(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             DefaultUpVector;                                         // 0x0568(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E5FR[0xC];                                   // 0x0574(0x000C) MISSED OFFSET (PADDING)

	public:
		void UpdateSpline();
		void SetWorldLocationAtSplinePoint(int32_t PointIndex, const struct FVector& InLocation);
		void SetUpVectorAtSplinePoint(int32_t PointIndex, const struct FVector& InUpVector, ESplineCoordinateSpace CoordinateSpace, bool bUpdateSpline);
		void SetUnselectedSplineSegmentColor(const struct FLinearColor& SegmentColor);
		void SetTangentsAtSplinePoint(int32_t PointIndex, const struct FVector& InArriveTangent, const struct FVector& InLeaveTangent, ESplineCoordinateSpace CoordinateSpace, bool bUpdateSpline);
		void SetTangentColor(const struct FLinearColor& TangentColor);
		void SetTangentAtSplinePoint(int32_t PointIndex, const struct FVector& InTangent, ESplineCoordinateSpace CoordinateSpace, bool bUpdateSpline);
		void SetSplineWorldPoints(TArray<struct FVector> Points);
		void SetSplinePointType(int32_t PointIndex, ESplinePointType Type, bool bUpdateSpline);
		void SetSplinePoints(TArray<struct FVector> Points, ESplineCoordinateSpace CoordinateSpace, bool bUpdateSpline);
		void SetSplineLocalPoints(TArray<struct FVector> Points);
		void SetSelectedSplineSegmentColor(const struct FLinearColor& SegmentColor);
		void SetScaleAtSplinePoint(int32_t PointIndex, const struct FVector& InScaleVector, bool bUpdateSpline);
		void SetRotationAtSplinePoint(int32_t PointIndex, const struct FRotator& InRotation, ESplineCoordinateSpace CoordinateSpace, bool bUpdateSpline);
		void SetLocationAtSplinePoint(int32_t PointIndex, const struct FVector& InLocation, ESplineCoordinateSpace CoordinateSpace, bool bUpdateSpline);
		void SetDrawDebug(bool bShow);
		void SetDefaultUpVector(const struct FVector& UpVector, ESplineCoordinateSpace CoordinateSpace);
		void SetClosedLoopAtPosition(bool bInClosedLoop, float Key, bool bUpdateSpline);
		void SetClosedLoop(bool bInClosedLoop, bool bUpdateSpline);
		void RemoveSplinePoint(int32_t Index, bool bUpdateSpline);
		bool IsClosedLoop();
		struct FVector GetWorldTangentAtDistanceAlongSpline(float Distance);
		struct FRotator GetWorldRotationAtTime(float Time, bool bUseConstantVelocity);
		struct FRotator GetWorldRotationAtDistanceAlongSpline(float Distance);
		struct FVector GetWorldLocationAtTime(float Time, bool bUseConstantVelocity);
		struct FVector GetWorldLocationAtSplinePoint(int32_t PointIndex);
		struct FVector GetWorldLocationAtDistanceAlongSpline(float Distance);
		struct FVector GetWorldDirectionAtTime(float Time, bool bUseConstantVelocity);
		struct FVector GetWorldDirectionAtDistanceAlongSpline(float Distance);
		struct FVector GetVectorPropertyAtSplinePoint(int32_t Index, const class FName& PropertyName);
		struct FVector GetVectorPropertyAtSplineInputKey(float InKey, const class FName& PropertyName);
		struct FVector GetUpVectorAtTime(float Time, ESplineCoordinateSpace CoordinateSpace, bool bUseConstantVelocity);
		struct FVector GetUpVectorAtSplinePoint(int32_t PointIndex, ESplineCoordinateSpace CoordinateSpace);
		struct FVector GetUpVectorAtSplineInputKey(float InKey, ESplineCoordinateSpace CoordinateSpace);
		struct FVector GetUpVectorAtDistanceAlongSpline(float Distance, ESplineCoordinateSpace CoordinateSpace);
		struct FTransform GetTransformAtTime(float Time, ESplineCoordinateSpace CoordinateSpace, bool bUseConstantVelocity, bool bUseScale);
		struct FTransform GetTransformAtSplinePoint(int32_t PointIndex, ESplineCoordinateSpace CoordinateSpace, bool bUseScale);
		struct FTransform GetTransformAtSplineInputKey(float InKey, ESplineCoordinateSpace CoordinateSpace, bool bUseScale);
		struct FTransform GetTransformAtDistanceAlongSpline(float Distance, ESplineCoordinateSpace CoordinateSpace, bool bUseScale);
		struct FVector GetTangentAtTime(float Time, ESplineCoordinateSpace CoordinateSpace, bool bUseConstantVelocity);
		struct FVector GetTangentAtSplinePoint(int32_t PointIndex, ESplineCoordinateSpace CoordinateSpace);
		struct FVector GetTangentAtSplineInputKey(float InKey, ESplineCoordinateSpace CoordinateSpace);
		struct FVector GetTangentAtDistanceAlongSpline(float Distance, ESplineCoordinateSpace CoordinateSpace);
		ESplinePointType GetSplinePointType(int32_t PointIndex);
		float GetSplineLength();
		struct FVector GetScaleAtTime(float Time, bool bUseConstantVelocity);
		struct FVector GetScaleAtSplinePoint(int32_t PointIndex);
		struct FVector GetScaleAtSplineInputKey(float InKey);
		struct FVector GetScaleAtDistanceAlongSpline(float Distance);
		struct FRotator GetRotationAtTime(float Time, ESplineCoordinateSpace CoordinateSpace, bool bUseConstantVelocity);
		struct FRotator GetRotationAtSplinePoint(int32_t PointIndex, ESplineCoordinateSpace CoordinateSpace);
		struct FRotator GetRotationAtSplineInputKey(float InKey, ESplineCoordinateSpace CoordinateSpace);
		struct FRotator GetRotationAtDistanceAlongSpline(float Distance, ESplineCoordinateSpace CoordinateSpace);
		float GetRollAtTime(float Time, ESplineCoordinateSpace CoordinateSpace, bool bUseConstantVelocity);
		float GetRollAtSplinePoint(int32_t PointIndex, ESplineCoordinateSpace CoordinateSpace);
		float GetRollAtSplineInputKey(float InKey, ESplineCoordinateSpace CoordinateSpace);
		float GetRollAtDistanceAlongSpline(float Distance, ESplineCoordinateSpace CoordinateSpace);
		struct FVector GetRightVectorAtTime(float Time, ESplineCoordinateSpace CoordinateSpace, bool bUseConstantVelocity);
		struct FVector GetRightVectorAtSplinePoint(int32_t PointIndex, ESplineCoordinateSpace CoordinateSpace);
		struct FVector GetRightVectorAtSplineInputKey(float InKey, ESplineCoordinateSpace CoordinateSpace);
		struct FVector GetRightVectorAtDistanceAlongSpline(float Distance, ESplineCoordinateSpace CoordinateSpace);
		int32_t GetNumberOfSplineSegments();
		int32_t GetNumberOfSplinePoints();
		struct FVector GetLocationAtTime(float Time, ESplineCoordinateSpace CoordinateSpace, bool bUseConstantVelocity);
		struct FVector GetLocationAtSplinePoint(int32_t PointIndex, ESplineCoordinateSpace CoordinateSpace);
		struct FVector GetLocationAtSplineInputKey(float InKey, ESplineCoordinateSpace CoordinateSpace);
		struct FVector GetLocationAtDistanceAlongSpline(float Distance, ESplineCoordinateSpace CoordinateSpace);
		void GetLocationAndTangentAtSplinePoint(int32_t PointIndex, struct FVector* Location, struct FVector* Tangent, ESplineCoordinateSpace CoordinateSpace);
		void GetLocalLocationAndTangentAtSplinePoint(int32_t PointIndex, struct FVector* LocalLocation, struct FVector* LocalTangent);
		struct FVector GetLeaveTangentAtSplinePoint(int32_t PointIndex, ESplineCoordinateSpace CoordinateSpace);
		float GetInputKeyAtDistanceAlongSpline(float Distance);
		float GetFloatPropertyAtSplinePoint(int32_t Index, const class FName& PropertyName);
		float GetFloatPropertyAtSplineInputKey(float InKey, const class FName& PropertyName);
		float GetDistanceAlongSplineAtSplinePoint(int32_t PointIndex);
		float GetDistanceAlongSplineAtSplineInputKey(float InKey);
		struct FVector GetDirectionAtTime(float Time, ESplineCoordinateSpace CoordinateSpace, bool bUseConstantVelocity);
		struct FVector GetDirectionAtSplinePoint(int32_t PointIndex, ESplineCoordinateSpace CoordinateSpace);
		struct FVector GetDirectionAtSplineInputKey(float InKey, ESplineCoordinateSpace CoordinateSpace);
		struct FVector GetDirectionAtDistanceAlongSpline(float Distance, ESplineCoordinateSpace CoordinateSpace);
		struct FVector GetDefaultUpVector(ESplineCoordinateSpace CoordinateSpace);
		struct FVector GetArriveTangentAtSplinePoint(int32_t PointIndex, ESplineCoordinateSpace CoordinateSpace);
		struct FVector FindUpVectorClosestToWorldLocation(const struct FVector& WorldLocation, ESplineCoordinateSpace CoordinateSpace);
		struct FTransform FindTransformClosestToWorldLocation(const struct FVector& WorldLocation, ESplineCoordinateSpace CoordinateSpace, bool bUseScale);
		struct FVector FindTangentClosestToWorldLocation(const struct FVector& WorldLocation, ESplineCoordinateSpace CoordinateSpace);
		struct FVector FindScaleClosestToWorldLocation(const struct FVector& WorldLocation);
		struct FRotator FindRotationClosestToWorldLocation(const struct FVector& WorldLocation, ESplineCoordinateSpace CoordinateSpace);
		float FindRollClosestToWorldLocation(const struct FVector& WorldLocation, ESplineCoordinateSpace CoordinateSpace);
		struct FVector FindRightVectorClosestToWorldLocation(const struct FVector& WorldLocation, ESplineCoordinateSpace CoordinateSpace);
		struct FVector FindLocationClosestToWorldLocation(const struct FVector& WorldLocation, ESplineCoordinateSpace CoordinateSpace);
		float FindInputKeyClosestToWorldLocation(const struct FVector& WorldLocation);
		struct FVector FindDirectionClosestToWorldLocation(const struct FVector& WorldLocation, ESplineCoordinateSpace CoordinateSpace);
		void ClearSplinePoints(bool bUpdateSpline);
		void AddSplineWorldPoint(const struct FVector& position);
		void AddSplinePointAtIndex(const struct FVector& position, int32_t Index, ESplineCoordinateSpace CoordinateSpace, bool bUpdateSpline);
		void AddSplinePoint(const struct FVector& position, ESplineCoordinateSpace CoordinateSpace, bool bUpdateSpline);
		void AddSplineLocalPoint(const struct FVector& position);
		void AddPoints(TArray<struct FSplinePoint> Points, bool bUpdateSpline);
		void AddPoint(const struct FSplinePoint& Point, bool bUpdateSpline);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SkeletalMeshComponent
	 * Size -> 0x0840 (FullSize[0x0F80] - InheritedSize[0x0740])
	 */
	class USkeletalMeshComponent : public USkinnedMeshComponent
	{
	public:
		class UAnimBlueprintGeneratedClass*                        AnimBlueprintGeneratedClass;                             // 0x0740(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AnimClass;                                               // 0x0748(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimInstance*                                       AnimScriptInstance;                                      // 0x0750(0x0008) ZeroConstructor, Transient, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimInstance*                                       PostProcessAnimInstance;                                 // 0x0758(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSingleAnimationPlayData                            AnimationData;                                           // 0x0760(0x0018) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GJZT[0x10];                                  // 0x0778(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             RootBoneTranslation;                                     // 0x0788(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LineCheckBoundsScale;                                    // 0x0794(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LGHK[0x30];                                  // 0x07A0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimInstance*>                               LinkedInstances;                                         // 0x07D0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<struct FTransform>                                  CachedBoneSpaceTransforms;                               // 0x07E0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<struct FTransform>                                  CachedComponentSpaceTransforms;                          // 0x07F0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_GE43[0x150];                                 // 0x0800(0x0150) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GlobalAnimRateScale;                                     // 0x0950(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EKinematicBonesUpdateToPhysics                             KinematicBonesUpdateType;                                // 0x0954(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPhysicsTransformUpdateMode                                PhysicsTransformUpdateMode;                              // 0x0955(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C8FJ[0x1];                                   // 0x0956(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EAnimationMode                                             AnimationMode;                                           // 0x0957(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_L3OS[0x1];                                   // 0x0958(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bDisablePostProcessBlueprint : 1;                        // 0x0959(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_IF0W : 1;                                    // 0x0959(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bUpdateOverlapsOnAnimationFinalize : 1;                  // 0x0959(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_12A0 : 1;                                    // 0x0959(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bHasValidBodies : 1;                                     // 0x0959(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bBlendPhysics : 1;                                       // 0x0959(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnablePhysicsOnDedicatedServer : 1;                     // 0x0959(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUpdateJointsFromAnimation : 1;                          // 0x0959(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableClothSimulation : 1;                             // 0x095A(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0OR4[0x5];                                   // 0x095B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              UnknownData_7CSL : 1;                                    // 0x0960(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bDisableRigidBodyAnimNode : 1;                           // 0x0960(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bAllowAnimCurveEvaluation : 1;                           // 0x0960(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bDisableAnimCurves : 1;                                  // 0x0960(0x0001) BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_MVHA : 3;                                    // 0x0960(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bCollideWithEnvironment : 1;                             // 0x0960(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCollideWithAttachedChildren : 1;                        // 0x0961(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLocalSpaceSimulation : 1;                               // 0x0961(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bResetAfterTeleport : 1;                                 // 0x0961(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GRG4 : 1;                                    // 0x0961(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bDeferKinematicBoneUpdate : 1;                           // 0x0961(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNoSkeletonUpdate : 1;                                   // 0x0961(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPauseAnims : 1;                                         // 0x0961(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseRefPoseOnInitAnim : 1;                               // 0x0961(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnablePerPolyCollision : 1;                             // 0x0962(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceRefpose : 1;                                       // 0x0962(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOnlyAllowAutonomousTickPose : 1;                        // 0x0962(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsAutonomousTickPose : 1;                               // 0x0962(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOldForceRefPose : 1;                                    // 0x0962(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShowPrePhysBones : 1;                                   // 0x0962(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRequiredBonesUpToDate : 1;                              // 0x0962(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAnimTreeInitialised : 1;                                // 0x0962(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIncludeComponentLocationIntoBounds : 1;                 // 0x0963(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableLineCheckWithBounds : 1;                          // 0x0963(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPropagateCurvesToSlaves : 1;                            // 0x0963(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSkipKinematicUpdateWhenInterpolating : 1;               // 0x0963(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSkipBoundsUpdateWhenInterpolating : 1;                  // 0x0963(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W6BL : 2;                                    // 0x0963(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bNeedsQueuedAnimEventsDispatched : 1;                    // 0x0963(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_25T3[0x2];                                   // 0x0964(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint16_t                                                   CachedAnimCurveUidVersion;                               // 0x0966(0x0002) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClothBlendWeight;                                        // 0x0968(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWaitForParallelClothTask;                               // 0x096C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E0HA[0x3];                                   // 0x096D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        DisallowedAnimCurves;                                    // 0x0970(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class UBodySetup*                                          BodySetup;                                               // 0x0980(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QCZN[0x8];                                   // 0x0988(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnConstraintBroken;                                      // 0x0990(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UClass*                                              ClothingSimulationFactory;                               // 0x09A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UKZH[0xE0];                                  // 0x09A8(0x00E0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TeleportDistanceThreshold;                               // 0x0A88(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      TeleportRotationThreshold;                               // 0x0A8C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BGL4[0x8];                                   // 0x0A90(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   LastPoseTickFrame;                                       // 0x0A98(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ZU5C[0x54];                                  // 0x0A9C(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClothingSimulationInteractor*                       ClothingInteractor;                                      // 0x0AF0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_JAZX[0xC8];                                  // 0x0AF8(0x00C8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnAnimInitialized;                                       // 0x0BC0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZA6Q[0x3B0];                                 // 0x0BD0(0x03B0) MISSED OFFSET (PADDING)

	public:
		FVector GetBoneWorldPos(const int32_t& boneId) const;
		void UnlinkAnimClassLayers(class UClass* InClass);
		void UnbindClothFromMasterPoseComponent(bool bRestoreSimulationSpace);
		void ToggleDisablePostProcessBlueprint();
		void TermBodiesBelow(const class FName& ParentBoneName);
		void SuspendClothingSimulation();
		void Stop();
		void SnapshotPose(struct FPoseSnapshot* Snapshot);
		void SetUpdateClothInEditor(bool NewUpdateState);
		void SetUpdateAnimationInEditor(bool NewUpdateState);
		void SetTeleportRotationThreshold(float Threshold);
		void SetTeleportDistanceThreshold(float Threshold);
		void SetPosition(float InPos, bool bFireNotifies);
		void SetPlayRate(float Rate);
		void SetPhysicsBlendWeight(float PhysicsBlendWeight);
		void SetNotifyRigidBodyCollisionBelow(bool bNewNotifyRigidBodyCollision, const class FName& BoneName, bool bIncludeSelf);
		void SetMorphTarget(const class FName& MorphTargetName, float value, bool bRemoveZeroWeight);
		void SetEnablePhysicsBlending(bool bNewBlendPhysics);
		void SetEnableGravityOnAllBodiesBelow(bool bEnableGravity, const class FName& BoneName, bool bIncludeSelf);
		void SetEnableBodyGravity(bool bEnableGravity, const class FName& BoneName);
		void SetDisablePostProcessBlueprint(bool bInDisablePostProcess);
		void SetDisableAnimCurves(bool bInDisableAnimCurves);
		void SetConstraintProfileForAll(const class FName& ProfileName, bool bDefaultIfNotFound);
		void SetConstraintProfile(const class FName& JointName, const class FName& ProfileName, bool bDefaultIfNotFound);
		void SetClothMaxDistanceScale(float Scale);
		void SetBodyNotifyRigidBodyCollision(bool bNewNotifyRigidBodyCollision, const class FName& BoneName);
		void SetAnimClass(class UClass* NewClass);
		void SetAnimationMode(EAnimationMode InAnimationMode);
		void SetAnimation(class UAnimationAsset* NewAnimToPlay);
		void SetAngularLimits(const class FName& InBoneName, float Swing1LimitAngle, float TwistLimitAngle, float Swing2LimitAngle);
		void SetAllowRigidBodyAnimNode(bool bInAllow, bool bReinitAnim);
		void SetAllowedAnimCurvesEvaluation(TArray<class FName> List, bool bAllow);
		void SetAllowAnimCurveEvaluation(bool bInAllow);
		void SetAllMotorsAngularVelocityDrive(bool bEnableSwingDrive, bool bEnableTwistDrive, bool bSkipCustomPhysicsType);
		void SetAllMotorsAngularPositionDrive(bool bEnableSwingDrive, bool bEnableTwistDrive, bool bSkipCustomPhysicsType);
		void SetAllMotorsAngularDriveParams(float InSpring, float InDamping, float InForceLimit, bool bSkipCustomPhysicsType);
		void SetAllBodiesSimulatePhysics(bool bNewSimulate);
		void SetAllBodiesPhysicsBlendWeight(float PhysicsBlendWeight, bool bSkipCustomPhysicsType);
		void SetAllBodiesBelowSimulatePhysics(const class FName& InBoneName, bool bNewSimulate, bool bIncludeSelf);
		void SetAllBodiesBelowPhysicsBlendWeight(const class FName& InBoneName, float PhysicsBlendWeight, bool bSkipCustomPhysicsType, bool bIncludeSelf);
		void ResumeClothingSimulation();
		void ResetClothTeleportMode();
		void ResetAnimInstanceDynamics(ETeleportType InTeleportType);
		void ResetAllowedAnimCurveEvaluation();
		void ResetAllBodiesSimulatePhysics();
		void PlayAnimation(class UAnimationAsset* NewAnimToPlay, bool bLooping);
		void Play(bool bLooping);
		void OverrideAnimationData(class UAnimationAsset* InAnimToPlay, bool bIsLooping, bool bIsPlaying, float position, float PlayRate);
		void LinkAnimGraphByTag(const class FName& InTag, class UClass* InClass);
		void LinkAnimClassLayers(class UClass* InClass);
		bool K2_GetClosestPointOnPhysicsAsset(const struct FVector& WorldPosition, struct FVector* ClosestWorldPosition, struct FVector* Normal, class FName* BoneName, float* Distance);
		bool IsPlaying();
		bool IsClothingSimulationSuspended();
		bool IsBodyGravityEnabled(const class FName& BoneName);
		bool HasValidAnimationInstance();
		float GetTeleportRotationThreshold();
		float GetTeleportDistanceThreshold();
		bool GetStringAttribute_Ref(const class FName& BoneName, const class FName& AttributeName, class FString* OutValue, ECustomBoneAttributeLookup LookupType);
		bool GetStringAttribute(const class FName& BoneName, const class FName& AttributeName, const class FString& defaultValue, class FString* OutValue, ECustomBoneAttributeLookup LookupType);
		struct FVector GetSkeletalCenterOfMass();
		class UAnimInstance* GetPostProcessInstance();
		float GetPosition();
		float GetPlayRate();
		float GetMorphTarget(const class FName& MorphTargetName);
		class UAnimInstance* GetLinkedAnimLayerInstanceByGroup(const class FName& InGroup);
		class UAnimInstance* GetLinkedAnimLayerInstanceByClass(class UClass* InClass);
		void GetLinkedAnimGraphInstancesByTag(const class FName& InTag, TArray<class UAnimInstance*>* OutLinkedInstances);
		class UAnimInstance* GetLinkedAnimGraphInstanceByTag(const class FName& InTag);
		bool GetIntegerAttribute_Ref(const class FName& BoneName, const class FName& AttributeName, int32_t* OutValue, ECustomBoneAttributeLookup LookupType);
		bool GetIntegerAttribute(const class FName& BoneName, const class FName& AttributeName, int32_t defaultValue, int32_t* OutValue, ECustomBoneAttributeLookup LookupType);
		bool GetFloatAttribute_Ref(const class FName& BoneName, const class FName& AttributeName, float* OutValue, ECustomBoneAttributeLookup LookupType);
		bool GetFloatAttribute(const class FName& BoneName, const class FName& AttributeName, float defaultValue, float* OutValue, ECustomBoneAttributeLookup LookupType);
		bool GetDisablePostProcessBlueprint();
		bool GetDisableAnimCurves();
		void GetCurrentJointAngles(const class FName& InBoneName, float* Swing1Angle, float* TwistAngle, float* Swing2Angle);
		float GetClothMaxDistanceScale();
		class UClothingSimulationInteractor* GetClothingSimulationInteractor();
		float GetBoneMass(const class FName& BoneName, bool bScaleMass);
		class UAnimInstance* GetAnimInstance();
		class UClass* GetAnimClass();
		EAnimationMode GetAnimationMode();
		bool GetAllowRigidBodyAnimNode();
		bool GetAllowedAnimCurveEvaluate();
		void ForceClothNextUpdateTeleportAndReset();
		void ForceClothNextUpdateTeleport();
		class FName FindConstraintBoneName(int32_t ConstraintIndex);
		void ClearMorphTargets();
		void BreakConstraint(const struct FVector& Impulse, const struct FVector& HitLocation, const class FName& InBoneName);
		void BindClothToMasterPoseComponent();
		void AllowAnimCurveEvaluation(const class FName& NameOfCurve, bool bAllow);
		void AddImpulseToAllBodiesBelow(const struct FVector& Impulse, const class FName& BoneName, bool bVelChange, bool bIncludeSelf);
		void AddForceToAllBodiesBelow(const struct FVector& force, const class FName& BoneName, bool bAccelChange, bool bIncludeSelf);
		void AccumulateAllBodiesBelowPhysicsBlendWeight(const class FName& InBoneName, float AddPhysicsBlendWeight, bool bSkipCustomPhysicsType);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.EngineCustomTimeStep
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UEngineCustomTimeStep : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.GameModeBase
	 * Size -> 0x00A8 (FullSize[0x02D8] - InheritedSize[0x0230])
	 */
	class AGameModeBase : public AInfo
	{
	public:
		class FString                                              OptionsString;                                           // 0x0230(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              GameSessionClass;                                        // 0x0240(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              GameStateClass;                                          // 0x0248(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              PlayerControllerClass;                                   // 0x0250(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              PlayerStateClass;                                        // 0x0258(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              HUDClass;                                                // 0x0260(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DefaultPawnClass;                                        // 0x0268(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              SpectatorClass;                                          // 0x0270(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ReplaySpectatorPlayerControllerClass;                    // 0x0278(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ServerStatReplicatorClass;                               // 0x0280(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AGameSession*                                        GameSession;                                             // 0x0288(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AGameStateBase*                                      GameState;                                               // 0x0290(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AServerStatReplicator*                               ServerStatReplicator;                                    // 0x0298(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DefaultPlayerName;                                       // 0x02A0(0x0018) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bUseSeamlessTravel : 1;                                  // 0x02B8(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bStartPlayersAsSpectators : 1;                           // 0x02B8(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bPauseable : 1;                                          // 0x02B8(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_OV0O[0x1F];                                  // 0x02B9(0x001F) MISSED OFFSET (PADDING)

	public:
		void StartPlay();
		class APawn* SpawnDefaultPawnFor(class AController* NewPlayer, class AActor* StartSpot);
		class APawn* SpawnDefaultPawnAtTransform(class AController* NewPlayer, const struct FTransform& SpawnTransform);
		bool ShouldReset(class AActor* ActorToReset);
		void ReturnToMainMenuHost();
		void RestartPlayerAtTransform(class AController* NewPlayer, const struct FTransform& SpawnTransform);
		void RestartPlayerAtPlayerStart(class AController* NewPlayer, class AActor* StartSpot);
		void RestartPlayer(class AController* NewPlayer);
		void ResetLevel();
		bool PlayerCanRestart(class APlayerController* Player);
		bool MustSpectate(class APlayerController* NewPlayerController);
		void K2_PostLogin(class APlayerController* NewPlayer);
		void K2_OnSwapPlayerControllers(class APlayerController* OldPC, class APlayerController* NewPC);
		void K2_OnRestartPlayer(class AController* NewPlayer);
		void K2_OnLogout(class AController* ExitingController);
		void K2_OnChangeName(class AController* Other, const class FString& NewName, bool bNameChange);
		class AActor* K2_FindPlayerStart(class AController* Player, const class FString& IncomingName);
		void InitStartSpot(class AActor* StartSpot, class AController* NewPlayer);
		void InitializeHUDForPlayer(class APlayerController* NewPlayer);
		bool HasMatchStarted();
		bool HasMatchEnded();
		void HandleStartingNewPlayer(class APlayerController* NewPlayer);
		int32_t GetNumSpectators();
		int32_t GetNumPlayers();
		class UClass* GetDefaultPawnClassForController(class AController* InController);
		class AActor* FindPlayerStart(class AController* Player, const class FString& IncomingName);
		class AActor* ChoosePlayerStart(class AController* Player);
		void ChangeName(class AController* Controller, const class FString& NewName, bool bNameChange);
		bool CanSpectate(class APlayerController* Viewer, class APlayerState* ViewTarget);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DynamicSubsystem
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UDynamicSubsystem : public USubsystem
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.EngineSubsystem
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UEngineSubsystem : public UDynamicSubsystem
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CameraShakePattern
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UCameraShakePattern : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Commandlet
	 * Size -> 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
	 */
	class UCommandlet : public UObject
	{
	public:
		class FString                                              HelpDescription;                                         // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              HelpUsage;                                               // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              HelpWebLink;                                             // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      HelpParamNames;                                          // 0x0060(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      HelpParamDescriptions;                                   // 0x0070(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              IsServer : 1;                                            // 0x0080(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              IsClient : 1;                                            // 0x0080(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              IsEditor : 1;                                            // 0x0080(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              LogToConsole : 1;                                        // 0x0080(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ShowErrorCount : 1;                                      // 0x0080(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ShowProgress : 1;                                        // 0x0080(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6QDZ[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CameraShakeBase
	 * Size -> 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
	 */
	class UCameraShakeBase : public UObject
	{
	public:
		bool                                                       bSingleInstance;                                         // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NMHM[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ShakeScale;                                              // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCameraShakePattern*                                 RootShakePattern;                                        // 0x0038(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class APlayerCameraManager*                                CameraManager;                                           // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BN6D[0x68];                                  // 0x0048(0x0068) MISSED OFFSET (PADDING)

	public:
		void SetRootShakePattern(class UCameraShakePattern* InPattern);
		class UCameraShakePattern* GetRootShakePattern();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimInstance
	 * Size -> 0x0290 (FullSize[0x02C0] - InheritedSize[0x0030])
	 */
	class UAnimInstance : public UObject
	{
	public:
		class USkeleton*                                           CurrentSkeleton;                                         // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERootMotionMode                                            RootMotionMode;                                          // 0x0038(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseMultiThreadedAnimationUpdate : 1;                    // 0x0039(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsingCopyPoseFromMesh : 1;                              // 0x0039(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I31D : 2;                                    // 0x0039(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bReceiveNotifiesFromLinkedInstances : 1;                 // 0x0039(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPropagateNotifiesToLinkedInstances : 1;                 // 0x0039(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bQueueMontageEvents : 1;                                 // 0x0039(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DWDK[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnMontageBlendingOut;                                    // 0x0040(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnMontageStarted;                                        // 0x0050(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnMontageEnded;                                          // 0x0060(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnAllMontageInstancesEnded;                              // 0x0070(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YMQE[0x88];                                  // 0x0080(0x0088) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAnimNotifyQueue                                    NotifyQueue;                                             // 0x0108(0x0070) Transient, NativeAccessSpecifierPublic
		TArray<struct FAnimNotifyEvent>                            ActiveAnimNotifyState;                                   // 0x0178(0x0010) ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BE9F[0x138];                                 // 0x0188(0x0138) MISSED OFFSET (PADDING)

	public:
		void UnlockAIResources(bool bUnlockMovement, bool UnlockAILogic);
		void UnlinkAnimClassLayers(class UClass* InClass);
		class APawn* TryGetPawnOwner();
		void StopSlotAnimation(float InBlendOutTime, const class FName& SlotNodeName);
		void SnapshotPose(struct FPoseSnapshot* Snapshot);
		void SetRootMotionMode(ERootMotionMode value);
		void SetReceiveNotifiesFromLinkedInstances(bool bSet);
		void SetPropagateNotifiesToLinkedInstances(bool bSet);
		void SetMorphTarget(const class FName& MorphTargetName, float value);
		void SavePoseSnapshot(const class FName& SnapshotName);
		void ResetDynamics(ETeleportType InTeleportType);
		class UAnimMontage* PlaySlotAnimationAsDynamicMontage(class UAnimSequenceBase* Asset, const class FName& SlotNodeName, float BlendInTime, float BlendOutTime, float InPlayRate, int32_t LoopCount, float BlendOutTriggerTime, float InTimeToStartMontageAt);
		float PlaySlotAnimation(class UAnimSequenceBase* Asset, const class FName& SlotNodeName, float BlendInTime, float BlendOutTime, float InPlayRate, int32_t LoopCount);
		void Montage_StopGroupByName(float InBlendOutTime, const class FName& GroupName);
		void Montage_Stop(float InBlendOutTime, class UAnimMontage* Montage);
		void Montage_SetPosition(class UAnimMontage* Montage, float NewPosition);
		void Montage_SetPlayRate(class UAnimMontage* Montage, float NewPlayRate);
		void Montage_SetNextSection(const class FName& SectionNameToChange, const class FName& NextSection, class UAnimMontage* Montage);
		void Montage_Resume(class UAnimMontage* Montage);
		float Montage_Play(class UAnimMontage* MontageToPlay, float InPlayRate, EMontagePlayReturnType ReturnValueType, float InTimeToStartMontageAt, bool bStopAllMontages);
		void Montage_Pause(class UAnimMontage* Montage);
		void Montage_JumpToSectionsEnd(const class FName& SectionName, class UAnimMontage* Montage);
		void Montage_JumpToSection(const class FName& SectionName, class UAnimMontage* Montage);
		bool Montage_IsPlaying(class UAnimMontage* Montage);
		bool Montage_IsActive(class UAnimMontage* Montage);
		float Montage_GetPosition(class UAnimMontage* Montage);
		float Montage_GetPlayRate(class UAnimMontage* Montage);
		bool Montage_GetIsStopped(class UAnimMontage* Montage);
		class FName Montage_GetCurrentSection(class UAnimMontage* Montage);
		float Montage_GetBlendTime(class UAnimMontage* Montage);
		void LockAIResources(bool bLockMovement, bool LockAILogic);
		void LinkAnimGraphByTag(const class FName& InTag, class UClass* InClass);
		void LinkAnimClassLayers(class UClass* InClass);
		bool IsSyncGroupBetweenMarkers(const class FName& InSyncGroupName, const class FName& PreviousMarker, const class FName& NextMarker, bool bRespectMarkerOrder);
		bool IsPlayingSlotAnimation(class UAnimSequenceBase* Asset, const class FName& SlotNodeName);
		bool IsAnyMontagePlaying();
		bool HasMarkerBeenHitThisFrame(const class FName& SyncGroup, const class FName& MarkerName);
		bool GetTimeToClosestMarker(const class FName& SyncGroup, const class FName& MarkerName, float* OutMarkerTime);
		struct FMarkerSyncAnimPosition GetSyncGroupPosition(const class FName& InSyncGroupName);
		float GetRelevantAnimTimeRemainingFraction(int32_t MachineIndex, int32_t StateIndex);
		float GetRelevantAnimTimeRemaining(int32_t MachineIndex, int32_t StateIndex);
		float GetRelevantAnimTimeFraction(int32_t MachineIndex, int32_t StateIndex);
		float GetRelevantAnimTime(int32_t MachineIndex, int32_t StateIndex);
		float GetRelevantAnimLength(int32_t MachineIndex, int32_t StateIndex);
		bool GetReceiveNotifiesFromLinkedInstances();
		bool GetPropagateNotifiesToLinkedInstances();
		class USkeletalMeshComponent* GetOwningComponent();
		class AActor* GetOwningActor();
		void GetLinkedAnimLayerInstancesByGroup(const class FName& InGroup, TArray<class UAnimInstance*>* OutLinkedInstances);
		class UAnimInstance* GetLinkedAnimLayerInstanceByGroupAndClass(const class FName& InGroup, class UClass* InClass);
		class UAnimInstance* GetLinkedAnimLayerInstanceByGroup(const class FName& InGroup);
		class UAnimInstance* GetLinkedAnimLayerInstanceByClass(class UClass* InClass);
		void GetLinkedAnimGraphInstancesByTag(const class FName& InTag, TArray<class UAnimInstance*>* OutLinkedInstances);
		class UAnimInstance* GetLinkedAnimGraphInstanceByTag(const class FName& InTag);
		float GetInstanceTransitionTimeElapsedFraction(int32_t MachineIndex, int32_t TransitionIndex);
		float GetInstanceTransitionTimeElapsed(int32_t MachineIndex, int32_t TransitionIndex);
		float GetInstanceTransitionCrossfadeDuration(int32_t MachineIndex, int32_t TransitionIndex);
		float GetInstanceStateWeight(int32_t MachineIndex, int32_t StateIndex);
		float GetInstanceMachineWeight(int32_t MachineIndex);
		float GetInstanceCurrentStateElapsedTime(int32_t MachineIndex);
		float GetInstanceAssetPlayerTimeFromEndFraction(int32_t AssetPlayerIndex);
		float GetInstanceAssetPlayerTimeFromEnd(int32_t AssetPlayerIndex);
		float GetInstanceAssetPlayerTimeFraction(int32_t AssetPlayerIndex);
		float GetInstanceAssetPlayerTime(int32_t AssetPlayerIndex);
		float GetInstanceAssetPlayerLength(int32_t AssetPlayerIndex);
		float GetCurveValue(const class FName& CurveName);
		class FName GetCurrentStateName(int32_t MachineIndex);
		class UAnimMontage* GetCurrentActiveMontage();
		void GetAllCurveNames(TArray<class FName>* OutNames);
		void GetActiveCurveNames(EAnimCurveType CurveType, TArray<class FName>* OutNames);
		void ClearMorphTargets();
		float CalculateDirection(const struct FVector& Velocity, const struct FRotator& BaseRotation);
		void BlueprintUpdateAnimation(float DeltaTimeX);
		void BlueprintPostEvaluateAnimation();
		void BlueprintLinkedAnimationLayersInitialized();
		void BlueprintInitializeAnimation();
		void BlueprintBeginPlay();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AudioComponent
	 * Size -> 0x0670 (FullSize[0x0890] - InheritedSize[0x0220])
	 */
	class UAudioComponent : public USceneComponent
	{
	public:
		class USoundBase*                                          Sound;                                                   // 0x0218(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAudioComponentParam>                        InstanceParameters;                                      // 0x0220(0x0010) Edit, BlueprintVisible, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPublic
		class USoundClass*                                         SoundClassOverride;                                      // 0x0230(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAutoDestroy : 1;                                        // 0x0238(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bStopWhenOwnerDestroyed : 1;                             // 0x0238(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShouldRemainActiveIfDropped : 1;                        // 0x0238(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAllowSpatialization : 1;                                // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideAttenuation : 1;                                // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideSubtitlePriority : 1;                           // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsUISound : 1;                                          // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableLowPassFilter : 1;                                // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverridePriority : 1;                                   // 0x0239(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSuppressSubtitles : 1;                                  // 0x0239(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2D1E : 6;                                    // 0x0239(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              UnknownData_VY93 : 4;                                    // 0x023A(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bAutoManageAttachment : 1;                               // 0x023A(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U9C8[0x5];                                   // 0x023B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AudioComponentUserID;                                    // 0x0240(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchModulationMin;                                      // 0x024C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchModulationMax;                                      // 0x0250(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VolumeModulationMin;                                     // 0x0254(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VolumeModulationMax;                                     // 0x0258(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VolumeMultiplier;                                        // 0x025C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnvelopeFollowerAttackTime;                              // 0x0260(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnvelopeFollowerReleaseTime;                             // 0x0264(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Priority;                                                // 0x0268(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SubtitlePriority;                                        // 0x026C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundEffectSourcePresetChain*                       SourceEffectChain;                                       // 0x0270(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchMultiplier;                                         // 0x0278(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LowPassFilterFrequency;                                  // 0x027C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7NCD[0x8];                                   // 0x0280(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USoundAttenuation*                                   AttenuationSettings;                                     // 0x0288(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoundAttenuationSettings                           AttenuationOverrides;                                    // 0x0290(0x03A0) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class USoundConcurrency*                                   ConcurrencySettings;                                     // 0x0630(0x0008) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ConcurrencySet[0x50];                                    // 0x0638(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnknownData_YL4C[0xC];                                   // 0x0688(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EAttachmentRule                                            AutoAttachLocationRule;                                  // 0x0694(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttachmentRule                                            AutoAttachRotationRule;                                  // 0x0695(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttachmentRule                                            AutoAttachScaleRule;                                     // 0x0696(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_12RI[0x1];                                   // 0x0697(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoundModulationDefaultRoutingSettings              ModulationRouting;                                       // 0x0698(0x0048) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnAudioPlayStateChanged;                                 // 0x06E0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_47UV[0x18];                                  // 0x06F0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnAudioVirtualizationChanged;                            // 0x0708(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E9NQ[0x18];                                  // 0x0718(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnAudioFinished;                                         // 0x0730(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_64B1[0x18];                                  // 0x0740(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnAudioPlaybackPercent;                                  // 0x0758(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SVIK[0x18];                                  // 0x0768(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnAudioSingleEnvelopeValue;                              // 0x0780(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F6RL[0x18];                                  // 0x0790(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnAudioMultiEnvelopeValue;                               // 0x07A8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QHWG[0x18];                                  // 0x07B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptDelegate                                      OnQueueSubtitles;                                        // 0x07D0(0x0010) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DHFN[0x4];                                   // 0x07B8(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TWeakObjectPtr<class USceneComponent>                      AutoAttachParent;                                        // 0x07E4(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AutoAttachSocketName;                                    // 0x07EC(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UX2N[0x98];                                  // 0x07F8(0x0098) MISSED OFFSET (PADDING)

	public:
		void StopDelayed(float DelayTime);
		void Stop();
		void SetWaveParameter(const class FName& InName, class USoundWave* InWave);
		void SetVolumeMultiplier(float NewVolumeMultiplier);
		void SetUISound(bool bInUISound);
		void SetSubmixSend(class USoundSubmixBase* Submix, float SendLevel);
		void SetSourceBusSendPreEffect(class USoundSourceBus* SoundSourceBus, float SourceBusSendLevel);
		void SetSourceBusSendPostEffect(class USoundSourceBus* SoundSourceBus, float SourceBusSendLevel);
		void SetSound(class USoundBase* NewSound);
		void SetPitchMultiplier(float NewPitchMultiplier);
		void SetPaused(bool bPause);
		void SetOutputToBusOnly(bool bInOutputToBusOnly);
		void SetLowPassFilterFrequency(float InLowPassFilterFrequency);
		void SetLowPassFilterEnabled(bool InLowPassFilterEnabled);
		void SetIntParameter(const class FName& InName, int32_t inInt);
		void SetFloatParameter(const class FName& InName, float InFloat);
		void SetBoolParameter(const class FName& InName, bool InBool);
		void SetAudioBusSendPreEffect(class UAudioBus* AudioBus, float AudioBusSendLevel);
		void SetAudioBusSendPostEffect(class UAudioBus* AudioBus, float AudioBusSendLevel);
		void PlayQuantized(class UObject* WorldContextObject, class UQuartzClockHandle** InClockHandle, struct FQuartzQuantizationBoundary* InQuantizationBoundary, const class FScriptDelegate& InDelegate, float InStartTime, float InFadeInDuration, float InFadeVolumeLevel, EAudioFaderCurve InFadeCurve);
		void Play(float StartTime);
		bool IsVirtualized();
		bool IsPlaying();
		bool HasCookedFFTData();
		bool HasCookedAmplitudeEnvelopeData();
		EAudioComponentPlayState GetPlayState();
		bool GetCookedFFTDataForAllPlayingSounds(TArray<struct FSoundWaveSpectralDataPerSound>* OutSoundWaveSpectralData);
		bool GetCookedFFTData(TArray<float> FrequenciesToGet, TArray<struct FSoundWaveSpectralData>* OutSoundWaveSpectralData);
		bool GetCookedEnvelopeDataForAllPlayingSounds(TArray<struct FSoundWaveEnvelopeDataPerSound>* OutEnvelopeData);
		bool GetCookedEnvelopeData(float* OutEnvelopeData);
		void FadeOut(float FadeOutDuration, float FadeVolumeLevel, EAudioFaderCurve FadeCurve);
		void FadeIn(float FadeInDuration, float FadeVolumeLevel, float StartTime, EAudioFaderCurve FadeCurve);
		bool BP_GetAttenuationSettingsToApply(struct FSoundAttenuationSettings* OutAttenuationSettings);
		void AdjustVolume(float AdjustVolumeDuration, float AdjustVolumeLevel, EAudioFaderCurve FadeCurve);
		void AdjustAttenuation(const struct FSoundAttenuationSettings& InAttenuationSettings);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MovementComponent
	 * Size -> 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
	 */
	class UMovementComponent : public UActorComponent
	{
	public:
		class USceneComponent*                                     UpdatedComponent;                                        // 0x00B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPrimitiveComponent*                                 UpdatedPrimitive;                                        // 0x00C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NIQ5[0x4];                                   // 0x00C8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Velocity;                                                // 0x00CC(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PlaneConstraintNormal;                                   // 0x00D8(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             PlaneConstraintOrigin;                                   // 0x00E4(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bUpdateOnlyIfRendered : 1;                               // 0x00F0(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAutoUpdateTickRegistration : 1;                         // 0x00F0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTickBeforeOwner : 1;                                    // 0x00F0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAutoRegisterUpdatedComponent : 1;                       // 0x00F0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bConstrainToPlane : 1;                                   // 0x00F0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSnapToPlaneAtStart : 1;                                 // 0x00F0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAutoRegisterPhysicsVolumeUpdates : 1;                   // 0x00F0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bComponentShouldUpdatePhysicsVolume : 1;                 // 0x00F0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9IL1[0x2];                                   // 0x00F1(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EPlaneConstraintAxisSetting                                PlaneConstraintAxisSetting;                              // 0x00F3(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_FHLR[0x4];                                   // 0x00F4(0x0004) MISSED OFFSET (PADDING)

	public:
		void StopMovementImmediately();
		void SnapUpdatedComponentToPlane();
		void SetUpdatedComponent(class USceneComponent* NewUpdatedComponent);
		void SetPlaneConstraintOrigin(const struct FVector& PlaneOrigin);
		void SetPlaneConstraintNormal(const struct FVector& PlaneNormal);
		void SetPlaneConstraintFromVectors(const struct FVector& Forward, const struct FVector& Up);
		void SetPlaneConstraintEnabled(bool bEnabled);
		void SetPlaneConstraintAxisSetting(EPlaneConstraintAxisSetting NewAxisSetting);
		void PhysicsVolumeChanged(class APhysicsVolume* NewVolume);
		bool K2_MoveUpdatedComponent(const struct FVector& Delta, const struct FRotator& NewRotation, struct FHitResult* OutHit, bool bSweep, bool bTeleport);
		float K2_GetModifiedMaxSpeed();
		float K2_GetMaxSpeedModifier();
		bool IsExceedingMaxSpeed(float MaxSpeed);
		struct FVector GetPlaneConstraintOrigin();
		struct FVector GetPlaneConstraintNormal();
		EPlaneConstraintAxisSetting GetPlaneConstraintAxisSetting();
		class APhysicsVolume* GetPhysicsVolume();
		float GetMaxSpeed();
		float GetGravityZ();
		struct FVector ConstrainNormalToPlane(const struct FVector& Normal);
		struct FVector ConstrainLocationToPlane(const struct FVector& Location);
		struct FVector ConstrainDirectionToPlane(const struct FVector& Direction);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NavMovementComponent
	 * Size -> 0x0048 (FullSize[0x0140] - InheritedSize[0x00F8])
	 */
	class UNavMovementComponent : public UMovementComponent
	{
	public:
		struct FNavAgentProperties                                 NavAgentProps;                                           // 0x00F8(0x0038) Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FixedPathBrakingDistance;                                // 0x0130(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bUpdateNavAgentWithOwnersCollision : 1;                  // 0x0134(0x0001) BIT_FIELD Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bUseAccelerationForPaths : 1;                            // 0x0134(0x0001) BIT_FIELD Edit, Config, GlobalConfig, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bUseFixedBrakingDistanceForPaths : 1;                    // 0x0134(0x0001) BIT_FIELD Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FMovementProperties                                 MovementState;                                           // 0x0135(0x0001) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XNBV[0x2];                                   // 0x0136(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             PathFollowingComp;                                       // 0x0138(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void StopMovementKeepPathing();
		void StopActiveMovement();
		bool IsSwimming();
		bool IsMovingOnGround();
		bool IsFlying();
		bool IsFalling();
		bool IsCrouching();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PawnMovementComponent
	 * Size -> 0x0008 (FullSize[0x0148] - InheritedSize[0x0140])
	 */
	class UPawnMovementComponent : public UNavMovementComponent
	{
	public:
		class APawn*                                               PawnOwner;                                               // 0x0140(0x0008) ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		struct FVector K2_GetInputVector();
		bool IsMoveInputIgnored();
		struct FVector GetPendingInputVector();
		class APawn* GetPawnOwner();
		struct FVector GetLastInputVector();
		struct FVector ConsumeInputVector();
		void AddInputVector(const struct FVector& WorldVector, bool bForce);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundEffectPreset
	 * Size -> 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
	 */
	class USoundEffectPreset : public UObject
	{
	public:
		unsigned char                                              UnknownData_ON9X[0x40];                                  // 0x0030(0x0040) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundEffectSourcePreset
	 * Size -> 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
	 */
	class USoundEffectSourcePreset : public USoundEffectPreset
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundEffectSubmixPreset
	 * Size -> 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
	 */
	class USoundEffectSubmixPreset : public USoundEffectPreset
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ShapeComponent
	 * Size -> 0x0020 (FullSize[0x04A0] - InheritedSize[0x0480])
	 */
	class UShapeComponent : public UPrimitiveComponent
	{
	public:
		class UBodySetup*                                          ShapeBodySetup;                                          // 0x0480(0x0008) ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AreaClass;                                               // 0x0488(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              ShapeColor;                                              // 0x0490(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDrawOnlyIfSelected : 1;                                 // 0x0494(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShouldCollideWhenPlacing : 1;                           // 0x0494(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDynamicObstacle : 1;                                    // 0x0494(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y66X[0xB];                                   // 0x0495(0x000B) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BoxComponent
	 * Size -> 0x0010 (FullSize[0x04B0] - InheritedSize[0x04A0])
	 */
	class UBoxComponent : public UShapeComponent
	{
	public:
		struct FVector                                             BoxExtent;                                               // 0x0498(0x000C) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LineThickness;                                           // 0x04A4(0x0004) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_6A7A[0x8];                                   // 0x04A8(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetBoxExtent(const struct FVector& InBoxExtent, bool bUpdateOverlaps);
		struct FVector GetUnscaledBoxExtent();
		struct FVector GetScaledBoxExtent();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.StaticMeshComponent
	 * Size -> 0x0070 (FullSize[0x0540] - InheritedSize[0x04D0])
	 */
	class UStaticMeshComponent : public UMeshComponent
	{
	public:
		int32_t                                                    ForcedLodModel;                                          // 0x04D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PreviousLODLevel;                                        // 0x04D4(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinLOD;                                                  // 0x04D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubDivisionStepSize;                                     // 0x04DC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P7D7[0x8];                                   // 0x04E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMesh*                                         StaticMesh;                                              // 0x04E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FColor                                              WireframeColorOverride;                                  // 0x04F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEvaluateWorldPositionOffset : 1;                        // 0x04F4(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideWireframeColor : 1;                             // 0x04F4(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideMinLod : 1;                                     // 0x04F4(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideNavigationExport : 1;                           // 0x04F4(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceNavigationObstacle : 1;                            // 0x04F4(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisallowMeshPaintPerInstance : 1;                       // 0x04F4(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreInstanceForTextureStreaming : 1;                  // 0x04F4(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideLightMapRes : 1;                                // 0x04F4(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastDistanceFieldIndirectShadow : 1;                    // 0x04F5(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideDistanceFieldSelfShadowBias : 1;                // 0x04F5(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseSubDivisions : 1;                                    // 0x04F5(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseDefaultCollision : 1;                                // 0x04F5(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bReverseCulling : 1;                                     // 0x04F5(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GC9E[0x2];                                   // 0x04F6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    OverriddenLightMapRes;                                   // 0x04F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceFieldIndirectShadowMinVisibility;                // 0x04FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceFieldSelfShadowBias;                             // 0x0500(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StreamingDistanceMultiplier;                             // 0x0504(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FStaticMeshComponentLODInfo>                 LODData;                                                 // 0x0508(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		TArray<struct FStreamingTextureBuildInfo>                  StreamingTextureData;                                    // 0x0518(0x0010) ZeroConstructor, NonTransactional, NativeAccessSpecifierPublic
		struct FLightmassPrimitiveSettings                         LightmassSettings;                                       // 0x0528(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic

	public:
		bool SetStaticMesh(class UStaticMesh* NewMesh);
		void SetReverseCulling(bool ReverseCulling);
		void SetForcedLodModel(int32_t NewForcedLodModel);
		void SetEvaluateWorldPositionOffsetInRayTracing(bool NewValue);
		void SetDistanceFieldSelfShadowBias(float NewValue);
		void OnRep_StaticMesh(class UStaticMesh* OldStaticMesh);
		void GetLocalBounds(struct FVector* Min, struct FVector* Max);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Controller
	 * Size -> 0x0080 (FullSize[0x02B0] - InheritedSize[0x0230])
	 */
	class AController : public AActor
	{
	public:
		unsigned char                                              UnknownData_NRSH[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerState*                                        PlayerState;                                             // 0x0238(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5PNU[0x8];                                   // 0x0240(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnInstigatedAnyDamage;                                   // 0x0248(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FName                                                StateName;                                               // 0x0258(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JY7Y[0x4];                                   // 0x0264(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APawn*                                               Pawn;                                                    // 0x0268(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_WTOP[0x8];                                   // 0x0270(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACharacter*                                          Character;                                               // 0x0278(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USceneComponent*                                     TransformComponent;                                      // 0x0280(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8ZGY[0x18];                                  // 0x0288(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                            ControlRotation;                                         // 0x02A0(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              bAttachToPawn : 1;                                       // 0x02AC(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KLD0[0x3];                                   // 0x02AD(0x0003) MISSED OFFSET (PADDING)

	public:
		void UnPossess();
		void StopMovement();
		void SetInitialLocationAndRotation(const struct FVector& NewLocation, const struct FRotator& NewRotation);
		void SetIgnoreMoveInput(bool bNewMoveInput);
		void SetIgnoreLookInput(bool bNewLookInput);
		void SetControlRotation(const struct FRotator& NewRotation);
		void ResetIgnoreMoveInput();
		void ResetIgnoreLookInput();
		void ResetIgnoreInputFlags();
		void ReceiveUnPossess(class APawn* UnpossessedPawn);
		void ReceivePossess(class APawn* PossessedPawn);
		void ReceiveInstigatedAnyDamage(float Damage, class UDamageType* DamageType, class AActor* DamagedActor, class AActor* DamageCauser);
		void Possess(class APawn* InPawn);
		void OnRep_PlayerState();
		void OnRep_Pawn();
		bool LineOfSightTo(class AActor* Other, const struct FVector& ViewPoint, bool bAlternateChecks);
		class APawn* K2_GetPawn();
		bool IsPlayerController();
		bool IsMoveInputIgnored();
		bool IsLookInputIgnored();
		bool IsLocalPlayerController();
		bool IsLocalController();
		class AActor* GetViewTarget();
		struct FRotator GetDesiredRotation();
		struct FRotator GetControlRotation();
		void ClientSetRotation(const struct FRotator& NewRotation, bool bResetCamera);
		void ClientSetLocation(const struct FVector& NewLocation, const struct FRotator& NewRotation);
		class APlayerController* CastToPlayerController();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NavAreaBase
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UNavAreaBase : public UObject
	{
	public:
		unsigned char                                              UnknownData_AE3U[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.GameStateBase
	 * Size -> 0x0050 (FullSize[0x0280] - InheritedSize[0x0230])
	 */
	class AGameStateBase : public AInfo
	{
	public:
		class UClass*                                              GameModeClass;                                           // 0x0230(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AGameModeBase*                                       AuthorityGameMode;                                       // 0x0238(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              SpectatorClass;                                          // 0x0240(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class APlayerState*>                                PlayerArray;                                             // 0x0248(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic
		bool                                                       bReplicatedHasBegunPlay;                                 // 0x0258(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_5BU1[0x3];                                   // 0x0259(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ReplicatedWorldTimeSeconds;                              // 0x025C(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ServerWorldTimeSecondsDelta;                             // 0x0260(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ServerWorldTimeSecondsUpdateFrequency;                   // 0x0264(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_NR68[0x18];                                  // 0x0268(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnRep_SpectatorClass();
		void OnRep_ReplicatedWorldTimeSeconds();
		void OnRep_ReplicatedHasBegunPlay();
		void OnRep_GameModeClass();
		bool HasMatchStarted();
		bool HasMatchEnded();
		bool HasBegunPlay();
		float GetServerWorldTimeSeconds();
		float GetPlayerStartTime(class AController* Controller);
		float GetPlayerRespawnDelay(class AController* Controller);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.GameState
	 * Size -> 0x0028 (FullSize[0x02A8] - InheritedSize[0x0280])
	 */
	class AGameState : public AGameStateBase
	{
	public:
		class FName                                                MatchState;                                              // 0x0280(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                PreviousMatchState;                                      // 0x028C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    ElapsedTime;                                             // 0x0298(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FIYJ[0xC];                                   // 0x029C(0x000C) MISSED OFFSET (PADDING)

	public:
		void OnRep_MatchState();
		void OnRep_ElapsedTime();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LevelScriptActor
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class ALevelScriptActor : public AActor
	{
	public:
		unsigned char                                              bInputEnabled : 1;                                       // 0x0230(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_JNVJ[0x7];                                   // 0x0231(0x0007) MISSED OFFSET (PADDING)

	public:
		void WorldOriginLocationChanged(const struct FIntVector& OldOriginLocation, const struct FIntVector& NewOriginLocation);
		void SetCinematicMode(bool bCinematicMode, bool bHidePlayer, bool bAffectsHUD, bool bAffectsMovement, bool bAffectsTurning);
		bool RemoteEvent(const class FName& EventName);
		void LevelReset();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CameraActor
	 * Size -> 0x0590 (FullSize[0x07C0] - InheritedSize[0x0230])
	 */
	class ACameraActor : public AActor
	{
	public:
		EAutoReceiveInput                                          AutoActivateForPlayer;                                   // 0x0230(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_12J2[0x7];                                   // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCameraComponent*                                    CameraComponent;                                         // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USceneComponent*                                     SceneComponent;                                          // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_5081[0x8];                                   // 0x0248(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bConstrainAspectRatio : 1;                               // 0x0250(0x0001) BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_X0C6[0x3];                                   // 0x0251(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AspectRatio;                                             // 0x0254(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      FOVAngle;                                                // 0x0258(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      PostProcessBlendWeight;                                  // 0x025C(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FPostProcessSettings                                PostProcessSettings;                                     // 0x0260(0x0560) Deprecated, NativeAccessSpecifierPrivate

	public:
		int32_t GetAutoActivatePlayerIndex();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SaveGame
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class USaveGame : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CharacterMovementComponent
	 * Size -> 0x09C8 (FullSize[0x0B10] - InheritedSize[0x0148])
	 */
	class UCharacterMovementComponent : public UPawnMovementComponent
	{
	public:
		unsigned char                                              UnknownData_TMPW[0x10];                                  // 0x0148(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACharacter*                                          CharacterOwner;                                          // 0x0158(0x0008) ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      GravityScale;                                            // 0x0160(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxStepHeight;                                           // 0x0164(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JumpZVelocity;                                           // 0x0168(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JumpOffJumpZFactor;                                      // 0x016C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WalkableFloorAngle;                                      // 0x0170(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      WalkableFloorZ;                                          // 0x0174(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EMovementMode                                              MovementMode;                                            // 0x0178(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CustomMovementMode;                                      // 0x0179(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENetworkSmoothingMode                                      NetworkSmoothingMode;                                    // 0x017A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VN5R[0x1];                                   // 0x017B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GroundFriction;                                          // 0x017C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BGZ6[0x1C];                                  // 0x0180(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxWalkSpeed;                                            // 0x019C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxWalkSpeedCrouched;                                    // 0x01A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSwimSpeed;                                            // 0x01A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxFlySpeed;                                             // 0x01A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxCustomMovementSpeed;                                  // 0x01AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAcceleration;                                         // 0x01B0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinAnalogWalkSpeed;                                      // 0x01B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BrakingFrictionFactor;                                   // 0x01B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BrakingFriction;                                         // 0x01BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BrakingSubStepTime;                                      // 0x01C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BrakingDecelerationWalking;                              // 0x01C4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BrakingDecelerationFalling;                              // 0x01C8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BrakingDecelerationSwimming;                             // 0x01CC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BrakingDecelerationFlying;                               // 0x01D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AirControl;                                              // 0x01D4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AirControlBoostMultiplier;                               // 0x01D8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AirControlBoostVelocityThreshold;                        // 0x01DC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FallingLateralFriction;                                  // 0x01E0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CrouchedHalfHeight;                                      // 0x01E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Buoyancy;                                                // 0x01E8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PerchRadiusThreshold;                                    // 0x01EC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PerchAdditionalHeight;                                   // 0x01F0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationRate;                                            // 0x01F4(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bUseSeparateBrakingFriction : 1;                         // 0x0200(0x0001) BIT_FIELD Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bApplyGravityWhileJumping : 1;                           // 0x0200(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseControllerDesiredRotation : 1;                       // 0x0200(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOrientRotationToMovement : 1;                           // 0x0200(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSweepWhileNavWalking : 1;                               // 0x0200(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q2SE : 1;                                    // 0x0200(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bMovementInProgress : 1;                                 // 0x0200(0x0001) BIT_FIELD NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bEnableScopedMovementUpdates : 1;                        // 0x0200(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableServerDualMoveScopedMovementUpdates : 1;          // 0x0201(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceMaxAccel : 1;                                      // 0x0201(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRunPhysicsWithNoController : 1;                         // 0x0201(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceNextFloorCheck : 1;                                // 0x0201(0x0001) BIT_FIELD Edit, BlueprintVisible, DisableEditOnTemplate, EditConst, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShrinkProxyCapsule : 1;                                 // 0x0201(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCanWalkOffLedges : 1;                                   // 0x0201(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCanWalkOffLedgesWhenCrouching : 1;                      // 0x0201(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZFNZ : 1;                                    // 0x0201(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              UnknownData_HT8A : 1;                                    // 0x0202(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bNetworkSkipProxyPredictionOnNetUpdate : 1;              // 0x0202(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNetworkAlwaysReplicateTransformUpdateTimestamp : 1;     // 0x0202(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDeferUpdateMoveComponent : 1;                           // 0x0202(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnablePhysicsInteraction : 1;                           // 0x0202(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTouchForceScaledToMass : 1;                             // 0x0202(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPushForceScaledToMass : 1;                              // 0x0202(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPushForceUsingZOffset : 1;                              // 0x0202(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bScalePushForceToVelocity : 1;                           // 0x0203(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7XM4[0x4];                                   // 0x0204(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     DeferredUpdatedMoveComponent;                            // 0x0208(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxOutOfWaterStepHeight;                                 // 0x0210(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OutofWaterZ;                                             // 0x0214(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Mass;                                                    // 0x0218(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StandingDownwardForceScale;                              // 0x021C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialPushForceFactor;                                  // 0x0220(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PushForceFactor;                                         // 0x0224(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PushForcePointZOffsetFactor;                             // 0x0228(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TouchForceFactor;                                        // 0x022C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinTouchForce;                                           // 0x0230(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxTouchForce;                                           // 0x0234(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RepulsionForce;                                          // 0x0238(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Acceleration;                                            // 0x023C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_NYM0[0x8];                                   // 0x0248(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FQuat                                               LastUpdateRotation;                                      // 0x0250(0x0010) IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FVector                                             LastUpdateLocation;                                      // 0x0260(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             LastUpdateVelocity;                                      // 0x026C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ServerLastTransformUpdateTimeStamp;                      // 0x0278(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ServerLastClientGoodMoveAckTime;                         // 0x027C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ServerLastClientAdjustmentTime;                          // 0x0280(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             PendingImpulseToApply;                                   // 0x0284(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             PendingForceToApply;                                     // 0x0290(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      AnalogInputModifier;                                     // 0x029C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_NPID[0xC];                                   // 0x02A0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxSimulationTimeStep;                                   // 0x02AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxSimulationIterations;                                 // 0x02B0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxJumpApexAttemptsPerSimulation;                        // 0x02B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDepenetrationWithGeometry;                            // 0x02B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDepenetrationWithGeometryAsProxy;                     // 0x02BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDepenetrationWithPawn;                                // 0x02C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDepenetrationWithPawnAsProxy;                         // 0x02C4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetworkSimulatedSmoothLocationTime;                      // 0x02C8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetworkSimulatedSmoothRotationTime;                      // 0x02CC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ListenServerNetworkSimulatedSmoothLocationTime;          // 0x02D0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ListenServerNetworkSimulatedSmoothRotationTime;          // 0x02D4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetProxyShrinkRadius;                                    // 0x02D8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetProxyShrinkHalfHeight;                                // 0x02DC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetworkMaxSmoothUpdateDistance;                          // 0x02E0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetworkNoSmoothUpdateDistance;                           // 0x02E4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetworkMinTimeBetweenClientAckGoodMoves;                 // 0x02E8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetworkMinTimeBetweenClientAdjustments;                  // 0x02EC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetworkMinTimeBetweenClientAdjustmentsLargeCorrection;   // 0x02F0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetworkLargeClientCorrectionDistance;                    // 0x02F4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LedgeCheckThreshold;                                     // 0x02F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JumpOutOfWaterPitch;                                     // 0x02FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFindFloorResult                                    CurrentFloor;                                            // 0x0300(0x009C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		EMovementMode                                              DefaultLandMovementMode;                                 // 0x039C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMovementMode                                              DefaultWaterMovementMode;                                // 0x039D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMovementMode                                              GroundMovementMode;                                      // 0x039E(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bMaintainHorizontalGroundVelocity : 1;                   // 0x039F(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bImpartBaseVelocityX : 1;                                // 0x039F(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bImpartBaseVelocityY : 1;                                // 0x039F(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bImpartBaseVelocityZ : 1;                                // 0x039F(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bImpartBaseAngularVelocity : 1;                          // 0x039F(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bJustTeleported : 1;                                     // 0x039F(0x0001) BIT_FIELD Edit, BlueprintVisible, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNetworkUpdateReceived : 1;                              // 0x039F(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNetworkMovementModeChanged : 1;                         // 0x039F(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreClientMovementErrorChecksAndCorrection : 1;       // 0x03A0(0x0001) BIT_FIELD Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bServerAcceptClientAuthoritativePosition : 1;            // 0x03A0(0x0001) BIT_FIELD Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNotifyApex : 1;                                         // 0x03A0(0x0001) BIT_FIELD Edit, BlueprintVisible, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCheatFlying : 1;                                        // 0x03A0(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bWantsToCrouch : 1;                                      // 0x03A0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCrouchMaintainsBaseLocation : 1;                        // 0x03A0(0x0001) BIT_FIELD Edit, BlueprintVisible, DisableEditOnTemplate, EditConst, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreBaseRotation : 1;                                 // 0x03A0(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFastAttachedMove : 1;                                   // 0x03A0(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAlwaysCheckFloor : 1;                                   // 0x03A1(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseFlatBaseForFloorChecks : 1;                          // 0x03A1(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPerformingJumpOff : 1;                                  // 0x03A1(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bWantsToLeaveNavWalking : 1;                             // 0x03A1(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseRVOAvoidance : 1;                                    // 0x03A1(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRequestedMoveUseAcceleration : 1;                       // 0x03A1(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S3TV : 1;                                    // 0x03A1(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bWasSimulatingRootMotion : 1;                            // 0x03A1(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAllowPhysicsRotationDuringAnimRootMotion : 1;           // 0x03A2(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       LockRootMotionRotationPitch;                             // 0x03A3(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       LockRootMotionRotationYaw;                               // 0x03A4(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       LockRootMotionRotationRoll;                              // 0x03A5(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHasRequestedVelocity : 1;                               // 0x03A6(0x0001) BIT_FIELD Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bRequestedMoveWithMaxSpeed : 1;                          // 0x03A6(0x0001) BIT_FIELD Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bWasAvoidanceUpdated : 1;                                // 0x03A6(0x0001) BIT_FIELD Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_MQZH : 2;                                    // 0x03A6(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bProjectNavMeshWalking : 1;                              // 0x03A6(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bProjectNavMeshOnBothWorldChannels : 1;                  // 0x03A6(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_5CXR[0x11];                                  // 0x03A7(0x0011) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AvoidanceConsiderationRadius;                            // 0x03B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             RequestedVelocity;                                       // 0x03BC(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AvoidanceUID;                                            // 0x03C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FNavAvoidanceMask                                   AvoidanceGroup;                                          // 0x03CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic
		struct FNavAvoidanceMask                                   GroupsToAvoid;                                           // 0x03D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic
		struct FNavAvoidanceMask                                   GroupsToIgnore;                                          // 0x03D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic
		float                                                      AvoidanceWeight;                                         // 0x03D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PendingLaunchVelocity;                                   // 0x03DC(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QG8X[0xA8];                                  // 0x03E8(0x00A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NavMeshProjectionInterval;                               // 0x0490(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NavMeshProjectionTimer;                                  // 0x0494(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NavMeshProjectionInterpSpeed;                            // 0x0498(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NavMeshProjectionHeightScaleUp;                          // 0x049C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NavMeshProjectionHeightScaleDown;                        // 0x04A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NavWalkingFloorDistTolerance;                            // 0x04A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCharacterMovementComponentPostPhysicsTickFunction  PostPhysicsTickFunction;                                 // 0x04A8(0x0030) NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BG1R[0x18];                                  // 0x04D8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinTimeBetweenTimeStampResets;                           // 0x04F0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CD2M[0x4AC];                                 // 0x04F4(0x04AC) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRootMotionSourceGroup                              CurrentRootMotion;                                       // 0x09A0(0x0038) Transient, NativeAccessSpecifierPublic
		struct FRootMotionSourceGroup                              ServerCorrectionRootMotion;                              // 0x09D8(0x0038) Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_23ES[0x90];                                  // 0x0A10(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRootMotionMovementParams                           RootMotionParams;                                        // 0x0AA0(0x0040) Transient, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             AnimRootMotionVelocity;                                  // 0x0AE0(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8MVQ[0x24];                                  // 0x0AEC(0x0024) MISSED OFFSET (PADDING)

	public:
		void SetWalkableFloorZ(float InWalkableFloorZ);
		void SetWalkableFloorAngle(float InWalkableFloorAngle);
		void SetMovementMode(EMovementMode NewMovementMode, unsigned char NewCustomMode);
		void SetGroupsToIgnoreMask(const struct FNavAvoidanceMask& GroupMask);
		void SetGroupsToIgnore(int32_t GroupFlags);
		void SetGroupsToAvoidMask(const struct FNavAvoidanceMask& GroupMask);
		void SetGroupsToAvoid(int32_t GroupFlags);
		void SetAvoidanceGroupMask(const struct FNavAvoidanceMask& GroupMask);
		void SetAvoidanceGroup(int32_t GroupFlags);
		void SetAvoidanceEnabled(bool bEnable);
		float K2_GetWalkableFloorZ();
		float K2_GetWalkableFloorAngle();
		float K2_GetModifiedMaxAcceleration();
		void K2_FindFloor(const struct FVector& CapsuleLocation, struct FFindFloorResult* FloorResult);
		void K2_ComputeFloorDist(const struct FVector& CapsuleLocation, float LineDistance, float SweepDistance, float SweepRadius, struct FFindFloorResult* FloorResult);
		bool IsWalking();
		bool IsWalkable(const struct FHitResult& Hit);
		float GetValidPerchRadius();
		float GetPerchRadiusThreshold();
		class UPrimitiveComponent* GetMovementBase();
		float GetMinAnalogSpeed();
		float GetMaxJumpHeightWithJumpTime();
		float GetMaxJumpHeight();
		float GetMaxBrakingDeceleration();
		float GetMaxAcceleration();
		struct FVector GetLastUpdateVelocity();
		struct FRotator GetLastUpdateRotation();
		struct FVector GetLastUpdateLocation();
		struct FVector GetImpartedMovementBaseVelocity();
		struct FVector GetCurrentAcceleration();
		class ACharacter* GetCharacterOwner();
		float GetAnalogInputModifier();
		void DisableMovement();
		void ClearAccumulatedForces();
		void CapsuleTouched(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void CalcVelocity(float DeltaTime, float Friction, bool bFluid, float BrakingDeceleration);
		void AddImpulse(const struct FVector& Impulse, bool bVelocityChange);
		void AddForce(const struct FVector& force);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleSystemComponent
	 * Size -> 0x0280 (FullSize[0x0700] - InheritedSize[0x0480])
	 */
	class UParticleSystemComponent : public UFXSystemComponent
	{
	public:
		class UParticleSystem*                                     Template;                                                // 0x0480(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UMaterialInterface*>                          EmitterMaterials;                                        // 0x0488(0x0010) ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic
		TArray<class USkeletalMeshComponent*>                      SkelMeshComponents;                                      // 0x0498(0x0010) ExportObject, ZeroConstructor, Transient, DuplicateTransient, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1I44[0x1];                                   // 0x04A8(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bResetOnDetach : 1;                                      // 0x04A9(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUpdateOnDedicatedServer : 1;                            // 0x04A9(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UD7D : 2;                                    // 0x04A9(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bAllowRecycling : 1;                                     // 0x04A9(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAutoManageAttachment : 1;                               // 0x04A9(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAutoAttachWeldSimulatedBodies : 1;                      // 0x04A9(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YM31 : 1;                                    // 0x04A9(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              UnknownData_30UW : 1;                                    // 0x04AA(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bWarmingUp : 1;                                          // 0x04AA(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideLODMethod : 1;                                  // 0x04AA(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSkipUpdateDynamicDataDuringTick : 1;                    // 0x04AA(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NQ72[0xC];                                   // 0x04AB(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EParticleSystemLODMethod                                   LODMethod;                                               // 0x04B7(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EParticleSignificanceLevel                                 RequiredSignificance;                                    // 0x04B8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VVFI[0x7];                                   // 0x04B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FParticleSysParam>                           InstanceParameters;                                      // 0x04C0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnParticleSpawn;                                         // 0x04D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnParticleBurst;                                         // 0x04E0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnParticleDeath;                                         // 0x04F0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnParticleCollide;                                       // 0x0500(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bOldPositionValid;                                       // 0x0510(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_16J5[0x3];                                   // 0x0511(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             OldPosition;                                             // 0x0514(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PartSysVelocity;                                         // 0x0520(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WarmupTime;                                              // 0x052C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WarmupTickRate;                                          // 0x0530(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1O0L[0x4];                                   // 0x0534(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SecondsBeforeInactive;                                   // 0x0538(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KF7A[0x4];                                   // 0x053C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxTimeBeforeForceUpdateTransform;                       // 0x0540(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OXLJ[0x1C];                                  // 0x0544(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UParticleSystemReplay*>                       ReplayClips;                                             // 0x0560(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J19J[0x8];                                   // 0x0570(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CustomTimeDilation;                                      // 0x0578(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7E5S[0x68];                                  // 0x057C(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class USceneComponent>                      AutoAttachParent;                                        // 0x05E4(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AutoAttachSocketName;                                    // 0x05EC(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttachmentRule                                            AutoAttachLocationRule;                                  // 0x05F8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttachmentRule                                            AutoAttachRotationRule;                                  // 0x05F9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttachmentRule                                            AutoAttachScaleRule;                                     // 0x05FA(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_36N8[0x2D];                                  // 0x05FB(0x002D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnSystemFinished;                                        // 0x0628(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C3IQ[0xC8];                                  // 0x0638(0x00C8) MISSED OFFSET (PADDING)

	public:
		void SetTrailSourceData(const class FName& InFirstSocketName, const class FName& InSecondSocketName, ETrailWidthMode InWidthMode, float InWidth);
		void SetTemplate(class UParticleSystem* NewTemplate);
		void SetMaterialParameter(const class FName& ParameterName, class UMaterialInterface* Param);
		void SetBeamTargetTangent(int32_t EmitterIndex, const struct FVector& NewTangentPoint, int32_t TargetIndex);
		void SetBeamTargetStrength(int32_t EmitterIndex, float NewTargetStrength, int32_t TargetIndex);
		void SetBeamTargetPoint(int32_t EmitterIndex, const struct FVector& NewTargetPoint, int32_t TargetIndex);
		void SetBeamSourceTangent(int32_t EmitterIndex, const struct FVector& NewTangentPoint, int32_t SourceIndex);
		void SetBeamSourceStrength(int32_t EmitterIndex, float NewSourceStrength, int32_t SourceIndex);
		void SetBeamSourcePoint(int32_t EmitterIndex, const struct FVector& NewSourcePoint, int32_t SourceIndex);
		void SetBeamEndPoint(int32_t EmitterIndex, const struct FVector& NewEndPoint);
		void SetAutoAttachParams(class USceneComponent* Parent, const class FName& SocketName, EAttachLocation LocationType);
		int32_t GetNumActiveParticles();
		class UMaterialInterface* GetNamedMaterial(const class FName& InName);
		bool GetBeamTargetTangent(int32_t EmitterIndex, int32_t TargetIndex, struct FVector* OutTangentPoint);
		bool GetBeamTargetStrength(int32_t EmitterIndex, int32_t TargetIndex, float* OutTargetStrength);
		bool GetBeamTargetPoint(int32_t EmitterIndex, int32_t TargetIndex, struct FVector* OutTargetPoint);
		bool GetBeamSourceTangent(int32_t EmitterIndex, int32_t SourceIndex, struct FVector* OutTangentPoint);
		bool GetBeamSourceStrength(int32_t EmitterIndex, int32_t SourceIndex, float* OutSourceStrength);
		bool GetBeamSourcePoint(int32_t EmitterIndex, int32_t SourceIndex, struct FVector* OutSourcePoint);
		bool GetBeamEndPoint(int32_t EmitterIndex, struct FVector* OutEndPoint);
		void GenerateParticleEvent(const class FName& InEventName, float InEmitterTime, const struct FVector& InLocation, const struct FVector& InDirection, const struct FVector& InVelocity);
		void EndTrails();
		class UMaterialInstanceDynamic* CreateNamedDynamicMaterialInstance(const class FName& InName, class UMaterialInterface* SourceMaterial);
		void BeginTrails(const class FName& InFirstSocketName, const class FName& InSecondSocketName, ETrailWidthMode InWidthMode, float InWidth);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.gameMode
	 * Size -> 0x0050 (FullSize[0x0328] - InheritedSize[0x02D8])
	 */
	class AgameMode : public AGameModeBase
	{
	public:
		class FName                                                MatchState;                                              // 0x02D8(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bDelayedStart : 1;                                       // 0x02E4(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XN4T[0x3];                                   // 0x02E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NumSpectators;                                           // 0x02E8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumPlayers;                                              // 0x02EC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumBots;                                                 // 0x02F0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinRespawnDelay;                                         // 0x02F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumTravellingPlayers;                                    // 0x02F8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R1PY[0x4];                                   // 0x02FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              EngineMessageClass;                                      // 0x0300(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class APlayerState*>                                InactivePlayerArray;                                     // 0x0308(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      InactivePlayerStateLifeSpan;                             // 0x0318(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    MaxInactivePlayers;                                      // 0x031C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHandleDedicatedServerReplays;                           // 0x0320(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KA74[0x7];                                   // 0x0321(0x0007) MISSED OFFSET (PADDING)

	public:
		void StartMatch();
		void SetBandwidthLimit(float AsyncIOBandwidthLimit);
		void Say(const class FString& Msg);
		void RestartGame();
		bool ReadyToStartMatch();
		bool ReadyToEndMatch();
		void K2_OnSetMatchState(const class FName& NewState);
		bool IsMatchInProgress();
		class FName GetMatchState();
		void EndMatch();
		void AbortMatch();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.HUD
	 * Size -> 0x00F0 (FullSize[0x0320] - InheritedSize[0x0230])
	 */
	class AHUD : public AActor
	{
	public:
		class APlayerController*                                   PlayerOwner;                                             // 0x0230(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLostFocusPaused : 1;                                    // 0x0238(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShowHUD : 1;                                            // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShowDebugInfo : 1;                                      // 0x0238(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FPAR[0x3];                                   // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CurrentTargetIndex;                                      // 0x023C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShowHitBoxDebugInfo : 1;                                // 0x0240(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShowOverlays : 1;                                       // 0x0240(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableDebugTextShadow : 1;                              // 0x0240(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JHLX[0x7];                                   // 0x0241(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      PostRenderedActors;                                      // 0x0248(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QS7M[0x8];                                   // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        DebugDisplay;                                            // 0x0260(0x0010) ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic
		TArray<class FName>                                        ToggledDebugCategories;                                  // 0x0270(0x0010) ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic
		class UCanvas*                                             Canvas;                                                  // 0x0280(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvas*                                             DebugCanvas;                                             // 0x0288(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FDebugTextInfo>                              DebugTextList;                                           // 0x0290(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		class UClass*                                              ShowDebugTargetDesiredClass;                             // 0x02A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AActor*                                              ShowDebugTargetActor;                                    // 0x02A8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_S2SA[0x70];                                  // 0x02B0(0x0070) MISSED OFFSET (PADDING)

	public:
		void ShowHUD();
		void ShowDebugToggleSubCategory(const class FName& Category);
		void ShowDebugForReticleTargetToggle(class UClass* DesiredClass);
		void ShowDebug(const class FName& DebugType);
		void RemoveDebugText(class AActor* SrcActor, bool bLeaveDurationText);
		void RemoveAllDebugStrings();
		void ReceiveHitBoxRelease(const class FName& BoxName);
		void ReceiveHitBoxEndCursorOver(const class FName& BoxName);
		void ReceiveHitBoxClick(const class FName& BoxName);
		void ReceiveHitBoxBeginCursorOver(const class FName& BoxName);
		void ReceiveDrawHUD(int32_t SizeX, int32_t SizeY);
		struct FVector Project(const struct FVector& Location);
		void PreviousDebugTarget();
		void NextDebugTarget();
		void GetTextSize(const class FString& Text, float* OutWidth, float* OutHeight, class UFont* Font, float Scale);
		class APlayerController* GetOwningPlayerController();
		class APawn* GetOwningPawn();
		void GetActorsInSelectionRectangle(class UClass* ClassFilter, const struct FVector2D& FirstPoint, const struct FVector2D& SecondPoint, TArray<class AActor*>* OutActors, bool bIncludeNonCollidingComponents, bool bActorMustBeFullyEnclosed);
		void DrawTextureSimple(class UTexture* Texture, float ScreenX, float ScreenY, float Scale, bool bScalePosition);
		void DrawTexture(class UTexture* Texture, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float TextureU, float TextureV, float TextureUWidth, float TextureVHeight, const struct FLinearColor& TintColor, EBlendMode BlendMode, float Scale, bool bScalePosition, float Rotation, const struct FVector2D& RotPivot);
		void DrawText(const class FString& Text, const struct FLinearColor& TextColor, float ScreenX, float ScreenY, class UFont* Font, float Scale, bool bScalePosition);
		void DrawRect(const struct FLinearColor& RectColor, float ScreenX, float ScreenY, float ScreenW, float ScreenH);
		void DrawMaterialTriangle(class UMaterialInterface* Material, const struct FVector2D& V0_Pos, const struct FVector2D& V1_Pos, const struct FVector2D& V2_Pos, const struct FVector2D& V0_UV, const struct FVector2D& V1_UV, const struct FVector2D& V2_UV, const struct FLinearColor& V0_Color, const struct FLinearColor& V1_Color, const struct FLinearColor& V2_Color);
		void DrawMaterialSimple(class UMaterialInterface* Material, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float Scale, bool bScalePosition);
		void DrawMaterial(class UMaterialInterface* Material, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float MaterialU, float MaterialV, float MaterialUWidth, float MaterialVHeight, float Scale, bool bScalePosition, float Rotation, const struct FVector2D& RotPivot);
		void DrawLine(float StartScreenX, float StartScreenY, float EndScreenX, float EndScreenY, const struct FLinearColor& LineColor, float LineThickness);
		void Deproject(float ScreenX, float ScreenY, struct FVector* WorldPosition, struct FVector* WorldDirection);
		void AddHitBox(const struct FVector2D& position, const struct FVector2D& Size, const class FName& InName, bool bConsumesInput, int32_t Priority);
		void AddDebugText(const class FString& DebugText, class AActor* SrcActor, float Duration, const struct FVector& Offset, const struct FVector& DesiredOffset, const struct FColor& TextColor, bool bSkipOverwriteCheck, bool bAbsoluteLocation, bool bKeepAttachedToActor, class UFont* InFont, float FontScale, bool bDrawShadow);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PlayerController
	 * Size -> 0x02D8 (FullSize[0x0588] - InheritedSize[0x02B0])
	 */
	class APlayerController : public AController
	{
	public:
		class UPlayer*                                             Player;                                                  // 0x02B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APawn*                                               AcknowledgedPawn;                                        // 0x02B8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInterpTrackInstDirector*                            ControllingDirTrackInst;                                 // 0x02C0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AHUD*                                                MyHUD;                                                   // 0x02C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerCameraManager*                                PlayerCameraManager;                                     // 0x02D0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              PlayerCameraManagerClass;                                // 0x02D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoManageActiveCameraTarget;                           // 0x02E0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TP6C[0x3];                                   // 0x02E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                            TargetViewRotation;                                      // 0x02E4(0x000C) Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GV89[0xC];                                   // 0x02F0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SmoothTargetViewRotationSpeed;                           // 0x02FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_26ON[0x8];                                   // 0x0300(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      HiddenActors;                                            // 0x0308(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<TWeakObjectPtr<class UPrimitiveComponent>>          HiddenPrimitiveComponents;                               // 0x0318(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DRXG[0x4];                                   // 0x0328(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastSpectatorStateSynchTime;                             // 0x032C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LastSpectatorSyncLocation;                               // 0x0330(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            LastSpectatorSyncRotation;                               // 0x033C(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    ClientCap;                                               // 0x0348(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3EJE[0x4];                                   // 0x034C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCheatManager*                                       CheatManager;                                            // 0x0350(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              CheatClass;                                              // 0x0358(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPlayerInput*                                        PlayerInput;                                             // 0x0360(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FActiveForceFeedbackEffect>                  ActiveForceFeedbackEffects;                              // 0x0368(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7GAD[0x70];                                  // 0x0378(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              UnknownData_BLOG : 4;                                    // 0x03E8(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bPlayerIsWaiting : 1;                                    // 0x03E8(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_REX2[0x3];                                   // 0x03E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              NetPlayerIndex;                                          // 0x03EC(0x0001) ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CHUA[0x3B];                                  // 0x03ED(0x003B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UNetConnection*                                      PendingSwapConnection;                                   // 0x0428(0x0008) ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UNetConnection*                                      NetConnection;                                           // 0x0430(0x0008) ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_161C[0xC];                                   // 0x0438(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InputYawScale;                                           // 0x0444(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InputPitchScale;                                         // 0x0448(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InputRollScale;                                          // 0x044C(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShowMouseCursor : 1;                                    // 0x0450(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableClickEvents : 1;                                  // 0x0450(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableTouchEvents : 1;                                  // 0x0450(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableMouseOverEvents : 1;                              // 0x0450(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableTouchOverEvents : 1;                              // 0x0450(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceFeedbackEnabled : 1;                               // 0x0450(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZYNF[0x3];                                   // 0x0451(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ForceFeedbackScale;                                      // 0x0454(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FKey>                                        ClickEventKeys;                                          // 0x0458(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		EMouseCursor                                               DefaultMouseCursor;                                      // 0x0468(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMouseCursor                                               CurrentMouseCursor;                                      // 0x0469(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECollisionChannel                                          DefaultClickTraceChannel;                                // 0x046A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECollisionChannel                                          CurrentClickTraceChannel;                                // 0x046B(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HitResultTraceDistance;                                  // 0x046C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint16_t                                                   SeamlessTravelCount;                                     // 0x0470(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint16_t                                                   LastCompletedSeamlessTravelCount;                        // 0x0472(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VO0I[0x74];                                  // 0x0474(0x0074) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInputComponent*                                     InactiveStateInputComponent;                             // 0x04E8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ZUH9 : 2;                                    // 0x04F0(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bShouldPerformFullTickWhenPaused : 1;                    // 0x04F0(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_BGLV[0x17];                                  // 0x04F1(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTouchInterface*                                     CurrentTouchInterface;                                   // 0x0508(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_MJLI[0x50];                                  // 0x0510(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASpectatorPawn*                                      SpectatorPawn;                                           // 0x0560(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DL87[0x4];                                   // 0x0568(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsLocalPlayerController;                                // 0x056C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_5EO4[0x3];                                   // 0x056D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             SpawnLocation;                                           // 0x0570(0x000C) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_MGMV[0xC];                                   // 0x057C(0x000C) MISSED OFFSET (PADDING)

	public:
		bool WasInputKeyJustReleased(const struct FKey& Key);
		bool WasInputKeyJustPressed(const struct FKey& Key);
		void ToggleSpeaking(bool bInSpeaking);
		void TestServerLevelVisibilityChange(const class FName& PackageName, const class FName& Filename);
		void SwitchLevel(const class FString& URL);
		void StopHapticEffect(EControllerHand Hand);
		void StartFire(unsigned char FireModeNum);
		void SetVirtualJoystickVisibility(bool bVisible);
		void SetViewTargetWithBlend(class AActor* NewViewTarget, float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp, bool bLockOutgoing);
		void SetName(const class FString& S);
		void SetMouseLocation(int32_t X, int32_t Y);
		void SetMouseCursorWidget(EMouseCursor Cursor, class UUserWidget* CursorWidget);
		void SetHapticsByValue(float Frequency, float Amplitude, EControllerHand Hand);
		void SetDisableHaptics(bool bNewDisabled);
		void SetControllerLightColor(const struct FColor& Color);
		void SetCinematicMode(bool bInCinematicMode, bool bHidePlayer, bool bAffectsHUD, bool bAffectsMovement, bool bAffectsTurning);
		void SetAudioListenerOverride(class USceneComponent* AttachToComponent, const struct FVector& Location, const struct FRotator& Rotation);
		void SetAudioListenerAttenuationOverride(class USceneComponent* AttachToComponent, const struct FVector& AttenuationLocationOVerride);
		void ServerViewSelf(const struct FViewTargetTransitionParams& TransitionParams);
		void ServerViewPrevPlayer();
		void ServerViewNextPlayer();
		void ServerVerifyViewTarget();
		void ServerUpdateMultipleLevelsVisibility(TArray<struct FUpdateLevelVisibilityLevelInfo> LevelVisibilities);
		void ServerUpdateLevelVisibility(const struct FUpdateLevelVisibilityLevelInfo& LevelVisibility);
		void ServerUpdateCamera(const struct FVector_NetQuantize& CamLoc, int32_t CamPitchAndYaw);
		void ServerUnmutePlayer(const struct FUniqueNetIdRepl& playerID);
		void ServerToggleAILogging();
		void ServerShortTimeout();
		void ServerSetSpectatorWaiting(bool bWaiting);
		void ServerSetSpectatorLocation(const struct FVector& NewLoc, const struct FRotator& NewRot);
		void ServerRestartPlayer();
		void ServerPause();
		void ServerNotifyLoadedWorld(const class FName& WorldPackageName);
		void ServerMutePlayer(const struct FUniqueNetIdRepl& playerID);
		void ServerExecRPC(const class FString& Msg);
		void ServerExec(const class FString& Msg);
		void ServerCheckClientPossessionReliable();
		void ServerCheckClientPossession();
		void ServerChangeName(const class FString& S);
		void ServerCamera(const class FName& newMode);
		void ServerAcknowledgePossession(class APawn* P);
		void SendToConsole(const class FString& Command);
		void RestartLevel();
		void ResetControllerLightColor();
		bool ProjectWorldLocationToScreen(const struct FVector& WorldLocation, struct FVector2D* ScreenLocation, bool bPlayerViewportRelative);
		void PlayHapticEffect(class UHapticFeedbackEffect_Base* HapticEffect, EControllerHand Hand, float Scale, bool bLoop);
		void PlayDynamicForceFeedback(float Intensity, float Duration, bool bAffectsLeftLarge, bool bAffectsLeftSmall, bool bAffectsRightLarge, bool bAffectsRightSmall, EDynamicForceFeedbackAction action, const struct FLatentActionInfo& LatentInfo);
		void Pause();
		void OnServerStartedVisualLogger(bool bIsLogging);
		void LocalTravel(const class FString& URL);
		void K2_ClientPlayForceFeedback(class UForceFeedbackEffect* ForceFeedbackEffect, const class FName& Tag, bool bLooping, bool bIgnoreTimeDilation, bool bPlayWhilePaused);
		bool IsInputKeyDown(const struct FKey& Key);
		void GetViewportSize(int32_t* SizeX, int32_t* SizeY);
		class ASpectatorPawn* GetSpectatorPawn();
		bool GetMousePosition(float* LocationX, float* LocationY);
		struct FVector GetInputVectorKeyState(const struct FKey& Key);
		void GetInputTouchState(ETouchIndex FingerIndex, float* LocationX, float* LocationY, bool* bIsCurrentlyPressed);
		void GetInputMouseDelta(float* DeltaX, float* DeltaY);
		void GetInputMotionState(struct FVector* Tilt, struct FVector* RotationRate, struct FVector* Gravity, struct FVector* Acceleration);
		float GetInputKeyTimeDown(const struct FKey& Key);
		void GetInputAnalogStickState(EControllerAnalogStick WhichStick, float* StickX, float* StickY);
		float GetInputAnalogKeyState(const struct FKey& Key);
		class AHUD* GetHUD();
		bool GetHitResultUnderFingerForObjects(ETouchIndex FingerIndex, TArray<EObjectTypeQuery> ObjectTypes, bool bTraceComplex, struct FHitResult* HitResult);
		bool GetHitResultUnderFingerByChannel(ETouchIndex FingerIndex, ETraceTypeQuery TraceChannel, bool bTraceComplex, struct FHitResult* HitResult);
		bool GetHitResultUnderFinger(ETouchIndex FingerIndex, ECollisionChannel TraceChannel, bool bTraceComplex, struct FHitResult* HitResult);
		bool GetHitResultUnderCursorForObjects(TArray<EObjectTypeQuery> ObjectTypes, bool bTraceComplex, struct FHitResult* HitResult);
		bool GetHitResultUnderCursorByChannel(ETraceTypeQuery TraceChannel, bool bTraceComplex, struct FHitResult* HitResult);
		bool GetHitResultUnderCursor(ECollisionChannel TraceChannel, bool bTraceComplex, struct FHitResult* HitResult);
		struct FVector GetFocalLocation();
		void FOV(float NewFOV);
		void EnableCheats();
		bool DeprojectScreenPositionToWorld(float ScreenX, float ScreenY, struct FVector* WorldLocation, struct FVector* WorldDirection);
		bool DeprojectMousePositionToWorld(struct FVector* WorldLocation, struct FVector* WorldDirection);
		void ConsoleKey(const struct FKey& Key);
		void ClientWasKicked(uint32_t KickReason, uint32_t ErrorCode, const class FString& AdditionalInfo);
		void ClientVoiceHandshakeComplete();
		void ClientUpdateMultipleLevelsStreamingStatus(TArray<struct FUpdateLevelStreamingLevelStatus> LevelStatuses);
		void ClientUpdateLevelStreamingStatus(const class FName& PackageName, bool bNewShouldBeLoaded, bool bNewShouldBeVisible, bool bNewShouldBlockOnLoad, int32_t LODIndex);
		void ClientUnmutePlayer(const struct FUniqueNetIdRepl& playerID);
		void ClientTravelInternal(const class FString& URL, ETravelType TravelType, bool bSeamless, const struct FGuid& MapPackageGuid);
		void ClientTravel(const class FString& URL, ETravelType TravelType, bool bSeamless, const struct FGuid& MapPackageGuid);
		void ClientTeamMessage(class APlayerState* SenderPlayerState, const class FString& S, const class FName& Type, float MsgLifeTime);
		void ClientStopForceFeedback(class UForceFeedbackEffect* ForceFeedbackEffect, const class FName& Tag);
		void ClientStopCameraShakesFromSource(class UCameraShakeSourceComponent* SourceComponent, bool bImmediately);
		void ClientStopCameraShake(class UClass* Shake, bool bImmediately);
		void ClientStopCameraAnim(class UCameraAnim* AnimToStop);
		void ClientStartOnlineSession();
		void ClientStartCameraShakeFromSource(class UClass* Shake, class UCameraShakeSourceComponent* SourceComponent);
		void ClientStartCameraShake(class UClass* Shake, float Scale, ECameraShakePlaySpace PlaySpace, const struct FRotator& UserPlaySpaceRot);
		void ClientSpawnCameraLensEffect(class UClass* LensEffectEmitterClass);
		void ClientSetViewTarget(class AActor* A, const struct FViewTargetTransitionParams& TransitionParams);
		void ClientSetSpectatorWaiting(bool bWaiting);
		void ClientSetHUD(class UClass* NewHUDClass);
		void ClientSetForceMipLevelsToBeResident(class UMaterialInterface* Material, float ForceDuration, int32_t CinematicTextureGroups);
		void ClientSetCinematicMode(bool bInCinematicMode, bool bAffectsMovement, bool bAffectsTurning, bool bAffectsHUD);
		void ClientSetCameraMode(const class FName& NewCamMode);
		void ClientSetCameraFade(bool bEnableFading, const struct FColor& FadeColor, const struct FVector2D& FadeAlpha, float FadeTime, bool bFadeAudio, bool bHoldWhenFinished);
		void ClientSetBlockOnAsyncLoading();
		void ClientReturnToMainMenuWithTextReason(const class FText& ReturnReason);
		void ClientReturnToMainMenu(const class FString& ReturnReason);
		void ClientRetryClientRestart(class APawn* NewPawn);
		void ClientRestart(class APawn* NewPawn);
		void ClientReset();
		void ClientRepObjRef(class UObject* Object);
		void ClientReceiveLocalizedMessage(class UClass* Message, int32_t Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject);
		void ClientPrestreamTextures(class AActor* ForcedActor, float ForceDuration, bool bEnableStreaming, int32_t CinematicTextureGroups);
		void ClientPrepareMapChange(const class FName& LevelName, bool bFirst, bool bLast);
		void ClientPlaySoundAtLocation(class USoundBase* Sound, const struct FVector& Location, float VolumeMultiplier, float PitchMultiplier);
		void ClientPlaySound(class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier);
		void ClientPlayForceFeedback_Internal(class UForceFeedbackEffect* ForceFeedbackEffect, const struct FForceFeedbackParameters& Params);
		void ClientPlayCameraAnim(class UCameraAnim* AnimToPlay, float Scale, float Rate, float BlendInTime, float BlendOutTime, bool bLoop, bool bRandomStartTime, ECameraShakePlaySpace space, const struct FRotator& CustomPlaySpace);
		void ClientMutePlayer(const struct FUniqueNetIdRepl& playerID);
		void ClientMessage(const class FString& S, const class FName& Type, float MsgLifeTime);
		void ClientIgnoreMoveInput(bool bIgnore);
		void ClientIgnoreLookInput(bool bIgnore);
		void ClientGotoState(const class FName& NewState);
		void ClientGameEnded(class AActor* EndGameFocus, bool bIsWinner);
		void ClientForceGarbageCollection();
		void ClientFlushLevelStreaming();
		void ClientEndOnlineSession();
		void ClientEnableNetworkVoice(bool bEnable);
		void ClientCommitMapChange();
		void ClientClearCameraLensEffects();
		void ClientCapBandwidth(int32_t Cap);
		void ClientCancelPendingMapChange();
		void ClientAddTextureStreamingLoc(const struct FVector& InLoc, float Duration, bool bOverrideLocation);
		void ClearAudioListenerOverride();
		void ClearAudioListenerAttenuationOverride();
		bool CanRestartPlayer();
		void Camera(const class FName& newMode);
		void AddYawInput(float Val);
		void AddRollInput(float Val);
		void AddPitchInput(float Val);
		void ActivateTouchInterface(class UTouchInterface* NewTouchInterface);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CheatManager
	 * Size -> 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
	 */
	class UCheatManager : public UObject
	{
	public:
		class ADebugCameraController*                              DebugCameraControllerRef;                                // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DebugCameraControllerClass;                              // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YRBP[0x40];                                  // 0x0040(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UCheatManagerExtension*>                      CheatManagerExtensions;                                  // 0x0080(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected

	public:
		void Walk();
		void ViewSelf();
		void ViewPlayer(const class FString& S);
		void ViewClass(class UClass* DesiredClass);
		void ViewActor(const class FName& ActorName);
		void UpdateSafeArea();
		void ToggleServerStatReplicatorUpdateStatNet();
		void ToggleServerStatReplicatorClientOverwrite();
		void ToggleDebugCamera();
		void ToggleAILogging();
		void TestCollisionDistance();
		void Teleport();
		void Summon(const class FString& ClassName);
		void StreamLevelOut(const class FName& PackageName);
		void StreamLevelIn(const class FName& PackageName);
		void SpawnServerStatReplicator();
		void Slomo(float NewTimeDilation);
		void SetWorldOrigin();
		void SetMouseSensitivityToDefault();
		void ServerToggleAILogging();
		void ReceiveInitCheatManager();
		void ReceiveEndPlay();
		void PlayersOnly();
		void OnlyLoadLevel(const class FName& PackageName);
		void LogLoc();
		void InvertMouse();
		void God();
		void Ghost();
		void FreezeFrame(float Delay);
		void Fly();
		void FlushLog();
		void EnableDebugCamera();
		void DumpVoiceMutingState();
		void DumpPartyState();
		void DumpOnlineSessionState();
		void DumpChatState();
		void DisableDebugCamera();
		void DestroyTarget();
		void DestroyServerStatReplicator();
		void DestroyPawns(class UClass* aClass);
		void DestroyAllPawnsExceptTarget();
		void DestroyAll(class UClass* aClass);
		void DebugCapsuleSweepSize(float HalfHeight, float Radius);
		void DebugCapsuleSweepPawn();
		void DebugCapsuleSweepComplex(bool bTraceComplex);
		void DebugCapsuleSweepClear();
		void DebugCapsuleSweepChannel(ECollisionChannel Channel);
		void DebugCapsuleSweepCapture();
		void DebugCapsuleSweep();
		void DamageTarget(float DamageAmount);
		void CheatScript(const class FString& ScriptName);
		void ChangeSize(float F);
		void BugItStringCreator(const struct FVector& ViewLocation, const struct FRotator& ViewRotation, class FString* GoString, class FString* LocString);
		void BugItGo(float X, float Y, float Z, float Pitch, float Yaw, float Roll);
		void BugIt(const class FString& ScreenShotDescription);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BHVRCheatValidatorSubsystem
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UBHVRCheatValidatorSubsystem : public UEngineSubsystem
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DebugCameraController
	 * Size -> 0x0108 (FullSize[0x0690] - InheritedSize[0x0588])
	 */
	class ADebugCameraController : public APlayerController
	{
	public:
		unsigned char                                              bShowSelectedInfo : 1;                                   // 0x0588(0x0001) BIT_FIELD Config, GlobalConfig, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsFrozenRendering : 1;                                  // 0x0588(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsOrbitingSelectedActor : 1;                            // 0x0588(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOrbitPivotUseCenter : 1;                                // 0x0588(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableBufferVisualization : 1;                          // 0x0588(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableBufferVisualizationFullMode : 1;                  // 0x0588(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsBufferVisualizationInputSetup : 1;                    // 0x0588(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLastDisplayEnabled : 1;                                 // 0x0588(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PDP4[0x7];                                   // 0x0589(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDrawFrustumComponent*                               DrawFrustum;                                             // 0x0590(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              SelectedActor;                                           // 0x0598(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPrimitiveComponent*                                 SelectedComponent;                                       // 0x05A0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHitResult                                          SelectedHitPoint;                                        // 0x05A8(0x0090) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class APlayerController*                                   OriginalControllerRef;                                   // 0x0638(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPlayer*                                             OriginalPlayer;                                          // 0x0640(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedScale;                                              // 0x0648(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialMaxSpeed;                                         // 0x064C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialAccel;                                            // 0x0650(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialDecel;                                            // 0x0654(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TTQI[0x38];                                  // 0x0658(0x0038) MISSED OFFSET (PADDING)

	public:
		void ToggleDisplay();
		void ShowDebugSelectedInfo();
		void SetPawnMovementSpeedScale(float NewSpeedScale);
		void ReceiveOnDeactivate(class APlayerController* RestoredPC);
		void ReceiveOnActorSelected(class AActor* NewSelectedActor, const struct FVector& SelectHitLocation, const struct FVector& SelectHitNormal, const struct FHitResult& Hit);
		void ReceiveOnActivate(class APlayerController* OriginalPC);
		class AActor* GetSelectedActor();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DecalComponent
	 * Size -> 0x0040 (FullSize[0x0260] - InheritedSize[0x0220])
	 */
	class UDecalComponent : public USceneComponent
	{
	public:
		class UMaterialInterface*                                  DecalMaterial;                                           // 0x0218(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    SortOrder;                                               // 0x0220(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FadeScreenSize;                                          // 0x0224(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FadeStartDelay;                                          // 0x0228(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FadeDuration;                                            // 0x022C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FadeInDuration;                                          // 0x0230(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FadeInStartDelay;                                        // 0x0234(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDestroyOwnerAfterFade : 1;                              // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1B07[0x3];                                   // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             DecalSize;                                               // 0x023C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8TIL[0x18];                                  // 0x0248(0x0018) MISSED OFFSET (PADDING)

	public:
		void SetSortOrder(int32_t value);
		void SetFadeScreenSize(float NewFadeScreenSize);
		void SetFadeOut(float StartDelay, float Duration, bool DestroyOwnerAfterFade);
		void SetFadeIn(float StartDelay, float Duaration);
		void SetDecalMaterial(class UMaterialInterface* NewDecalMaterial);
		float GetFadeStartDelay();
		float GetFadeInStartDelay();
		float GetFadeInDuration();
		float GetFadeDuration();
		class UMaterialInterface* GetDecalMaterial();
		class UMaterialInstanceDynamic* CreateDynamicMaterialInstance();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Engine
	 * Size -> 0x0E38 (FullSize[0x0E68] - InheritedSize[0x0030])
	 */
	class UEngine : public UObject
	{
	public:
		unsigned char                                              UnknownData_YJ65[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFont*                                               TinyFont;                                                // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FSoftObjectPath                                     TinyFontName;                                            // 0x0040(0x0020) Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFont*                                               SmallFont;                                               // 0x0060(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FSoftObjectPath                                     SmallFontName;                                           // 0x0068(0x0020) Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFont*                                               MediumFont;                                              // 0x0088(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FSoftObjectPath                                     MediumFontName;                                          // 0x0090(0x0020) Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFont*                                               LargeFont;                                               // 0x00B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FSoftObjectPath                                     LargeFontName;                                           // 0x00B8(0x0020) Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFont*                                               SubtitleFont;                                            // 0x00D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FSoftObjectPath                                     SubtitleFontName;                                        // 0x00E0(0x0020) Edit, ZeroConstructor, Config, GlobalConfig, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UFont*>                                       AdditionalFonts;                                         // 0x0100(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class FString>                                      AdditionalFontNames;                                     // 0x0110(0x0010) Edit, ZeroConstructor, Config, GlobalConfig, AdvancedDisplay, NativeAccessSpecifierPublic
		class UClass*                                              ConsoleClass;                                            // 0x0120(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      ConsoleClassName;                                        // 0x0128(0x0020) Edit, ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              GameViewportClientClass;                                 // 0x0148(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      GameViewportClientClassName;                             // 0x0150(0x0020) Edit, ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              LocalPlayerClass;                                        // 0x0170(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      LocalPlayerClassName;                                    // 0x0178(0x0020) Edit, ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              WorldSettingsClass;                                      // 0x0198(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      WorldSettingsClassName;                                  // 0x01A0(0x0020) Edit, ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      NavigationSystemClassName;                               // 0x01C0(0x0020) ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              NavigationSystemClass;                                   // 0x01E0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      NavigationSystemConfigClassName;                         // 0x01E8(0x0020) ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              NavigationSystemConfigClass;                             // 0x0208(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      AvoidanceManagerClassName;                               // 0x0210(0x0020) ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AvoidanceManagerClass;                                   // 0x0230(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      AIControllerClassName;                                   // 0x0238(0x0020) ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              PhysicsCollisionHandlerClass;                            // 0x0258(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      PhysicsCollisionHandlerClassName;                        // 0x0260(0x0020) Edit, ZeroConstructor, Config, GlobalConfig, NoClear, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      GameUserSettingsClassName;                               // 0x0280(0x0020) ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              GameUserSettingsClass;                                   // 0x02A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameUserSettings*                                   GameUserSettings;                                        // 0x02A8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              LevelScriptActorClass;                                   // 0x02B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      LevelScriptActorClassName;                               // 0x02B8(0x0020) Edit, ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      DefaultBlueprintBaseClassName;                           // 0x02D8(0x0020) Edit, ZeroConstructor, Config, GlobalConfig, NoClear, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      GameSingletonClassName;                                  // 0x02F8(0x0020) Edit, ZeroConstructor, Config, GlobalConfig, NoClear, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             GameSingleton;                                           // 0x0318(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      AssetManagerClassName;                                   // 0x0320(0x0020) Edit, ZeroConstructor, Config, GlobalConfig, NoClear, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAssetManager*                                       AssetManager;                                            // 0x0340(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          DefaultTexture;                                          // 0x0348(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DefaultTextureName;                                      // 0x0350(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture*                                            DefaultDiffuseTexture;                                   // 0x0370(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DefaultDiffuseTextureName;                               // 0x0378(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          DefaultBSPVertexTexture;                                 // 0x0398(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DefaultBSPVertexTextureName;                             // 0x03A0(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          HighFrequencyNoiseTexture;                               // 0x03C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     HighFrequencyNoiseTextureName;                           // 0x03C8(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          DefaultBokehTexture;                                     // 0x03E8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DefaultBokehTextureName;                                 // 0x03F0(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          DefaultBloomKernelTexture;                               // 0x0410(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DefaultBloomKernelTextureName;                           // 0x0418(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           WireframeMaterial;                                       // 0x0438(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WireframeMaterialName;                                   // 0x0440(0x0010) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           DebugMeshMaterial;                                       // 0x0450(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DebugMeshMaterialName;                                   // 0x0458(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           EmissiveMeshMaterial;                                    // 0x0478(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     EmissiveMeshMaterialName;                                // 0x0480(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           LevelColorationLitMaterial;                              // 0x04A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LevelColorationLitMaterialName;                          // 0x04A8(0x0010) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           LevelColorationUnlitMaterial;                            // 0x04B8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LevelColorationUnlitMaterialName;                        // 0x04C0(0x0010) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           LightingTexelDensityMaterial;                            // 0x04D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LightingTexelDensityName;                                // 0x04D8(0x0010) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           ShadedLevelColorationLitMaterial;                        // 0x04E8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ShadedLevelColorationLitMaterialName;                    // 0x04F0(0x0010) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           ShadedLevelColorationUnlitMaterial;                      // 0x0500(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ShadedLevelColorationUnlitMaterialName;                  // 0x0508(0x0010) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           RemoveSurfaceMaterial;                                   // 0x0518(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     RemoveSurfaceMaterialName;                               // 0x0520(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           VertexColorMaterial;                                     // 0x0540(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VertexColorMaterialName;                                 // 0x0548(0x0010) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           VertexColorViewModeMaterial_ColorOnly;                   // 0x0558(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VertexColorViewModeMaterialName_ColorOnly;               // 0x0560(0x0010) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           VertexColorViewModeMaterial_AlphaAsColor;                // 0x0570(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VertexColorViewModeMaterialName_AlphaAsColor;            // 0x0578(0x0010) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           VertexColorViewModeMaterial_RedOnly;                     // 0x0588(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VertexColorViewModeMaterialName_RedOnly;                 // 0x0590(0x0010) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           VertexColorViewModeMaterial_GreenOnly;                   // 0x05A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VertexColorViewModeMaterialName_GreenOnly;               // 0x05A8(0x0010) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           VertexColorViewModeMaterial_BlueOnly;                    // 0x05B8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VertexColorViewModeMaterialName_BlueOnly;                // 0x05C0(0x0010) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DebugEditorMaterialName;                                 // 0x05D0(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           ConstraintLimitMaterial;                                 // 0x05F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            ConstraintLimitMaterialX;                                // 0x05F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            ConstraintLimitMaterialXAxis;                            // 0x0600(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            ConstraintLimitMaterialY;                                // 0x0608(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            ConstraintLimitMaterialYAxis;                            // 0x0610(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            ConstraintLimitMaterialZ;                                // 0x0618(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            ConstraintLimitMaterialZAxis;                            // 0x0620(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            ConstraintLimitMaterialPrismatic;                        // 0x0628(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           InvalidLightmapSettingsMaterial;                         // 0x0630(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     InvalidLightmapSettingsMaterialName;                     // 0x0638(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           PreviewShadowsIndicatorMaterial;                         // 0x0658(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PreviewShadowsIndicatorMaterialName;                     // 0x0660(0x0020) Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                           ArrowMaterial;                                           // 0x0680(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            ArrowMaterialYellow;                                     // 0x0688(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ArrowMaterialName;                                       // 0x0690(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        LightingOnlyBrightness;                                  // 0x06B0(0x0010) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FLinearColor>                                ShaderComplexityColors;                                  // 0x06C0(0x0010) ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic
		TArray<struct FLinearColor>                                QuadComplexityColors;                                    // 0x06D0(0x0010) ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic
		TArray<struct FLinearColor>                                LightComplexityColors;                                   // 0x06E0(0x0010) ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic
		TArray<struct FLinearColor>                                StationaryLightOverlapColors;                            // 0x06F0(0x0010) ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic
		TArray<struct FLinearColor>                                LODColorationColors;                                     // 0x0700(0x0010) ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic
		TArray<struct FLinearColor>                                HLODColorationColors;                                    // 0x0710(0x0010) ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic
		TArray<struct FLinearColor>                                StreamingAccuracyColors;                                 // 0x0720(0x0010) ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic
		float                                                      MaxPixelShaderAdditiveComplexityCount;                   // 0x0730(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxES3PixelShaderAdditiveComplexityCount;                // 0x0734(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinLightMapDensity;                                      // 0x0738(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IdealLightMapDensity;                                    // 0x073C(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxLightMapDensity;                                      // 0x0740(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRenderLightMapDensityGrayscale : 1;                     // 0x0744(0x0001) BIT_FIELD Config, GlobalConfig, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y24Z[0x3];                                   // 0x0745(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RenderLightMapDensityGrayscaleScale;                     // 0x0748(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RenderLightMapDensityColorScale;                         // 0x074C(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        LightMapDensityVertexMappedColor;                        // 0x0750(0x0010) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        LightMapDensitySelectedColor;                            // 0x0760(0x0010) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FStatColorMapping>                           StatColorMappings;                                       // 0x0770(0x0010) ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic
		class UPhysicalMaterial*                                   DefaultPhysMaterial;                                     // 0x0780(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DefaultPhysMaterialName;                                 // 0x0788(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FGameNameRedirect>                           ActiveGameNameRedirects;                                 // 0x07A8(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<struct FClassRedirect>                              ActiveClassRedirects;                                    // 0x07B8(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<struct FPluginRedirect>                             ActivePluginRedirects;                                   // 0x07C8(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<struct FStructRedirect>                             ActiveStructRedirects;                                   // 0x07D8(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic
		class UTexture2D*                                          PreIntegratedSkinBRDFTexture;                            // 0x07E8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PreIntegratedSkinBRDFTextureName;                        // 0x07F0(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          BlueNoiseTexture;                                        // 0x0810(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     BlueNoiseTextureName;                                    // 0x0818(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          MiniFontTexture;                                         // 0x0838(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MiniFontTextureName;                                     // 0x0840(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture*                                            WeightMapPlaceholderTexture;                             // 0x0860(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     WeightMapPlaceholderTextureName;                         // 0x0868(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          LightMapDensityTexture;                                  // 0x0888(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     LightMapDensityTextureName;                              // 0x0890(0x0020) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6UGJ[0x8];                                   // 0x08B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGameViewportClient*                                 GameViewport;                                            // 0x08B8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      DeferredCommands;                                        // 0x08C0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      NearClipPlane;                                           // 0x08D0(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSubtitlesEnabled : 1;                                   // 0x08D4(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSubtitlesForcedOff : 1;                                 // 0x08D4(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J4XM[0x3];                                   // 0x08D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaximumLoopIterationCount;                               // 0x08D8(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCanBlueprintsTickByDefault : 1;                         // 0x08DC(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOptimizeAnimBlueprintMemberVariableAccess : 1;          // 0x08DC(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAllowMultiThreadedAnimationUpdate : 1;                  // 0x08DC(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableEditorPSysRealtimeLOD : 1;                        // 0x08DC(0x0001) BIT_FIELD Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_26IR : 1;                                    // 0x08DC(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bSmoothFrameRate : 1;                                    // 0x08DC(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseFixedFrameRate : 1;                                  // 0x08DC(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_INOF[0x3];                                   // 0x08DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FixedFrameRate;                                          // 0x08E0(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatRange                                         SmoothedFrameRateRange;                                  // 0x08E4(0x0010) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ILTQ[0x4];                                   // 0x08F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UEngineCustomTimeStep*                               CustomTimeStep;                                          // 0x08F8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_IBPS[0x20];                                  // 0x0900(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftClassPath                                      CustomTimeStepClassName;                                 // 0x0920(0x0020) Edit, ZeroConstructor, Config, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTimecodeProvider*                                   TimecodeProvider;                                        // 0x0940(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EAZP[0x20];                                  // 0x0948(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftClassPath                                      TimecodeProviderClassName;                               // 0x0968(0x0020) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGenerateDefaultTimecode;                                // 0x0988(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SE0J[0x3];                                   // 0x0989(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFrameRate                                          GenerateDefaultTimecodeFrameRate;                        // 0x098C(0x0008) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GenerateDefaultTimecodeFrameDelay;                       // 0x0994(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCheckForMultiplePawnsSpawnedInAFrame : 1;               // 0x0998(0x0001) BIT_FIELD Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O8NH[0x3];                                   // 0x0999(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NumPawnsAllowedToBeSpawnedInAFrame;                      // 0x099C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShouldGenerateLowQualityLightmaps : 1;                  // 0x09A0(0x0001) BIT_FIELD Config, GlobalConfig, Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FLG6[0x3];                                   // 0x09A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FColor                                              C_WorldBox;                                              // 0x09A4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              C_BrushWire;                                             // 0x09A8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              C_AddWire;                                               // 0x09AC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              C_SubtractWire;                                          // 0x09B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              C_SemiSolidWire;                                         // 0x09B4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              C_NonSolidWire;                                          // 0x09B8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              C_WireBackground;                                        // 0x09BC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              C_ScaleBoxHi;                                            // 0x09C0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              C_VolumeCollision;                                       // 0x09C4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              C_BSPCollision;                                          // 0x09C8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              C_OrthoBackground;                                       // 0x09CC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              C_Volume;                                                // 0x09D0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              C_BrushShape;                                            // 0x09D4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StreamingDistanceFactor;                                 // 0x09D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GDOG[0x4];                                   // 0x09DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDirectoryPath                                      GameScreenshotSaveDirectory;                             // 0x09E0(0x0010) Edit, Config, NativeAccessSpecifierPublic
		ETransitionType                                            TransitionType;                                          // 0x09F0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CHJG[0x7];                                   // 0x09F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TransitionDescription;                                   // 0x09F8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TransitionGameMode;                                      // 0x0A08(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAllowMatureLanguage : 1;                                // 0x0A18(0x0001) BIT_FIELD Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RTP0[0x3];                                   // 0x0A19(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CameraRotationThreshold;                                 // 0x0A1C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraTranslationThreshold;                              // 0x0A20(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PrimitiveProbablyVisibleTime;                            // 0x0A24(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxOcclusionPixelsFraction;                              // 0x0A28(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPauseOnLossOfFocus : 1;                                 // 0x0A2C(0x0001) BIT_FIELD Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DXJ7[0x3];                                   // 0x0A2D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxParticleResize;                                       // 0x0A30(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxParticleResizeWarn;                                   // 0x0A34(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FDropNoteInfo>                               PendingDroppedNotes;                                     // 0x0A38(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		float                                                      NetClientTicksPerSecond;                                 // 0x0A48(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DisplayGamma;                                            // 0x0A4C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDesiredFrameRate;                                     // 0x0A50(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        DefaultSelectedMaterialColor;                            // 0x0A54(0x0010) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        SelectedMaterialColor;                                   // 0x0A64(0x0010) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        SelectionOutlineColor;                                   // 0x0A74(0x0010) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        SubduedSelectionOutlineColor;                            // 0x0A84(0x0010) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        SelectedMaterialColorOverride;                           // 0x0A94(0x0010) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bIsOverridingSelectedColor;                              // 0x0AA4(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RYJC[0x3];                                   // 0x0AA5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bEnableOnScreenDebugMessages : 1;                        // 0x0AA8(0x0001) BIT_FIELD Config, GlobalConfig, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableOnScreenDebugMessagesDisplay : 1;                 // 0x0AA8(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSuppressMapWarnings : 1;                                // 0x0AA8(0x0001) BIT_FIELD Config, GlobalConfig, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableAILogging : 1;                                   // 0x0AA8(0x0001) BIT_FIELD Config, GlobalConfig, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0D8Z[0x3];                                   // 0x0AA9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   bEnableVisualLogRecordingOnStart;                        // 0x0AAC(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScreenSaverInhibitorSemaphore;                           // 0x0AB0(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bLockReadOnlyLevels : 1;                                 // 0x0AB4(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZQB3[0x3];                                   // 0x0AB5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ParticleEventManagerClassPath;                           // 0x0AB8(0x0010) ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SelectionHighlightIntensity;                             // 0x0AC8(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BSPSelectionHighlightIntensity;                          // 0x0ACC(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SelectionHighlightIntensityBillboards;                   // 0x0AD0(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_08NS[0x26C];                                 // 0x0AD4(0x026C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FNetDriverDefinition>                        NetDriverDefinitions;                                    // 0x0D40(0x0010) ZeroConstructor, Transient, Config, NativeAccessSpecifierPublic
		TArray<class FString>                                      ServerActors;                                            // 0x0D50(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<class FString>                                      RuntimeServerActors;                                     // 0x0D60(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      NetErrorLogInterval;                                     // 0x0D70(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bStartedLoadMapMovie : 1;                                // 0x0D74(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WOKG[0x1B];                                  // 0x0D75(0x001B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NextWorldContextHandle;                                  // 0x0D90(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_TTMV[0xD4];                                  // 0x0D94(0x00D4) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.GameEngine
	 * Size -> 0x0050 (FullSize[0x0EB8] - InheritedSize[0x0E68])
	 */
	class UGameEngine : public UEngine
	{
	public:
		float                                                      MaxDeltaTime;                                            // 0x0E68(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ServerFlushLogInterval;                                  // 0x0E6C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameInstance*                                       GameInstance;                                            // 0x0E70(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9TEL[0x40];                                  // 0x0E78(0x0040) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.GameSession
	 * Size -> 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
	 */
	class AGameSession : public AInfo
	{
	public:
		int32_t                                                    MaxSpectators;                                           // 0x0230(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxPlayers;                                              // 0x0234(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxPartySize;                                            // 0x0238(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MaxSplitscreensPerConnection;                            // 0x023C(0x0001) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRequiresPushToTalk;                                     // 0x023D(0x0001) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IS3H[0x2];                                   // 0x023E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SessionName;                                             // 0x0240(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2EMO[0x4];                                   // 0x024C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.GameUserSettings
	 * Size -> 0x00F8 (FullSize[0x0128] - InheritedSize[0x0030])
	 */
	class UGameUserSettings : public UObject
	{
	public:
		bool                                                       bUseVSync;                                               // 0x0030(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDynamicResolution;                                   // 0x0031(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6KFB[0x56];                                  // 0x0032(0x0056) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   ResolutionSizeX;                                         // 0x0088(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		uint32_t                                                   ResolutionSizeY;                                         // 0x008C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		uint32_t                                                   LastUserConfirmedResolutionSizeX;                        // 0x0090(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		uint32_t                                                   LastUserConfirmedResolutionSizeY;                        // 0x0094(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    WindowPosX;                                              // 0x0098(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    WindowPosY;                                              // 0x009C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    FullscreenMode;                                          // 0x00A0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    LastConfirmedFullscreenMode;                             // 0x00A4(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    PreferredFullscreenMode;                                 // 0x00A8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		uint32_t                                                   Version;                                                 // 0x00AC(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    AudioQualityLevel;                                       // 0x00B0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    LastConfirmedAudioQualityLevel;                          // 0x00B4(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FrameRateLimit;                                          // 0x00B8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_MUFK[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DesiredScreenWidth;                                      // 0x00C0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bUseDesiredScreenHeight;                                 // 0x00C4(0x0001) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_4542[0x3];                                   // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DesiredScreenHeight;                                     // 0x00C8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    LastUserConfirmedDesiredScreenWidth;                     // 0x00CC(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    LastUserConfirmedDesiredScreenHeight;                    // 0x00D0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LastRecommendedScreenWidth;                              // 0x00D4(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LastRecommendedScreenHeight;                             // 0x00D8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LastCPUBenchmarkResult;                                  // 0x00DC(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LastGPUBenchmarkResult;                                  // 0x00E0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_EXJV[0x4];                                   // 0x00E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              LastCPUBenchmarkSteps;                                   // 0x00E8(0x0010) ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected
		TArray<float>                                              LastGPUBenchmarkSteps;                                   // 0x00F8(0x0010) ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected
		float                                                      LastGPUBenchmarkMultiplier;                              // 0x0108(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bUseHDRDisplayOutput;                                    // 0x010C(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_VJ27[0x3];                                   // 0x010D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    HDRDisplayOutputNits;                                    // 0x0110(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_HTMV[0x4];                                   // 0x0114(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnGameUserSettingsUINeedsUpdate;                         // 0x0118(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate

	public:
		void ValidateSettings();
		bool SupportsHDRDisplayOutput();
		void SetVSyncEnabled(bool bEnable);
		void SetVisualEffectQuality(int32_t value);
		void SetViewDistanceQuality(int32_t value);
		void SetToDefaults();
		void SetTextureQuality(int32_t value);
		void SetShadowQuality(int32_t value);
		void SetShadingQuality(int32_t value);
		void SetScreenResolution(const struct FIntPoint& Resolution);
		void SetResolutionScaleValueEx(float NewScaleValue);
		void SetResolutionScaleValue(int32_t NewScaleValue);
		void SetResolutionScaleNormalized(float NewScaleNormalized);
		void SetPostProcessingQuality(int32_t value);
		void SetOverallScalabilityLevel(int32_t value);
		void SetFullscreenMode(EWindowMode InFullscreenMode);
		void SetFrameRateLimit(float NewLimit);
		void SetFoliageQuality(int32_t value);
		void SetDynamicResolutionEnabled(bool bEnable);
		void SetBenchmarkFallbackValues();
		void SetAudioQualityLevel(int32_t qualityLevel);
		void SetAntiAliasingQuality(int32_t value);
		void SaveSettings();
		void RunHardwareBenchmark(int32_t WorkScale, float CPUMultiplier, float GPUMultiplier);
		void RevertVideoMode();
		void ResetToCurrentSettings();
		void LoadSettings(bool bForceReload);
		bool IsVSyncEnabled();
		bool IsVSyncDirty();
		bool IsScreenResolutionDirty();
		bool IsHDREnabled();
		bool IsFullscreenModeDirty();
		bool IsDynamicResolutionEnabled();
		bool IsDynamicResolutionDirty();
		bool IsDirty();
		int32_t GetVisualEffectQuality();
		int32_t GetViewDistanceQuality();
		int32_t GetTextureQuality();
		int32_t STATIC_GetSyncInterval();
		int32_t GetShadowQuality();
		int32_t GetShadingQuality();
		struct FIntPoint GetScreenResolution();
		float GetResolutionScaleNormalized();
		void GetResolutionScaleInformationEx(float* CurrentScaleNormalized, float* CurrentScaleValue, float* MinScaleValue, float* MaxScaleValue);
		void GetResolutionScaleInformation(float* CurrentScaleNormalized, int32_t* CurrentScaleValue, int32_t* MinScaleValue, int32_t* MaxScaleValue);
		float GetRecommendedResolutionScale();
		EWindowMode GetPreferredFullscreenMode();
		int32_t GetPostProcessingQuality();
		int32_t GetOverallScalabilityLevel();
		struct FIntPoint GetLastConfirmedScreenResolution();
		EWindowMode GetLastConfirmedFullscreenMode();
		class UGameUserSettings* STATIC_GetGameUserSettings();
		EWindowMode GetFullscreenMode();
		float GetFrameRateLimit();
		int32_t STATIC_GetFramePace();
		int32_t GetFoliageQuality();
		struct FIntPoint GetDesktopResolution();
		struct FIntPoint STATIC_GetDefaultWindowPosition();
		EWindowMode STATIC_GetDefaultWindowMode();
		float GetDefaultResolutionScale();
		struct FIntPoint STATIC_GetDefaultResolution();
		int32_t GetCurrentHDRDisplayNits();
		int32_t GetAudioQualityLevel();
		int32_t GetAntiAliasingQuality();
		void EnableHDRDisplayOutput(bool bEnable, int32_t DisplayNits);
		void ConfirmVideoMode();
		void ApplySettings(bool bCheckForCommandLineOverrides);
		void ApplyResolutionSettings(bool bCheckForCommandLineOverrides);
		void ApplyNonResolutionSettings();
		void ApplyHardwareBenchmarkResults();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ScriptViewportClient
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UScriptViewportClient : public UObject
	{
	public:
		unsigned char                                              UnknownData_OK7Q[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.GameViewportClient
	 * Size -> 0x0330 (FullSize[0x0370] - InheritedSize[0x0040])
	 */
	class UGameViewportClient : public UScriptViewportClient
	{
	public:
		unsigned char                                              UnknownData_LJIS[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UConsole*                                            ViewportConsole;                                         // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FDebugDisplayProperty>                       DebugProperties;                                         // 0x0050(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WMWV[0x10];                                  // 0x0060(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxSplitscreenPlayers;                                   // 0x0070(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_09XE[0xC];                                   // 0x0074(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWorld*                                              World;                                                   // 0x0080(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGameInstance*                                       GameInstance;                                            // 0x0088(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_UXCV[0x2E0];                                 // 0x0090(0x02E0) MISSED OFFSET (PADDING)

	public:
		void SSSwapControllers();
		void ShowTitleSafeArea();
		void SetConsoleTarget(int32_t PlayerIndex);
		void PostRender(UCanvas* canvas);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LocalPlayer
	 * Size -> 0x0218 (FullSize[0x0268] - InheritedSize[0x0050])
	 */
	class ULocalPlayer : public UPlayer
	{
	public:
		unsigned char                                              UnknownData_WU9P[0x28];                                  // 0x0050(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGameViewportClient*                                 ViewportClient;                                          // 0x0078(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y3GF[0x1C];                                  // 0x0080(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EAspectRatioAxisConstraint                                 AspectRatioAxisConstraint;                               // 0x009C(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UJCG[0x3];                                   // 0x009D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              PendingLevelPlayerControllerClass;                       // 0x00A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSentSplitJoin : 1;                                      // 0x00A8(0x0001) BIT_FIELD Edit, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1W77[0x17];                                  // 0x00A9(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ControllerId;                                            // 0x00C0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_O6EV[0x1A4];                                 // 0x00C4(0x01A4) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PlayerCameraManager
	 * Size -> 0x25F0 (FullSize[0x2820] - InheritedSize[0x0230])
	 */
	class APlayerCameraManager : public AActor
	{
	public:
		class APlayerController*                                   PCOwner;                                                 // 0x0230(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     TransformComponent;                                      // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TJJH[0xC];                                   // 0x0240(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefaultFOV;                                              // 0x024C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XU6W[0x4];                                   // 0x0250(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefaultOrthoWidth;                                       // 0x0254(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IA6O[0x4];                                   // 0x0258(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefaultAspectRatio;                                      // 0x025C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EF5M[0x40];                                  // 0x0260(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCameraCacheEntry                                   CameraCache;                                             // 0x02A0(0x0600) Transient, NativeAccessSpecifierPublic
		struct FCameraCacheEntry                                   LastFrameCameraCache;                                    // 0x08A0(0x0600) Transient, NativeAccessSpecifierPublic
		struct FTViewTarget                                        ViewTarget;                                              // 0x0EA0(0x0610) Transient, NativeAccessSpecifierPublic
		struct FTViewTarget                                        PendingViewTarget;                                       // 0x14B0(0x0610) Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0W9W[0x30];                                  // 0x1AC0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCameraCacheEntry                                   CameraCachePrivate;                                      // 0x1AF0(0x0600) Transient, NativeAccessSpecifierPrivate
		struct FCameraCacheEntry                                   LastFrameCameraCachePrivate;                             // 0x20F0(0x0600) Transient, NativeAccessSpecifierPrivate
		TArray<class UCameraModifier*>                             ModifierList;                                            // 0x26F0(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		TArray<class UClass*>                                      DefaultModifiers;                                        // 0x2700(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic
		float                                                      FreeCamDistance;                                         // 0x2710(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             FreeCamOffset;                                           // 0x2714(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ViewTargetOffset;                                        // 0x2720(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WWRC[0x4];                                   // 0x272C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnAudioFadeChangeEvent;                                  // 0x2730(0x0010) ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S31B[0x10];                                  // 0x2740(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AEmitterCameraLensEffectBase*>                CameraLensEffects;                                       // 0x2750(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		class UCameraModifier_CameraShake*                         CachedCameraShakeMod;                                    // 0x2760(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCameraAnimInst*                                     AnimInstPool[0x8];                                       // 0x2768(0x0040) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FPostProcessSettings>                        PostProcessBlendCache;                                   // 0x27A8(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_NGX0[0x10];                                  // 0x27B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UCameraAnimInst*>                             ActiveAnims;                                             // 0x27C8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		TArray<class UCameraAnimInst*>                             FreeAnims;                                               // 0x27D8(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		class ACameraActor*                                        AnimCameraActor;                                         // 0x27E8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bIsOrthographic : 1;                                     // 0x27F0(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDefaultConstrainAspectRatio : 1;                        // 0x27F0(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PK3G : 4;                                    // 0x27F0(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bClientSimulatingViewTarget : 1;                         // 0x27F0(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseClientSideCameraUpdates : 1;                         // 0x27F0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D5XH : 2;                                    // 0x27F1(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bGameCameraCutThisFrame : 1;                             // 0x27F1(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_68NJ[0x2];                                   // 0x27F2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ViewPitchMin;                                            // 0x27F4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewPitchMax;                                            // 0x27F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewYawMin;                                              // 0x27FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewYawMax;                                              // 0x2800(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewRollMin;                                             // 0x2804(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewRollMax;                                             // 0x2808(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GTRR[0x4];                                   // 0x280C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ServerUpdateCameraTimeout;                               // 0x2810(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BQGE[0xC];                                   // 0x2814(0x000C) MISSED OFFSET (PADDING)

	public:
		void SwapPendingViewTargetWhenUsingClientSideCameraUpdates();
		void StopCameraShake(class UCameraShakeBase* ShakeInstance, bool bImmediately);
		void StopCameraFade();
		void StopCameraAnimInst(class UCameraAnimInst* AnimInst, bool bImmediate);
		void StopAllInstancesOfCameraShakeFromSource(class UClass* Shake, class UCameraShakeSourceComponent* SourceComponent, bool bImmediately);
		void StopAllInstancesOfCameraShake(class UClass* Shake, bool bImmediately);
		void StopAllInstancesOfCameraAnim(class UCameraAnim* Anim, bool bImmediate);
		void StopAllCameraShakesFromSource(class UCameraShakeSourceComponent* SourceComponent, bool bImmediately);
		void StopAllCameraShakes(bool bImmediately);
		void StopAllCameraAnims(bool bImmediate);
		class UCameraShakeBase* StartCameraShakeFromSource(class UClass* ShakeClass, class UCameraShakeSourceComponent* SourceComponent, float Scale, ECameraShakePlaySpace PlaySpace, const struct FRotator& UserPlaySpaceRot);
		class UCameraShakeBase* StartCameraShake(class UClass* ShakeClass, float Scale, ECameraShakePlaySpace PlaySpace, const struct FRotator& UserPlaySpaceRot);
		void StartCameraFade(float FromAlpha, float ToAlpha, float Duration, const struct FLinearColor& Color, bool bShouldFadeAudio, bool bHoldWhenFinished);
		void SetManualCameraFade(float InFadeAmount, const struct FLinearColor& Color, bool bInFadeAudio);
		void SetGameCameraCutThisFrame();
		bool RemoveCameraModifier(class UCameraModifier* ModifierToRemove);
		void RemoveCameraLensEffect(class AEmitterCameraLensEffectBase* Emitter);
		class UCameraAnimInst* PlayCameraAnim(class UCameraAnim* Anim, float Rate, float Scale, float BlendInTime, float BlendOutTime, bool bLoop, bool bRandomStartTime, float Duration, ECameraShakePlaySpace PlaySpace, const struct FRotator& UserPlaySpaceRot);
		void PhotographyCameraModify(const struct FVector& NewCameraLocation, const struct FVector& PreviousCameraLocation, const struct FVector& OriginalCameraLocation, struct FVector* ResultCameraLocation);
		void OnPhotographySessionStart();
		void OnPhotographySessionEnd();
		void OnPhotographyMultiPartCaptureStart();
		void OnPhotographyMultiPartCaptureEnd();
		class APlayerController* GetOwningPlayerController();
		float GetFOVAngle();
		struct FRotator GetCameraRotation();
		struct FVector GetCameraLocation();
		class UCameraModifier* FindCameraModifierByClass(class UClass* ModifierClass);
		void ClearCameraLensEffects();
		bool BlueprintUpdateCamera(class AActor* CameraTarget, struct FVector* NewCameraLocation, struct FRotator* NewCameraRotation, float* NewCameraFOV);
		class UCameraModifier* AddNewCameraModifier(class UClass* ModifierClass);
		class AEmitterCameraLensEffectBase* AddCameraLensEffect(class UClass* LensEffectEmitterClass);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NavigationObjectBase
	 * Size -> 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
	 */
	class ANavigationObjectBase : public AActor
	{
	public:
		unsigned char                                              UnknownData_POHE[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCapsuleComponent*                                   CapsuleComponent;                                        // 0x0238(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBillboardComponent*                                 GoodSprite;                                              // 0x0240(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBillboardComponent*                                 BadSprite;                                               // 0x0248(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bIsPIEPlayerStart : 1;                                   // 0x0250(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FC9C[0x7];                                   // 0x0251(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PlayerStart
	 * Size -> 0x0010 (FullSize[0x0268] - InheritedSize[0x0258])
	 */
	class APlayerStart : public ANavigationObjectBase
	{
	public:
		class FName                                                PlayerStartTag;                                          // 0x0258(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9GEF[0x4];                                   // 0x0264(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PlayerState
	 * Size -> 0x0108 (FullSize[0x0338] - InheritedSize[0x0230])
	 */
	class APlayerState : public AInfo
	{
	public:
		float                                                      Score;                                                   // 0x0230(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    playerID;                                                // 0x0234(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Ping;                                                    // 0x0238(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LPM0[0x1];                                   // 0x0239(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bShouldUpdateReplicatedPing : 1;                         // 0x023A(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bIsSpectator : 1;                                        // 0x023A(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOnlySpectator : 1;                                      // 0x023A(0x0001) BIT_FIELD Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsABot : 1;                                             // 0x023A(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HIYN : 1;                                    // 0x023A(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bIsInactive : 1;                                         // 0x023A(0x0001) BIT_FIELD Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFromPreviousLevel : 1;                                  // 0x023A(0x0001) BIT_FIELD Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I6IW[0x1];                                   // 0x023B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    StartTime;                                               // 0x023C(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              EngineMessageClass;                                      // 0x0240(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MYSS[0x8];                                   // 0x0248(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SavedNetworkAddress;                                     // 0x0250(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FUniqueNetIdRepl                                    UniqueId;                                                // 0x0260(0x0028) Net, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PC3B[0x10];                                  // 0x0288(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APawn*                                               PawnPrivate;                                             // 0x0298(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PMA4[0x78];                                  // 0x02A0(0x0078) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PlayerNamePrivate;                                       // 0x0318(0x0010) Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3PSD[0x10];                                  // 0x0328(0x0010) MISSED OFFSET (PADDING)

	public:
		void ReceiveOverrideWith(class APlayerState* OldPlayerState);
		void ReceiveCopyProperties(class APlayerState* newPlayerState);
		void OnRep_UniqueId();
		void OnRep_Score();
		void OnRep_PlayerName();
		void OnRep_PlayerId();
		void OnRep_bIsInactive();
		bool IsOnlyASpectator();
		class FString GetPlayerName();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DefaultPawn
	 * Size -> 0x0028 (FullSize[0x02B8] - InheritedSize[0x0290])
	 */
	class ADefaultPawn : public APawn
	{
	public:
		float                                                      BaseTurnRate;                                            // 0x0290(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseLookUpRate;                                          // 0x0294(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPawnMovementComponent*                              MovementComponent;                                       // 0x0298(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USphereComponent*                                    CollisionComponent;                                      // 0x02A0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UStaticMeshComponent*                                MeshComponent;                                           // 0x02A8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bAddDefaultMovementBindings : 1;                         // 0x02B0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BEG1[0x7];                                   // 0x02B1(0x0007) MISSED OFFSET (PADDING)

	public:
		void TurnAtRate(float Rate);
		void MoveUp_World(float Val);
		void MoveRight(float Val);
		void MoveForward(float Val);
		void LookUpAtRate(float Rate);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SpectatorPawn
	 * Size -> 0x0000 (FullSize[0x02B8] - InheritedSize[0x02B8])
	 */
	class ASpectatorPawn : public ADefaultPawn
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SpringArmComponent
	 * Size -> 0x0080 (FullSize[0x02A0] - InheritedSize[0x0220])
	 */
	class USpringArmComponent : public USceneComponent
	{
	public:
		struct FVector                                             SocketOffset;                                            // 0x021C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetOffset;                                            // 0x0228(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProbeSize;                                               // 0x0234(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECollisionChannel                                          ProbeChannel;                                            // 0x0238(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PXMG[0x3];                                   // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bDoCollisionTest : 1;                                    // 0x023C(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsePawnControlRotation : 1;                             // 0x023C(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInheritPitch : 1;                                       // 0x023C(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInheritYaw : 1;                                         // 0x023C(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInheritRoll : 1;                                        // 0x023C(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableCameraLag : 1;                                    // 0x023C(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableCameraRotationLag : 1;                            // 0x023C(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseCameraLagSubstepping : 1;                            // 0x023C(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDrawDebugLagMarkers : 1;                                // 0x023D(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WG8K[0x2];                                   // 0x023E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CameraLagSpeed;                                          // 0x0240(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraRotationLagSpeed;                                  // 0x0244(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraLagMaxTimeStep;                                    // 0x0248(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraLagMaxDistance;                                    // 0x024C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OHU4[0x50];                                  // 0x0250(0x0050) MISSED OFFSET (PADDING)

	public:
		bool IsCollisionFixApplied();
		struct FVector GetUnfixedCameraPosition();
		struct FRotator GetTargetRotation();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InstancedStaticMeshComponent
	 * Size -> 0x00B0 (FullSize[0x05F0] - InheritedSize[0x0540])
	 */
	class UInstancedStaticMeshComponent : public UStaticMeshComponent
	{
	public:
		TArray<struct FInstancedStaticMeshInstanceData>            PerInstanceSMData;                                       // 0x0540(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic, CPF_SkipSerialization
		int32_t                                                    NumCustomDataFloats;                                     // 0x0550(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RNID[0x4];                                   // 0x0554(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              PerInstanceSMCustomData;                                 // 0x0558(0x0010) Edit, EditFixedSize, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPublic, CPF_SkipSerialization
		int32_t                                                    InstancingRandomSeed;                                    // 0x0568(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InstanceStartCullDistance;                               // 0x056C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InstanceEndCullDistance;                                 // 0x0570(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U5BB[0x4];                                   // 0x0574(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            InstanceReorderTable;                                    // 0x0578(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D5BF[0x48];                                  // 0x0588(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NumPendingLightmaps;                                     // 0x05D0(0x0004) ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, TextExportTransient, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_3KMB[0x4];                                   // 0x05D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FInstancedStaticMeshMappingInfo>             CachedMappings;                                          // 0x05D8(0x0010) ZeroConstructor, Transient, DuplicateTransient, Protected, TextExportTransient, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_WT1Y[0x8];                                   // 0x05E8(0x0008) MISSED OFFSET (PADDING)

	public:
		bool UpdateInstanceTransform(int32_t InstanceIndex, const struct FTransform& NewInstanceTransform, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport);
		bool SetCustomDataValue(int32_t InstanceIndex, int32_t CustomDataIndex, float CustomDataValue, bool bMarkRenderStateDirty);
		void SetCullDistances(int32_t StartCullDistance, int32_t EndCullDistance);
		bool RemoveInstance(int32_t InstanceIndex);
		bool GetInstanceTransform(int32_t InstanceIndex, struct FTransform* OutInstanceTransform, bool bWorldSpace);
		TArray<int32_t> GetInstancesOverlappingSphere(const struct FVector& Center, float Radius, bool bSphereInWorldSpace);
		TArray<int32_t> GetInstancesOverlappingBox(const struct FBox& Box, bool bBoxInWorldSpace);
		int32_t GetInstanceCount();
		void ClearInstances();
		bool BatchUpdateInstancesTransforms(int32_t StartInstanceIndex, TArray<struct FTransform> NewInstancesTransforms, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport);
		bool BatchUpdateInstancesTransform(int32_t StartInstanceIndex, int32_t NumInstances, const struct FTransform& NewInstancesTransform, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport);
		int32_t AddInstanceWorldSpace(const struct FTransform& WorldTransform);
		TArray<int32_t> AddInstances(TArray<struct FTransform> InstanceTransforms, bool bShouldReturnIndices);
		int32_t AddInstance(const struct FTransform& InstanceTransform);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.HierarchicalInstancedStaticMeshComponent
	 * Size -> 0x0100 (FullSize[0x06F0] - InheritedSize[0x05F0])
	 */
	class UHierarchicalInstancedStaticMeshComponent : public UInstancedStaticMeshComponent
	{
	public:
		unsigned char                                              UnknownData_3PAQ[0x10];                                  // 0x05F0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bLODDitheringOptional;                                   // 0x0600(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ALYL[0x3];                                   // 0x0601(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LODOverestimateFactor;                                   // 0x0604(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            SortedInstances;                                         // 0x0608(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    NumBuiltInstances;                                       // 0x0618(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D8D2[0x4];                                   // 0x061C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBox                                                BuiltInstanceBounds;                                     // 0x0620(0x001C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FBox                                                UnbuiltInstanceBounds;                                   // 0x063C(0x001C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FBox>                                        UnbuiltInstanceBoundsList;                               // 0x0658(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bEnableDensityScaling : 1;                               // 0x0668(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NW9B[0x7];                                   // 0x0669(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    OcclusionLayerNumNodes;                                  // 0x0670(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBoxSphereBounds                                    CacheMeshExtendedBounds;                                 // 0x0674(0x001C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bDisableCollision;                                       // 0x0690(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6YH5[0x3];                                   // 0x0691(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    InstanceCountToRender;                                   // 0x0694(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JW4J[0x58];                                  // 0x0698(0x0058) MISSED OFFSET (PADDING)

	public:
		bool RemoveInstances(TArray<int32_t> InstancesToRemove);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.HISMMaterialHelperComponent
	 * Size -> 0x0020 (FullSize[0x0710] - InheritedSize[0x06F0])
	 */
	class UHISMMaterialHelperComponent : public UHierarchicalInstancedStaticMeshComponent
	{
	public:
		TArray<struct FMaterialConfig>                             MaterialConfigurations;                                  // 0x06E8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		TArray<struct FIndexList>                                  IndexOverrides;                                          // 0x06F8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RD9R[0x8];                                   // 0x0708(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SkeletalMeshActor
	 * Size -> 0x0088 (FullSize[0x02B8] - InheritedSize[0x0230])
	 */
	class ASkeletalMeshActor : public AActor
	{
	public:
		unsigned char                                              UnknownData_FOQI[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bShouldDoAnimNotifies : 1;                               // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bWakeOnLevelStart : 1;                                   // 0x0238(0x0001) BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LK6Y[0x7];                                   // 0x0239(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeletalMeshComponent*                              SkeletalMeshComponent;                                   // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USkeletalMesh*                                       ReplicatedMesh;                                          // 0x0248(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicsAsset*                                       ReplicatedPhysAsset;                                     // 0x0250(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  ReplicatedMaterial0;                                     // 0x0258(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  ReplicatedMaterial1;                                     // 0x0260(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_96CV[0x50];                                  // 0x0268(0x0050) MISSED OFFSET (PADDING)

	public:
		void OnRep_ReplicatedPhysAsset();
		void OnRep_ReplicatedMesh();
		void OnRep_ReplicatedMaterial1();
		void OnRep_ReplicatedMaterial0();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SphereComponent
	 * Size -> 0x0000 (FullSize[0x04A0] - InheritedSize[0x04A0])
	 */
	class USphereComponent : public UShapeComponent
	{
	public:
		void SetSphereRadius(float InSphereRadius, bool bUpdateOverlaps);
		float GetUnscaledSphereRadius();
		float GetShapeScale();
		float GetScaledSphereRadius();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CapsuleComponent
	 * Size -> 0x0000 (FullSize[0x04A0] - InheritedSize[0x04A0])
	 */
	class UCapsuleComponent : public UShapeComponent
	{
	public:
		float                                                      CapsuleRadius;                                           // 0x049C(0x0004) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetCapsuleSize(float InRadius, float InHalfHeight, bool bUpdateOverlaps);
		void SetCapsuleRadius(float Radius, bool bUpdateOverlaps);
		void SetCapsuleHalfHeight(float HalfHeight, bool bUpdateOverlaps);
		void GetUnscaledCapsuleSize_WithoutHemisphere(float* OutRadius, float* OutHalfHeightWithoutHemisphere);
		void GetUnscaledCapsuleSize(float* OutRadius, float* OutHalfHeight);
		float GetUnscaledCapsuleRadius();
		float GetUnscaledCapsuleHalfHeight_WithoutHemisphere();
		float GetUnscaledCapsuleHalfHeight();
		float GetShapeScale();
		void GetScaledCapsuleSize_WithoutHemisphere(float* OutRadius, float* OutHalfHeightWithoutHemisphere);
		void GetScaledCapsuleSize(float* OutRadius, float* OutHalfHeight);
		float GetScaledCapsuleRadius();
		float GetScaledCapsuleHalfHeight_WithoutHemisphere();
		float GetScaledCapsuleHalfHeight();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LightComponentBase
	 * Size -> 0x0050 (FullSize[0x0270] - InheritedSize[0x0220])
	 */
	class ULightComponentBase : public USceneComponent
	{
	public:
		struct FGuid                                               LightGuid;                                               // 0x0218(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Brightness;                                              // 0x0228(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Intensity;                                               // 0x022C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              LightColor;                                              // 0x0230(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightPriority;                                           // 0x0234(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAffectsWorld : 1;                                       // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CastShadows : 1;                                         // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CastStaticShadows : 1;                                   // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CastDynamicShadows : 1;                                  // 0x0238(0x0001) BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CastDynamicShadowsWithNewDefaultValue : 1;               // 0x0238(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_6LGO[0x3];                                   // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EDetailMode                                                DetailLevelBeforeCastShadows;                            // 0x023C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L6NZ[0x3];                                   // 0x023D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ELightingDetailMode                                        DetailLevelBeforeCastDynamicShadows;                     // 0x0240(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RFK1[0x3];                                   // 0x023D(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		int32_t                                                    CascadeShadowMapQualityReductionBHVR;                    // 0x0244(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreDynamicObjectsInShadows : 1;                      // 0x0248(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_P8PP[0x3];                                   // 0x0249(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ELightingDetailMode                                        DetailLevelThresholdBeforeIgnoringDynamicObjectsInShadows; // 0x024C(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_EMTD[0x3];                                   // 0x0249(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              bAffectTranslucentLighting : 1;                          // 0x0250(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTransmission : 1;                                       // 0x0250(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastVolumetricShadow : 1;                               // 0x0250(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastDeepShadow : 1;                                     // 0x0250(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastRaytracedShadow : 1;                                // 0x0250(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAffectReflection : 1;                                   // 0x0250(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAffectGlobalIllumination : 1;                           // 0x0250(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6MTV[0x3];                                   // 0x0251(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DeepShadowLayerDistribution;                             // 0x0254(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IndirectLightingIntensity;                               // 0x0258(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VolumetricScatteringIntensity;                           // 0x025C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AmbientOcclusionContribution;                            // 0x0260(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SamplesPerPixel;                                         // 0x0264(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9IYR[0x8];                                   // 0x0268(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetSamplesPerPixel(int32_t NewValue);
		void SetCastVolumetricShadow(bool bNewValue);
		void SetCastShadows(bool bNewValue);
		void SetCastRaytracedShadow(bool bNewValue);
		void SetCastDeepShadow(bool bNewValue);
		void SetAffectReflection(bool bNewValue);
		void SetAffectGlobalIllumination(bool bNewValue);
		struct FLinearColor GetLightColor();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LightComponent
	 * Size -> 0x0130 (FullSize[0x03A0] - InheritedSize[0x0270])
	 */
	class ULightComponent : public ULightComponentBase
	{
	public:
		float                                                      MaxDrawDistance;                                         // 0x026C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDistanceFadeRange;                                    // 0x0270(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseTemperature : 1;                                     // 0x0274(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YEN2[0x3];                                   // 0x0275(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ShadowMapChannel;                                        // 0x0278(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TZ1N[0x4];                                   // 0x027C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinRoughness;                                            // 0x0280(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpecularScale;                                           // 0x0284(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShadowResolutionScale;                                   // 0x0288(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShadowBias;                                              // 0x028C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShadowSlopeBias;                                         // 0x0290(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShadowSharpen;                                           // 0x0294(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ContactShadowLength;                                     // 0x0298(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ContactShadowLengthInWS : 1;                             // 0x029C(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              InverseSquaredFalloff : 1;                               // 0x029C(0x0001) BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CastTranslucentShadows : 1;                              // 0x029C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastShadowsFromCinematicObjectsOnly : 1;                // 0x029C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAffectDynamicIndirectLighting : 1;                      // 0x029C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceCachedShadowsForMovablePrimitives : 1;             // 0x029C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DBC4[0x3];                                   // 0x029D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLightingChannels                                   LightingChannels;                                        // 0x02A0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PTDY[0x7];                                   // 0x02A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInterface*                                  LightFunctionMaterial;                                   // 0x02A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LightFunctionScale;                                      // 0x02B0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PMQO[0x4];                                   // 0x02BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTextureLightProfile*                                IESTexture;                                              // 0x02C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseIESBrightness : 1;                                   // 0x02C8(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_330U[0x3];                                   // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IESBrightnessScale;                                      // 0x02CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightFunctionFadeDistance;                               // 0x02D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DisabledBrightness;                                      // 0x02D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableLightShaftBloom : 1;                              // 0x02D8(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E9BR[0x3];                                   // 0x02D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BloomScale;                                              // 0x02DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BloomThreshold;                                          // 0x02E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BloomMaxBrightness;                                      // 0x02E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              BloomTint;                                               // 0x02E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseRayTracedDistanceFieldShadows;                       // 0x02EC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OWE2[0x3];                                   // 0x02ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RayStartOffsetDepthScale;                                // 0x02F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bVisibleInReflectionCaptures : 1;                        // 0x02F4(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I9ML[0xAB];                                  // 0x02F5(0x00AB) MISSED OFFSET (PADDING)

	public:
		void SetVolumetricScatteringIntensity(float NewIntensity);
		void SetUseTemperature(bool bNewValue);
		void SetUseIESBrightness(bool bNewValue);
		void SetTransmission(bool bNewValue);
		void SetTemperature(float NewTemperature);
		void SetSpecularScale(float NewValue);
		void SetShadowSlopeBias(float NewValue);
		void SetShadowBias(float NewValue);
		void SetLightingChannels(bool bChannel0, bool bChannel1, bool bChannel2);
		void SetLightFunctionScale(const struct FVector& NewLightFunctionScale);
		void SetLightFunctionMaterial(class UMaterialInterface* NewLightFunctionMaterial);
		void SetLightFunctionFadeDistance(float NewLightFunctionFadeDistance);
		void SetLightFunctionDisabledBrightness(float NewValue);
		void SetLightColor(const struct FLinearColor& NewLightColor, bool bSRGB);
		void SetIntensity(float NewIntensity);
		void SetIndirectLightingIntensity(float NewIntensity);
		void SetIESTexture(class UTextureLightProfile* NewValue);
		void SetIESBrightnessScale(float NewValue);
		void SetForceCachedShadowsForMovablePrimitives(bool bNewValue);
		void SetEnableLightShaftBloom(bool bNewValue);
		void SetBloomTint(const struct FColor& NewValue);
		void SetBloomThreshold(float NewValue);
		void SetBloomScale(float NewValue);
		void SetBloomMaxBrightness(float NewValue);
		void SetAffectTranslucentLighting(bool bNewValue);
		void SetAffectDynamicIndirectLighting(bool bNewValue);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LocalLightComponent
	 * Size -> 0x0010 (FullSize[0x03B0] - InheritedSize[0x03A0])
	 */
	class ULocalLightComponent : public ULightComponent
	{
	public:
		float                                                      Radius;                                                  // 0x039C(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttenuationRadius;                                       // 0x03A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLightmassPointLightSettings                        LightmassSettings;                                       // 0x03A4(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic

	public:
		void SetIntensityUnits(ELightUnits NewIntensityUnits);
		void SetAttenuationRadius(float NewRadius);
		float STATIC_GetUnitsConversionFactor(ELightUnits SrcUnits, ELightUnits TargetUnits, float CosHalfConeAngle);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PointLightComponent
	 * Size -> 0x0020 (FullSize[0x03D0] - InheritedSize[0x03B0])
	 */
	class UPointLightComponent : public ULocalLightComponent
	{
	public:
		unsigned char                                              bUseInverseSquaredFalloff : 1;                           // 0x03B0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6FXD[0x3];                                   // 0x03B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LightFalloffExponent;                                    // 0x03B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SourceRadius;                                            // 0x03B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SoftSourceRadius;                                        // 0x03BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SourceLength;                                            // 0x03C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O6JS[0xC];                                   // 0x03C4(0x000C) MISSED OFFSET (PADDING)

	public:
		void SetSourceRadius(float bNewValue);
		void SetSourceLength(float NewValue);
		void SetSoftSourceRadius(float bNewValue);
		void SetLightFalloffExponent(float NewLightFalloffExponent);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SpotLightComponent
	 * Size -> 0x0010 (FullSize[0x03E0] - InheritedSize[0x03D0])
	 */
	class USpotLightComponent : public UPointLightComponent
	{
	public:
		float                                                      OuterConeAngle;                                          // 0x03CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShadowNearPlaneOffset;                                   // 0x03D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9VAA[0xC];                                   // 0x03D4(0x000C) MISSED OFFSET (PADDING)

	public:
		void SetOuterConeAngle(float NewOuterConeAngle);
		void SetInnerConeAngle(float NewInnerConeAngle);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LocalPlayerSubsystem
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class ULocalPlayerSubsystem : public USubsystem
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ProjectileMovementComponent
	 * Size -> 0x00E8 (FullSize[0x01E0] - InheritedSize[0x00F8])
	 */
	class UProjectileMovementComponent : public UMovementComponent
	{
	public:
		float                                                      InitialSpeed;                                            // 0x00F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSpeed;                                                // 0x00FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRotationFollowsVelocity : 1;                            // 0x0100(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRotationRemainsVertical : 1;                            // 0x0100(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShouldBounce : 1;                                       // 0x0100(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInitialVelocityInLocalSpace : 1;                        // 0x0100(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceSubStepping : 1;                                   // 0x0100(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSimulationEnabled : 1;                                  // 0x0100(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSweepCollision : 1;                                     // 0x0100(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsHomingProjectile : 1;                                 // 0x0100(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bBounceAngleAffectsFriction : 1;                         // 0x0101(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsSliding : 1;                                          // 0x0101(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInterpMovement : 1;                                     // 0x0101(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInterpRotation : 1;                                     // 0x0101(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JTIP[0x2];                                   // 0x0102(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PreviousHitTime;                                         // 0x0104(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PreviousHitNormal;                                       // 0x0108(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProjectileGravityScale;                                  // 0x0114(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Buoyancy;                                                // 0x0118(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Bounciness;                                              // 0x011C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Friction;                                                // 0x0120(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BounceVelocityStopSimulatingThreshold;                   // 0x0124(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinFrictionFraction;                                     // 0x0128(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DIEK[0x4];                                   // 0x012C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnProjectileBounce;                                      // 0x0130(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnProjectileStop;                                        // 0x0140(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		float                                                      HomingAccelerationMagnitude;                             // 0x0150(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class USceneComponent>                      HomingTargetComponent;                                   // 0x0154(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSimulationTimeStep;                                   // 0x015C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxSimulationIterations;                                 // 0x0160(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BounceAdditionalIterations;                              // 0x0164(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InterpLocationTime;                                      // 0x0168(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InterpRotationTime;                                      // 0x016C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InterpLocationMaxLagDistance;                            // 0x0170(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InterpLocationSnapToTargetDistance;                      // 0x0174(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AA54[0x68];                                  // 0x0178(0x0068) MISSED OFFSET (PADDING)

	public:
		void StopSimulating(const struct FHitResult& HitResult);
		void SetVelocityInLocalSpace(const struct FVector& NewVelocity);
		void SetInterpolatedComponent(class USceneComponent* Component);
		void ResetInterpolation();
		void OnProjectileStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult);
		void OnProjectileBounceDelegate__DelegateSignature(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
		void MoveInterpolationTarget(const struct FVector& NewLocation, const struct FRotator& NewRotation);
		struct FVector LimitVelocity(const struct FVector& NewVelocity);
		bool IsVelocityUnderSimulationThreshold();
		bool IsInterpolationComplete();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.StaticMeshActor
	 * Size -> 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
	 */
	class AStaticMeshActor : public AActor
	{
	public:
		class UStaticMeshComponent*                                StaticMeshComponent;                                     // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bStaticMeshReplicateMovement;                            // 0x0238(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENavDataGatheringMode                                      NavigationGeometryGatheringMode;                         // 0x0239(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XVPM[0x6];                                   // 0x023A(0x0006) MISSED OFFSET (PADDING)

	public:
		void SetMobility(EComponentMobility InMobility);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SkyLight
	 * Size -> 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
	 */
	class ASkyLight : public AInfo
	{
	public:
		class USkyLightComponent*                                  LightComponent;                                          // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bEnabled : 1;                                            // 0x0238(0x0001) BIT_FIELD Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MO8B[0x7];                                   // 0x0239(0x0007) MISSED OFFSET (PADDING)

	public:
		void OnRep_bEnabled();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Texture
	 * Size -> 0x0118 (FullSize[0x0180] - InheritedSize[0x0068])
	 */
	class UTexture : public UStreamableRenderAsset
	{
	public:
		unsigned char                                              UnknownData_FB82[0x8];                                   // 0x0068(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               LightingGuid;                                            // 0x0070(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    LODBias;                                                 // 0x0080(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETextureCompressionSettings                                CompressionSettings;                                     // 0x0084(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETextureFilter                                             Filter;                                                  // 0x0085(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETextureMipLoadOptions                                     MipLoadOptions;                                          // 0x0086(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETextureGroup                                              LODGroup;                                                // 0x0087(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPerPlatformFloat                                   Downscale;                                               // 0x0088(0x0004) Edit, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic
		ETextureDownscaleOptions                                   DownscaleOptions;                                        // 0x008C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              sRGB : 1;                                                // 0x008D(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNoTiling : 1;                                           // 0x008D(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              VirtualTextureStreaming : 1;                             // 0x008D(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CompressionYCoCg : 1;                                    // 0x008D(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNotOfflineProcessed : 1;                                // 0x008D(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAsyncResourceReleaseHasBeenStarted : 1;                 // 0x008D(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_P5J9[0x2];                                   // 0x008E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAssetUserData*>                              AssetUserData;                                           // 0x0090(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_EFHF[0xE0];                                  // 0x00A0(0x00E0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TextureCube
	 * Size -> 0x0050 (FullSize[0x01D0] - InheritedSize[0x0180])
	 */
	class UTextureCube : public UTexture
	{
	public:
		unsigned char                                              UnknownData_MPFE[0x50];                                  // 0x0180(0x0050) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialInterface
	 * Size -> 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
	 */
	class UMaterialInterface : public UObject
	{
	public:
		unsigned char                                              UnknownData_33J4[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USubsurfaceProfile*                                  SubsurfaceProfile;                                       // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5J6Y[0x10];                                  // 0x0048(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLightmassMaterialInterfaceSettings                 LightmassSettings;                                       // 0x0058(0x0010) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		TArray<struct FMaterialTextureInfo>                        TextureStreamingData;                                    // 0x0068(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class UAssetUserData*>                              AssetUserData;                                           // 0x0078(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_TQEC[0x8];                                   // 0x0088(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetForceMipLevelsToBeResident(bool OverrideForceMiplevelsToBeResident, bool bForceMiplevelsToBeResidentValue, float ForceDuration, int32_t CinematicTextureGroups, bool bFastResponse);
		class UPhysicalMaterialMask* GetPhysicalMaterialMask();
		class UPhysicalMaterial* GetPhysicalMaterialFromMap(int32_t Index);
		class UPhysicalMaterial* GetPhysicalMaterial();
		struct FMaterialParameterInfo GetParameterInfo(EMaterialParameterAssociation Association, const class FName& ParameterName, class UMaterialFunctionInterface* LayerFunction);
		class UMaterial* GetBaseMaterial();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialInstance
	 * Size -> 0x0288 (FullSize[0x0318] - InheritedSize[0x0090])
	 */
	class UMaterialInstance : public UMaterialInterface
	{
	public:
		class UPhysicalMaterial*                                   PhysMaterial;                                            // 0x0090(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicalMaterial*                                   PhysicalMaterialMap[0x8];                                // 0x0098(0x0040) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  Parent;                                                  // 0x00D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHasStaticPermutationResource : 1;                       // 0x00E0(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideSubsurfaceProfile : 1;                          // 0x00E0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VGDO[0x7];                                   // 0x00E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FScalarParameterValue>                       ScalarParameterValues;                                   // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FVectorParameterValue>                       VectorParameterValues;                                   // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTextureParameterValue>                      TextureParameterValues;                                  // 0x0108(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FRuntimeVirtualTextureParameterValue>        RuntimeVirtualTextureParameterValues;                    // 0x0118(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FFontParameterValue>                         FontParameterValues;                                     // 0x0128(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		struct FMaterialInstanceBasePropertyOverrides              BasePropertyOverrides;                                   // 0x0138(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VYXI[0x10];                                  // 0x0140(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStaticParameterSet                                 StaticParameters;                                        // 0x0150(0x0040) NativeAccessSpecifierPrivate
		struct FMaterialCachedParameters                           CachedLayerParameters;                                   // 0x0190(0x0150) NativeAccessSpecifierPrivate
		TArray<class UObject*>                                     CachedReferencedTextures;                                // 0x02E0(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DOFR[0x28];                                  // 0x02F0(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialInstanceConstant
	 * Size -> 0x0008 (FullSize[0x0320] - InheritedSize[0x0318])
	 */
	class UMaterialInstanceConstant : public UMaterialInstance
	{
	public:
		class UPhysicalMaterialMask*                               PhysMaterialMask;                                        // 0x0318(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		struct FLinearColor K2_GetVectorParameterValue(const class FName& ParameterName);
		class UTexture* K2_GetTextureParameterValue(const class FName& ParameterName);
		float K2_GetScalarParameterValue(const class FName& ParameterName);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.WorldSubsystem
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UWorldSubsystem : public USubsystem
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TickableWorldSubsystem
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UTickableWorldSubsystem : public UWorldSubsystem
	{
	public:
		unsigned char                                              UnknownData_QXDI[0x10];                                  // 0x0038(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionCustomOutput
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionCustomOutput : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TimecodeProvider
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UTimecodeProvider : public UObject
	{
	public:
		float                                                      FrameDelay;                                              // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6FH2[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)

	public:
		struct FTimecode GetTimecode();
		ETimecodeProviderSynchronizationState GetSynchronizationState();
		struct FQualifiedFrameTime GetQualifiedFrameTime();
		struct FFrameRate GetFrameRate();
		struct FTimecode GetDelayedTimecode();
		struct FQualifiedFrameTime GetDelayedQualifiedFrameTime();
		bool FetchTimecode(struct FQualifiedFrameTime* OutFrameTime);
		void FetchAndUpdate();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DynamicBlueprintBinding
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDynamicBlueprintBinding : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BlueprintGeneratedClass
	 * Size -> 0x00F8 (FullSize[0x0338] - InheritedSize[0x0240])
	 */
	class UBlueprintGeneratedClass : public UClass
	{
	public:
		int32_t                                                    NumReplicatedProperties;                                 // 0x0240(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHasNativizedParent : 1;                                 // 0x0244(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHasCookedComponentInstancingData : 1;                   // 0x0244(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RLFK[0x3];                                   // 0x0245(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UDynamicBlueprintBinding*>                    DynamicBindingObjects;                                   // 0x0248(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UActorComponent*>                             ComponentTemplates;                                      // 0x0258(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UTimelineTemplate*>                           Timelines;                                               // 0x0268(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FBPComponentClassOverride>                   ComponentClassOverrides;                                 // 0x0278(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class USimpleConstructionScript*                           SimpleConstructionScript;                                // 0x0288(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInheritableComponentHandler*                        InheritableComponentHandler;                             // 0x0290(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStructProperty*                                     UberGraphFramePointerProperty;                           // 0x0298(0x0008) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B8H3[0x8];                                   // 0x02A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFunction*                                           UberGraphFunction;                                       // 0x02A8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, struct FBlueprintCookedComponentInstancingData> CookedComponentInstancingData;                           // 0x02B0(0x0050) NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K1RH[0x38];                                  // 0x0300(0x0038) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CameraComponent
	 * Size -> 0x05D0 (FullSize[0x07F0] - InheritedSize[0x0220])
	 */
	class UCameraComponent : public USceneComponent
	{
	public:
		float                                                      OrthoWidth;                                              // 0x021C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OrthoNearClipPlane;                                      // 0x0220(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OrthoFarClipPlane;                                       // 0x0224(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AspectRatio;                                             // 0x0228(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bConstrainAspectRatio : 1;                               // 0x022C(0x0001) BIT_FIELD Edit, BlueprintVisible, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseFieldOfViewForLOD : 1;                               // 0x022C(0x0001) BIT_FIELD Edit, BlueprintVisible, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLockToHmd : 1;                                          // 0x022C(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsePawnControlRotation : 1;                             // 0x022C(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECameraProjectionMode                                      ProjectionMode;                                          // 0x022D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZO5R[0x32];                                  // 0x022E(0x0032) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PostProcessBlendWeight;                                  // 0x0260(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HJL5[0x2C];                                  // 0x0264(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPostProcessSettings                                PostProcessSettings;                                     // 0x0290(0x0560) Edit, BlueprintVisible, Interp, NativeAccessSpecifierPublic

	public:
		void SetUseFieldOfViewForLOD(bool bInUseFieldOfViewForLOD);
		void SetProjectionMode(ECameraProjectionMode InProjectionMode);
		void SetPostProcessBlendWeight(float InPostProcessBlendWeight);
		void SetOrthoWidth(float InOrthoWidth);
		void SetOrthoNearClipPlane(float InOrthoNearClipPlane);
		void SetOrthoFarClipPlane(float InOrthoFarClipPlane);
		void SetFieldOfView(float InFieldOfView);
		void SetConstraintAspectRatio(bool bInConstrainAspectRatio);
		void SetAspectRatio(float inAspectRatio);
		void RemoveBlendable();
		void OnCameraMeshHiddenChanged();
		void GetCameraView(float DeltaTime, struct FMinimalViewInfo* DesiredView);
		void AddOrUpdateBlendable(float InWeight);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundBase
	 * Size -> 0x0148 (FullSize[0x0178] - InheritedSize[0x0030])
	 */
	class USoundBase : public UObject
	{
	public:
		unsigned char                                              UnknownData_2S88[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USoundClass*                                         SoundClassObject;                                        // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDebug : 1;                                              // 0x0040(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideConcurrency : 1;                                // 0x0040(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableBusSends : 1;                                     // 0x0040(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableBaseSubmix : 1;                                   // 0x0040(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableSubmixSends : 1;                                  // 0x0040(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHasDelayNode : 1;                                       // 0x0040(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHasConcatenatorNode : 1;                                // 0x0040(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bBypassVolumeScaleForPriority : 1;                       // 0x0040(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVirtualizationMode                                        VirtualizationMode;                                      // 0x0041(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HUL3[0x56];                                  // 0x0042(0x0056) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ConcurrencySet[0x50];                                    // 0x0042(0x0050) UNKNOWN PROPERTY: SetProperty
		struct FSoundConcurrencySettings                           ConcurrencyOverrides;                                    // 0x00E8(0x0028) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0110(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDistance;                                             // 0x0114(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotalSamples;                                            // 0x0118(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Priority;                                                // 0x011C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundAttenuation*                                   AttenuationSettings;                                     // 0x0120(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundSubmixBase*                                    SoundSubmixObject;                                       // 0x0128(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSoundSubmixSendInfo>                        SoundSubmixSends;                                        // 0x0130(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class USoundEffectSourcePresetChain*                       SourceEffectChain;                                       // 0x0140(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSoundSourceBusSendInfo>                     BusSends;                                                // 0x0148(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSoundSourceBusSendInfo>                     PreEffectBusSends;                                       // 0x0158(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UAssetUserData*>                              AssetUserData;                                           // 0x0168(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundWave
	 * Size -> 0x0200 (FullSize[0x0378] - InheritedSize[0x0178])
	 */
	class USoundWave : public USoundBase
	{
	public:
		int32_t                                                    CompressionQuality;                                      // 0x0178(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StreamingPriority;                                       // 0x017C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESoundwaveSampleRateSettings                               SampleRateQuality;                                       // 0x0180(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NL0W[0x1];                                   // 0x0181(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESoundGroup                                                SoundGroup;                                              // 0x0182(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLooping : 1;                                            // 0x0183(0x0001) BIT_FIELD Edit, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bStreaming : 1;                                          // 0x0183(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSeekableStreaming : 1;                                  // 0x0183(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESoundWaveLoadingBehavior                                  LoadingBehavior;                                         // 0x0184(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8PJ4 : 6;                                    // 0x0185(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bMature : 1;                                             // 0x0185(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bManualWordWrap : 1;                                     // 0x0185(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSingleLine : 1;                                         // 0x0186(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsAmbisonics : 1;                                       // 0x0186(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1NN9[0x1];                                   // 0x0187(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoundModulationDefaultRoutingSettings              ModulationSettings;                                      // 0x0188(0x0048) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		TArray<float>                                              FrequenciesToAnalyze;                                    // 0x01D0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSoundWaveSpectralTimeData>                  CookedSpectralTimeData;                                  // 0x01E0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSoundWaveEnvelopeTimeData>                  CookedEnvelopeTimeData;                                  // 0x01F0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    InitialChunkSize;                                        // 0x0200(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WHIO[0x44];                                  // 0x0204(0x0044) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SpokenText;                                              // 0x0248(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SubtitlePriority;                                        // 0x0258(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Volume;                                                  // 0x025C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Pitch;                                                   // 0x0260(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumChannels;                                             // 0x0264(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SampleRate;                                              // 0x0268(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_K7P7[0xC];                                   // 0x026C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSubtitleCue>                                Subtitles;                                               // 0x0278(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UCurveTable*                                         Curves;                                                  // 0x0288(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveTable*                                         InternalCurves;                                          // 0x0290(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_VBXU[0xE0];                                  // 0x0298(0x00E0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundWaveProcedural
	 * Size -> 0x0058 (FullSize[0x03D0] - InheritedSize[0x0378])
	 */
	class USoundWaveProcedural : public USoundWave
	{
	public:
		unsigned char                                              UnknownData_6D6D[0x58];                                  // 0x0378(0x0058) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BlueprintCore
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class UBlueprintCore : public UObject
	{
	public:
		class UClass*                                              SkeletonGeneratedClass;                                  // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              GeneratedClass;                                          // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLegacyNeedToPurgeSkelRefs;                              // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D0QL[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               BlueprintGuid;                                           // 0x0044(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_JASJ[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Blueprint
	 * Size -> 0x0050 (FullSize[0x00A8] - InheritedSize[0x0058])
	 */
	class UBlueprint : public UBlueprintCore
	{
	public:
		class UClass*                                              ParentClass;                                             // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBlueprintType                                             BlueprintType;                                           // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRecompileOnLoad : 1;                                    // 0x0061(0x0001) BIT_FIELD Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHasBeenRegenerated : 1;                                 // 0x0061(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsRegeneratingOnLoad : 1;                               // 0x0061(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6PEE[0x2];                                   // 0x0062(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BlueprintSystemVersion;                                  // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USimpleConstructionScript*                           SimpleConstructionScript;                                // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UActorComponent*>                             ComponentTemplates;                                      // 0x0070(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UTimelineTemplate*>                           Timelines;                                               // 0x0080(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FBPComponentClassOverride>                   ComponentClassOverrides;                                 // 0x0090(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class UInheritableComponentHandler*                        InheritableComponentHandler;                             // 0x00A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Model
	 * Size -> 0x0230 (FullSize[0x0260] - InheritedSize[0x0030])
	 */
	class UModel : public UObject
	{
	public:
		unsigned char                                              UnknownData_GJ7S[0x230];                                 // 0x0030(0x0230) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Channel
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	class UChannel : public UObject
	{
	public:
		class UNetConnection*                                      Connection;                                              // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DT07[0x40];                                  // 0x0038(0x0040) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ActorChannel
	 * Size -> 0x0228 (FullSize[0x02A0] - InheritedSize[0x0078])
	 */
	class UActorChannel : public UChannel
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0078(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q2XI[0xE8];                                  // 0x0080(0x00E8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UObject*>                                     CreateSubObjects;                                        // 0x0168(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6LO6[0x128];                                 // 0x0178(0x0128) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimationAsset
	 * Size -> 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
	 */
	class UAnimationAsset : public UObject
	{
	public:
		unsigned char                                              UnknownData_RKD9[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeleton*                                           Skeleton;                                                // 0x0040(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RYEJ[0x20];                                  // 0x0048(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimMetaData*>                               MetaData;                                                // 0x0068(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class UAssetUserData*>                              AssetUserData;                                           // 0x0078(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BlendSpaceBase
	 * Size -> 0x00C8 (FullSize[0x0150] - InheritedSize[0x0088])
	 */
	class UBlendSpaceBase : public UAnimationAsset
	{
	public:
		unsigned char                                              UnknownData_VJCE[0x8];                                   // 0x0088(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bRotationBlendInMeshSpace;                               // 0x0090(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z0NS[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AnimLength;                                              // 0x0094(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FInterpolationParameter                             InterpolationParam[0x3];                                 // 0x0098(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      TargetWeightInterpolationSpeedPerSec;                    // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENotifyTriggerMode                                         NotifyTriggerMode;                                       // 0x00B4(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QAFK[0x3];                                   // 0x00B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPerBoneInterpolation>                       PerBoneBlend;                                            // 0x00B8(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		int32_t                                                    SampleIndexWithMarkers;                                  // 0x00C8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PJO0[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FBlendSample>                                SampleData;                                              // 0x00D0(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<struct FEditorElement>                              GridSamples;                                             // 0x00E0(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		struct FBlendParameter                                     BlendParameters[0x3];                                    // 0x00F0(0x0060) Edit, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BlendSpace
	 * Size -> 0x0008 (FullSize[0x0158] - InheritedSize[0x0150])
	 */
	class UBlendSpace : public UBlendSpaceBase
	{
	public:
		EBlendSpaceAxis                                            AxisToScaleAnimation;                                    // 0x0150(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_J1O9[0x7];                                   // 0x0151(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AimOffsetBlendSpace
	 * Size -> 0x0000 (FullSize[0x0158] - InheritedSize[0x0158])
	 */
	class UAimOffsetBlendSpace : public UBlendSpace
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BlendSpace1D
	 * Size -> 0x0008 (FullSize[0x0158] - InheritedSize[0x0150])
	 */
	class UBlendSpace1D : public UBlendSpaceBase
	{
	public:
		bool                                                       bScaleAnimation;                                         // 0x0150(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U6NN[0x7];                                   // 0x0151(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AimOffsetBlendSpace1D
	 * Size -> 0x0000 (FullSize[0x0158] - InheritedSize[0x0158])
	 */
	class UAimOffsetBlendSpace1D : public UBlendSpace1D
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AISystemBase
	 * Size -> 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
	 */
	class UAISystemBase : public UObject
	{
	public:
		struct FSoftClassPath                                      AISystemClassName;                                       // 0x0030(0x0020) ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                AISystemModuleName;                                      // 0x0050(0x000C) ZeroConstructor, Config, GlobalConfig, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6124[0xC];                                   // 0x005C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bInstantiateAISystemOnClient;                            // 0x0068(0x0001) ZeroConstructor, Config, GlobalConfig, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9CCQ[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AmbientSound
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class AAmbientSound : public AActor
	{
	public:
		class UAudioComponent*                                     AudioComponent;                                          // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void Stop();
		void Play(float StartTime);
		void FadeOut(float FadeOutDuration, float FadeVolumeLevel);
		void FadeIn(float FadeInDuration, float FadeVolumeLevel);
		void AdjustVolume(float AdjustVolumeDuration, float AdjustVolumeLevel);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimationSettings
	 * Size -> 0x0098 (FullSize[0x00E0] - InheritedSize[0x0048])
	 */
	class UAnimationSettings : public UDeveloperSettings
	{
	public:
		int32_t                                                    CompressCommandletVersion;                               // 0x0048(0x0004) Edit, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2K9R[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      KeyEndEffectorsMatchNameArray;                           // 0x0050(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		bool                                                       ForceRecompression;                                      // 0x0060(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceBelowThreshold;                                    // 0x0061(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFirstRecompressUsingCurrentOrDefault;                   // 0x0062(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRaiseMaxErrorToExisting;                                // 0x0063(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnablePerformanceLog;                                   // 0x0064(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStripAnimationDataOnDedicatedServer;                    // 0x0065(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTickAnimationOnSkeletalMeshInit;                        // 0x0066(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MVIT[0x1];                                   // 0x0067(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCustomAttributeSetting>                     BoneCustomAttributesNames;                               // 0x0068(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<class FString>                                      BoneNamesWithCustomAttributes;                           // 0x0078(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		TMap<class FName, ECustomAttributeBlendType>               AttributeBlendModes;                                     // 0x0088(0x0050) Edit, Config, NativeAccessSpecifierPublic
		ECustomAttributeBlendType                                  DefaultAttributeBlendMode;                               // 0x00D8(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TC4R[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimBlueprint
	 * Size -> 0x0028 (FullSize[0x00D0] - InheritedSize[0x00A8])
	 */
	class UAnimBlueprint : public UBlueprint
	{
	public:
		unsigned char                                              UnknownData_DVUQ[0x8];                                   // 0x00A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeleton*                                           TargetSkeleton;                                          // 0x00B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAnimGroupInfo>                              Groups;                                                  // 0x00B8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bUseMultiThreadedAnimationUpdate;                        // 0x00C8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWarnAboutBlueprintUsage;                                // 0x00C9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IQXA[0x6];                                   // 0x00CA(0x0006) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimBlueprintGeneratedClass
	 * Size -> 0x0288 (FullSize[0x05C0] - InheritedSize[0x0338])
	 */
	class UAnimBlueprintGeneratedClass : public UBlueprintGeneratedClass
	{
	public:
		unsigned char                                              UnknownData_GUQ7[0x8];                                   // 0x0338(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FBakedAnimationStateMachine>                 BakedStateMachines;                                      // 0x0340(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class USkeleton*                                           TargetSkeleton;                                          // 0x0350(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAnimNotifyEvent>                            AnimNotifies;                                            // 0x0358(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TMap<class FName, struct FCachedPoseIndices>               OrderedSavedPoseIndicesMap;                              // 0x0368(0x0050) NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TB3M[0x80];                                  // 0x03B8(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        SyncGroupNames;                                          // 0x0438(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FExposedValueHandler>                        EvaluateGraphExposedInputs;                              // 0x0448(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TMap<class FName, struct FGraphAssetPlayerInformation>     GraphAssetPlayerInformation;                             // 0x0458(0x0050) NativeAccessSpecifierPublic
		TMap<class FName, struct FAnimGraphBlendOptions>           GraphBlendOptions;                                       // 0x04A8(0x0050) NativeAccessSpecifierPublic
		struct FPropertyAccessLibrary                              PropertyAccessLibrary;                                   // 0x04F8(0x00C8) NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimBoneCompressionCodec
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UAnimBoneCompressionCodec : public UObject
	{
	public:
		class FString                                              Description;                                             // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimBoneCompressionSettings
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UAnimBoneCompressionSettings : public UObject
	{
	public:
		TArray<class UAnimBoneCompressionCodec*>                   Codecs;                                                  // 0x0030(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimClassData
	 * Size -> 0x0308 (FullSize[0x0338] - InheritedSize[0x0030])
	 */
	class UAnimClassData : public UObject
	{
	public:
		unsigned char                                              UnknownData_8L7A[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FBakedAnimationStateMachine>                 BakedStateMachines;                                      // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class USkeleton*                                           TargetSkeleton;                                          // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAnimNotifyEvent>                            AnimNotifies;                                            // 0x0050(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TMap<class FName, struct FCachedPoseIndices>               OrderedSavedPoseIndicesMap;                              // 0x0060(0x0050) NativeAccessSpecifierPublic
		TArray<struct FAnimBlueprintFunction>                      AnimBlueprintFunctions;                                  // 0x00B0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FAnimBlueprintFunctionData>                  AnimBlueprintFunctionData;                               // 0x00C0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              AnimNodeProperties[0x10];                                // 0x00D0(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              UnknownData_A3V3[0x10];                                  // 0x00E0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              LinkedAnimGraphNodeProperties[0x10];                     // 0x00E0(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              UnknownData_XX95[0x10];                                  // 0x0100(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              LinkedAnimLayerNodeProperties[0x10];                     // 0x0100(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              UnknownData_921I[0x10];                                  // 0x0120(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              PreUpdateNodeProperties[0x10];                           // 0x0120(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              UnknownData_PIB3[0x10];                                  // 0x0140(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              DynamicResetNodeProperties[0x10];                        // 0x0140(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              UnknownData_WLT9[0x10];                                  // 0x0160(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              StateMachineNodeProperties[0x10];                        // 0x0160(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              UnknownData_GNFJ[0x10];                                  // 0x0180(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              InitializationNodeProperties[0x10];                      // 0x0180(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              UnknownData_DVAH[0x10];                                  // 0x01A0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, struct FGraphAssetPlayerInformation>     GraphNameAssetPlayers;                                   // 0x01B0(0x0050) NativeAccessSpecifierPublic
		TArray<class FName>                                        SyncGroupNames;                                          // 0x0200(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FExposedValueHandler>                        EvaluateGraphExposedInputs;                              // 0x0210(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TMap<class FName, struct FAnimGraphBlendOptions>           GraphBlendOptions;                                       // 0x0220(0x0050) NativeAccessSpecifierPublic
		struct FPropertyAccessLibrary                              PropertyAccessLibrary;                                   // 0x0270(0x00C8) NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimClassInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAnimClassInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimSequenceBase
	 * Size -> 0x0028 (FullSize[0x00B0] - InheritedSize[0x0088])
	 */
	class UAnimSequenceBase : public UAnimationAsset
	{
	public:
		TArray<struct FAnimNotifyEvent>                            Notifies;                                                // 0x0088(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		float                                                      SequenceLength;                                          // 0x0098(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RateScale;                                               // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRawCurveTracks                                     RawCurveData;                                            // 0x00A0(0x0010) NativeAccessSpecifierPublic

	public:
		float GetPlayLength();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimCompositeBase
	 * Size -> 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
	 */
	class UAnimCompositeBase : public UAnimSequenceBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimComposite
	 * Size -> 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
	 */
	class UAnimComposite : public UAnimCompositeBase
	{
	public:
		struct FAnimTrack                                          AnimationTrack;                                          // 0x00B0(0x0010) NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimCompress
	 * Size -> 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
	 */
	class UAnimCompress : public UAnimBoneCompressionCodec
	{
	public:
		unsigned char                                              bNeedsSkeleton : 1;                                      // 0x0040(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z35V[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EAnimationCompressionFormat                                TranslationCompressionFormat;                            // 0x0044(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAnimationCompressionFormat                                RotationCompressionFormat;                               // 0x0045(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAnimationCompressionFormat                                ScaleCompressionFormat;                                  // 0x0046(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_POI4[0x1];                                   // 0x0047(0x0001) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimCompress_BitwiseCompressOnly
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UAnimCompress_BitwiseCompressOnly : public UAnimCompress
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimCompress_LeastDestructive
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UAnimCompress_LeastDestructive : public UAnimCompress_BitwiseCompressOnly
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimCompress_RemoveLinearKeys
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UAnimCompress_RemoveLinearKeys : public UAnimCompress
	{
	public:
		float                                                      MaxPosDiff;                                              // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAngleDiff;                                            // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxScaleDiff;                                            // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxEffectorDiff;                                         // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinEffectorDiff;                                         // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectorDiffSocket;                                      // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ParentKeyScale;                                          // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRetarget : 1;                                           // 0x0064(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bActuallyFilterLinearKeys : 1;                           // 0x0064(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I4M8[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimCompress_PerTrackCompression
	 * Size -> 0x0078 (FullSize[0x00E0] - InheritedSize[0x0068])
	 */
	class UAnimCompress_PerTrackCompression : public UAnimCompress_RemoveLinearKeys
	{
	public:
		float                                                      MaxZeroingThreshold;                                     // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxPosDiffBitwise;                                       // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAngleDiffBitwise;                                     // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxScaleDiffBitwise;                                     // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<EAnimationCompressionFormat>                        AllowedRotationFormats;                                  // 0x0078(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<EAnimationCompressionFormat>                        AllowedTranslationFormats;                               // 0x0088(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<EAnimationCompressionFormat>                        AllowedScaleFormats;                                     // 0x0098(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bResampleAnimation : 1;                                  // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VHUZ[0x3];                                   // 0x00A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ResampledFramerate;                                      // 0x00AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinKeysForResampling;                                    // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseAdaptiveError : 1;                                   // 0x00B4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseOverrideForEndEffectors : 1;                         // 0x00B4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4BKP[0x3];                                   // 0x00B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TrackHeightBias;                                         // 0x00B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ParentingDivisor;                                        // 0x00BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ParentingDivisorExponent;                                // 0x00C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseAdaptiveError2 : 1;                                  // 0x00C4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LK25[0x3];                                   // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RotationErrorSourceRatio;                                // 0x00C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TranslationErrorSourceRatio;                             // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScaleErrorSourceRatio;                                   // 0x00D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxErrorPerTrackRatio;                                   // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PerturbationProbeSize;                                   // 0x00D8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N1BH[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimCompress_RemoveEverySecondKey
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	class UAnimCompress_RemoveEverySecondKey : public UAnimCompress
	{
	public:
		int32_t                                                    MinKeys;                                                 // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bStartAtSecondKey : 1;                                   // 0x004C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O5E6[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimCompress_RemoveTrivialKeys
	 * Size -> 0x0010 (FullSize[0x0058] - InheritedSize[0x0048])
	 */
	class UAnimCompress_RemoveTrivialKeys : public UAnimCompress
	{
	public:
		float                                                      MaxPosDiff;                                              // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAngleDiff;                                            // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxScaleDiff;                                            // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3IRX[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimCurveCompressionCodec
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAnimCurveCompressionCodec : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimCurveCompressionCodec_CompressedRichCurve
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAnimCurveCompressionCodec_CompressedRichCurve : public UAnimCurveCompressionCodec
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimCurveCompressionCodec_UniformIndexable
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAnimCurveCompressionCodec_UniformIndexable : public UAnimCurveCompressionCodec
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimCurveCompressionCodec_UniformlySampled
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAnimCurveCompressionCodec_UniformlySampled : public UAnimCurveCompressionCodec
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimCurveCompressionSettings
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UAnimCurveCompressionSettings : public UObject
	{
	public:
		class UAnimCurveCompressionCodec*                          Codec;                                                   // 0x0030(0x0008) Edit, ExportObject, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimLayerInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAnimLayerInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimMetaData
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAnimMetaData : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimMontage
	 * Size -> 0x0130 (FullSize[0x01E0] - InheritedSize[0x00B0])
	 */
	class UAnimMontage : public UAnimCompositeBase
	{
	public:
		struct FAlphaBlend                                         BlendIn;                                                 // 0x00B0(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      BlendInTime;                                             // 0x00E0(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X8QV[0x4];                                   // 0x00E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAlphaBlend                                         BlendOut;                                                // 0x00E8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      BlendOutTime;                                            // 0x0118(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendOutTriggerTime;                                     // 0x011C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SyncGroup;                                               // 0x0120(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SyncSlotIndex;                                           // 0x012C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMarkerSyncData                                     MarkerData;                                              // 0x0130(0x0020) NativeAccessSpecifierPublic
		TArray<struct FCompositeSection>                           CompositeSections;                                       // 0x0150(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FSlotAnimationTrack>                         SlotAnimTracks;                                          // 0x0160(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FBranchingPoint>                             BranchingPoints;                                         // 0x0170(0x0010) ZeroConstructor, Deprecated, NativeAccessSpecifierPublic
		bool                                                       bEnableRootMotionTranslation;                            // 0x0180(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableRootMotionRotation;                               // 0x0181(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableAutoBlendOut;                                     // 0x0182(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERootMotionRootLock                                        RootMotionRootLock;                                      // 0x0183(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_65FM[0x4];                                   // 0x0184(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FBranchingPointMarker>                       BranchingPointMarkers;                                   // 0x0188(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<int32_t>                                            BranchingPointStateNotifyIndices;                        // 0x0198(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FTimeStretchCurve                                   TimeStretchCurve;                                        // 0x01A8(0x0028) Edit, NativeAccessSpecifierPublic
		class FName                                                TimeStretchCurveName;                                    // 0x01D0(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9NBI[0x4];                                   // 0x01DC(0x0004) MISSED OFFSET (PADDING)

	public:
		float GetDefaultBlendOutTime();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimNotify_PauseClothingSimulation
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	class UAnimNotify_PauseClothingSimulation : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimNotify_PlayParticleEffect
	 * Size -> 0x0050 (FullSize[0x0090] - InheritedSize[0x0040])
	 */
	class UAnimNotify_PlayParticleEffect : public UAnimNotify
	{
	public:
		class UParticleSystem*                                     PSTemplate;                                              // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocationOffset;                                          // 0x0048(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationOffset;                                          // 0x0054(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             Scale;                                                   // 0x0060(0x000C) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L1W9[0x14];                                  // 0x006C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Attached : 1;                                            // 0x0080(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FATR[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SocketName;                                              // 0x0084(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimNotify_PlaySound
	 * Size -> 0x0020 (FullSize[0x0060] - InheritedSize[0x0040])
	 */
	class UAnimNotify_PlaySound : public UAnimNotify
	{
	public:
		class USoundBase*                                          Sound;                                                   // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VolumeMultiplier;                                        // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchMultiplier;                                         // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFollow : 1;                                             // 0x0050(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RS40[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AttachName;                                              // 0x0054(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimNotify_ResetClothingSimulation
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	class UAnimNotify_ResetClothingSimulation : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimNotify_ResetDynamics
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	class UAnimNotify_ResetDynamics : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimNotify_ResumeClothingSimulation
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	class UAnimNotify_ResumeClothingSimulation : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimNotifyState_DisableRootMotion
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotifyState_DisableRootMotion : public UAnimNotifyState
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimNotifyState_TimedParticleEffect
	 * Size -> 0x0030 (FullSize[0x0068] - InheritedSize[0x0038])
	 */
	class UAnimNotifyState_TimedParticleEffect : public UAnimNotifyState
	{
	public:
		class UParticleSystem*                                     PSTemplate;                                              // 0x0038(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0040(0x000C) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocationOffset;                                          // 0x004C(0x000C) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationOffset;                                          // 0x0058(0x000C) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bDestroyAtEnd;                                           // 0x0064(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K0F9[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimNotifyState_Trail
	 * Size -> 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
	 */
	class UAnimNotifyState_Trail : public UAnimNotifyState
	{
	public:
		class UParticleSystem*                                     PSTemplate;                                              // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FirstSocketName;                                         // 0x0040(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SecondSocketName;                                        // 0x004C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETrailWidthMode                                            WidthScaleMode;                                          // 0x0058(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z6GC[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                WidthScaleCurve;                                         // 0x005C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRecycleSpawnedSystems : 1;                              // 0x0068(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S95A[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (PADDING)

	public:
		class UParticleSystem* OverridePSTemplate(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimSequence
	 * Size -> 0x0118 (FullSize[0x01C8] - InheritedSize[0x00B0])
	 */
	class UAnimSequence : public UAnimSequenceBase
	{
	public:
		int32_t                                                    NumFrames;                                               // 0x00B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_WYRT[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTrackToSkeletonMap>                         TrackToSkeletonMapTable;                                 // 0x00B8(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_YAMH[0x10];                                  // 0x00C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimBoneCompressionSettings*                        BoneCompressionSettings;                                 // 0x00D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimCurveCompressionSettings*                       CurveCompressionSettings;                                // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LR6X[0x70];                                  // 0x00E8(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EAdditiveAnimationType                                     AdditiveAnimType;                                        // 0x0158(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAdditiveBasePoseType                                      RefPoseType;                                             // 0x0159(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DZ7Y[0x6];                                   // 0x015A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       RefPoseSeq;                                              // 0x0160(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RefFrameIndex;                                           // 0x0168(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RetargetSource;                                          // 0x016C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTransform>                                  RetargetSourceAssetReferencePose;                        // 0x0178(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		EAnimInterpolationType                                     Interpolation;                                           // 0x0188(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableRootMotion;                                       // 0x0189(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERootMotionRootLock                                        RootMotionRootLock;                                      // 0x018A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceRootLock;                                          // 0x018B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseNormalizedRootMotionScale;                           // 0x018C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRootMotionSettingsCopiedFromMontage;                    // 0x018D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DKT0[0x2];                                   // 0x018E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAnimSyncMarker>                             AuthoredSyncMarkers;                                     // 0x0190(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RWN6[0x18];                                  // 0x01A0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FBakedCustomAttributePerBoneData>            BakedPerBoneCustomAttributeData;                         // 0x01B8(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimSet
	 * Size -> 0x00D0 (FullSize[0x0100] - InheritedSize[0x0030])
	 */
	class UAnimSet : public UObject
	{
	public:
		unsigned char                                              bAnimRotationOnly : 1;                                   // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_I01C[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        TrackBoneNames;                                          // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FAnimSetMeshLinkup>                          LinkupCache;                                             // 0x0048(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<unsigned char>                                      BoneUseAnimTranslation;                                  // 0x0058(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<unsigned char>                                      ForceUseMeshTranslation;                                 // 0x0068(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class FName>                                        UseTranslationBoneNames;                                 // 0x0078(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class FName>                                        ForceMeshTranslationBoneNames;                           // 0x0088(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate
		class FName                                                PreviewSkelMeshName;                                     // 0x0098(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BestRatioSkelMeshName;                                   // 0x00A4(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S62S[0x50];                                  // 0x00B0(0x0050) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimSingleNodeInstance
	 * Size -> 0x0020 (FullSize[0x02E0] - InheritedSize[0x02C0])
	 */
	class UAnimSingleNodeInstance : public UAnimInstance
	{
	public:
		class UAnimationAsset*                                     CurrentAsset;                                            // 0x02C0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptDelegate                                      PostEvaluateAnimEvent;                                   // 0x02C8(0x0010) ELEMENT_SIZE_MISMATCH ZeroConstructor, Transient, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TJHJ[0x4];                                   // 0x02C8(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_YJLA[0x4];                                   // 0x02DC(0x0004) MISSED OFFSET (PADDING)

	public:
		void StopAnim();
		void SetReverse(bool bInReverse);
		void SetPreviewCurveOverride(const class FName& PoseName, float value, bool bRemoveIfZero);
		void SetPositionWithPreviousTime(float InPosition, float InPreviousTime, bool bFireNotifies);
		void SetPosition(float InPosition, bool bFireNotifies);
		void SetPlayRate(float InPlayRate);
		void SetPlaying(bool bIsPlaying);
		void SetLooping(bool bIsLooping);
		void SetBlendSpaceInput(const struct FVector& InBlendInput);
		void SetAnimationAsset(class UAnimationAsset* NewAsset, bool bIsLooping, float InPlayRate);
		void PlayAnim(bool bIsLooping, float InPlayRate, float InStartPosition);
		float GetLength();
		class UAnimationAsset* GetAnimationAsset();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimStateMachineTypes
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAnimStateMachineTypes : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AnimStreamable
	 * Size -> 0x0040 (FullSize[0x00F0] - InheritedSize[0x00B0])
	 */
	class UAnimStreamable : public UAnimSequenceBase
	{
	public:
		int32_t                                                    NumFrames;                                               // 0x00B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAnimInterpolationType                                     Interpolation;                                           // 0x00B4(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C7HJ[0x3];                                   // 0x00B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                RetargetSource;                                          // 0x00B8(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6GUP[0x14];                                  // 0x00C4(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimBoneCompressionSettings*                        BoneCompressionSettings;                                 // 0x00D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimCurveCompressionSettings*                       CurveCompressionSettings;                                // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableRootMotion;                                       // 0x00E8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERootMotionRootLock                                        RootMotionRootLock;                                      // 0x00E9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceRootLock;                                          // 0x00EA(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseNormalizedRootMotionScale;                           // 0x00EB(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YMOK[0x4];                                   // 0x00EC(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ApplicationLifecycleComponent
	 * Size -> 0x0090 (FullSize[0x0148] - InheritedSize[0x00B8])
	 */
	class UApplicationLifecycleComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             ApplicationWillDeactivateDelegate;                       // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationHasReactivatedDelegate;                       // 0x00C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationWillEnterBackgroundDelegate;                  // 0x00D8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationHasEnteredForegroundDelegate;                 // 0x00E8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationWillTerminateDelegate;                        // 0x00F8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationShouldUnloadResourcesDelegate;                // 0x0108(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationReceivedStartupArgumentsDelegate;             // 0x0118(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnTemperatureChangeDelegate;                             // 0x0128(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnLowPowerModeDelegate;                                  // 0x0138(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ArrowComponent
	 * Size -> 0x0020 (FullSize[0x04A0] - InheritedSize[0x0480])
	 */
	class UArrowComponent : public UPrimitiveComponent
	{
	public:
		struct FColor                                              ArrowColor;                                              // 0x0480(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ArrowSize;                                               // 0x0484(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ArrowLength;                                             // 0x0488(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScreenSize;                                              // 0x048C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsScreenSizeScaled : 1;                                 // 0x0490(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTreatAsASprite : 1;                                     // 0x0490(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GJ6M[0xF];                                   // 0x0491(0x000F) MISSED OFFSET (PADDING)

	public:
		void SetArrowColor(const struct FLinearColor& NewColor);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AssetExportTask
	 * Size -> 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
	 */
	class UAssetExportTask : public UObject
	{
	public:
		class UObject*                                             Object;                                                  // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UExporter*                                           Exporter;                                                // 0x0038(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Filename;                                                // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSelected;                                               // 0x0050(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReplaceIdentical;                                       // 0x0051(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPrompt;                                                 // 0x0052(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutomated;                                              // 0x0053(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseFileArchive;                                         // 0x0054(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWriteEmptyFiles;                                        // 0x0055(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TWPW[0x2];                                   // 0x0056(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UObject*>                                     IgnoreObjectList;                                        // 0x0058(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class UObject*                                             Options;                                                 // 0x0068(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      Errors;                                                  // 0x0070(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AssetManager
	 * Size -> 0x0450 (FullSize[0x0480] - InheritedSize[0x0030])
	 */
	class UAssetManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_LNF5[0x2B8];                                 // 0x0030(0x02B8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UObject*>                                     ObjectReferenceList;                                     // 0x02E8(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		bool                                                       bIsGlobalAsyncScanEnvironment;                           // 0x02F8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShouldGuessTypeAndName;                                 // 0x02F9(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShouldUseSynchronousLoad;                               // 0x02FA(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsLoadingFromPakFiles;                                  // 0x02FB(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShouldAcquireMissingChunksOnLoad;                       // 0x02FC(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bOnlyCookProductionAssets;                               // 0x02FD(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsBulkScanning;                                         // 0x02FE(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsPrimaryAssetDirectoryCurrent;                         // 0x02FF(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsManagementDatabaseCurrent;                            // 0x0300(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bUpdateManagementDatabaseAfterScan;                      // 0x0301(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIncludeOnlyOnDiskAssets;                                // 0x0302(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasCompletedInitialScan;                                // 0x0303(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    NumberOfSpawnedNotifications;                            // 0x0304(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_L92K[0x178];                                 // 0x0308(0x0178) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AssetManagerSettings
	 * Size -> 0x00C8 (FullSize[0x0110] - InheritedSize[0x0048])
	 */
	class UAssetManagerSettings : public UDeveloperSettings
	{
	public:
		TArray<struct FPrimaryAssetTypeInfo>                       PrimaryAssetTypesToScan;                                 // 0x0048(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<struct FDirectoryPath>                              DirectoriesToExclude;                                    // 0x0058(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<struct FPrimaryAssetRulesOverride>                  PrimaryAssetRules;                                       // 0x0068(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<struct FPrimaryAssetRulesCustomOverride>            CustomPrimaryAssetRules;                                 // 0x0078(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		bool                                                       bOnlyCookProductionAssets;                               // 0x0088(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldManagerDetermineTypeAndName;                      // 0x0089(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldGuessTypeAndNameInEditor;                         // 0x008A(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldAcquireMissingChunksOnLoad;                       // 0x008B(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8563[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAssetManagerRedirect>                       PrimaryAssetIdRedirects;                                 // 0x0090(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<struct FAssetManagerRedirect>                       PrimaryAssetTypeRedirects;                               // 0x00A0(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<struct FAssetManagerRedirect>                       AssetPathRedirects;                                      // 0x00B0(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		unsigned char                                              MetaDataTagsForAssetRegistry[0x50];                      // 0x00C0(0x0050) UNKNOWN PROPERTY: SetProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AssetMappingTable
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UAssetMappingTable : public UObject
	{
	public:
		TArray<struct FAssetMapping>                               MappedAssets;                                            // 0x0030(0x0010) Edit, EditFixedSize, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AsyncActionHandleSaveGame
	 * Size -> 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
	 */
	class UAsyncActionHandleSaveGame : public UBlueprintAsyncActionBase
	{
	public:
		class FScriptMulticastDelegate                             COMPLETED;                                               // 0x0038(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UL4E[0x20];                                  // 0x0048(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USaveGame*                                           SaveGameObject;                                          // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		class UAsyncActionHandleSaveGame* STATIC_AsyncSaveGameToSlot(class UObject* WorldContextObject, class USaveGame* SaveGameObject, const class FString& SlotName, int32_t UserIndex);
		class UAsyncActionHandleSaveGame* STATIC_AsyncLoadGameFromSlot(class UObject* WorldContextObject, const class FString& SlotName, int32_t UserIndex);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AsyncActionLoadPrimaryAssetBase
	 * Size -> 0x0048 (FullSize[0x0080] - InheritedSize[0x0038])
	 */
	class UAsyncActionLoadPrimaryAssetBase : public UBlueprintAsyncActionBase
	{
	public:
		unsigned char                                              UnknownData_EBLV[0x48];                                  // 0x0038(0x0048) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AsyncActionLoadPrimaryAsset
	 * Size -> 0x0010 (FullSize[0x0090] - InheritedSize[0x0080])
	 */
	class UAsyncActionLoadPrimaryAsset : public UAsyncActionLoadPrimaryAssetBase
	{
	public:
		class FScriptMulticastDelegate                             COMPLETED;                                               // 0x0080(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		class UAsyncActionLoadPrimaryAsset* STATIC_AsyncLoadPrimaryAsset(class UObject* WorldContextObject, const struct FPrimaryAssetId& PrimaryAsset, TArray<class FName> LoadBundles);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AsyncActionLoadPrimaryAssetClass
	 * Size -> 0x0010 (FullSize[0x0090] - InheritedSize[0x0080])
	 */
	class UAsyncActionLoadPrimaryAssetClass : public UAsyncActionLoadPrimaryAssetBase
	{
	public:
		class FScriptMulticastDelegate                             COMPLETED;                                               // 0x0080(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		class UAsyncActionLoadPrimaryAssetClass* STATIC_AsyncLoadPrimaryAssetClass(class UObject* WorldContextObject, const struct FPrimaryAssetId& PrimaryAsset, TArray<class FName> LoadBundles);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AsyncActionLoadPrimaryAssetList
	 * Size -> 0x0010 (FullSize[0x0090] - InheritedSize[0x0080])
	 */
	class UAsyncActionLoadPrimaryAssetList : public UAsyncActionLoadPrimaryAssetBase
	{
	public:
		class FScriptMulticastDelegate                             COMPLETED;                                               // 0x0080(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		class UAsyncActionLoadPrimaryAssetList* STATIC_AsyncLoadPrimaryAssetList(class UObject* WorldContextObject, TArray<struct FPrimaryAssetId> PrimaryAssetList, TArray<class FName> LoadBundles);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AsyncActionLoadPrimaryAssetClassList
	 * Size -> 0x0010 (FullSize[0x0090] - InheritedSize[0x0080])
	 */
	class UAsyncActionLoadPrimaryAssetClassList : public UAsyncActionLoadPrimaryAssetBase
	{
	public:
		class FScriptMulticastDelegate                             COMPLETED;                                               // 0x0080(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		class UAsyncActionLoadPrimaryAssetClassList* STATIC_AsyncLoadPrimaryAssetClassList(class UObject* WorldContextObject, TArray<struct FPrimaryAssetId> PrimaryAssetList, TArray<class FName> LoadBundles);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AsyncActionChangePrimaryAssetBundles
	 * Size -> 0x0010 (FullSize[0x0090] - InheritedSize[0x0080])
	 */
	class UAsyncActionChangePrimaryAssetBundles : public UAsyncActionLoadPrimaryAssetBase
	{
	public:
		class FScriptMulticastDelegate                             COMPLETED;                                               // 0x0080(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		class UAsyncActionChangePrimaryAssetBundles* STATIC_AsyncChangeBundleStateForPrimaryAssetList(class UObject* WorldContextObject, TArray<struct FPrimaryAssetId> PrimaryAssetList, TArray<class FName> AddBundles, TArray<class FName> RemoveBundles);
		class UAsyncActionChangePrimaryAssetBundles* STATIC_AsyncChangeBundleStateForMatchingPrimaryAssets(class UObject* WorldContextObject, TArray<class FName> NewBundles, TArray<class FName> OldBundles);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AtmosphericFog
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class AAtmosphericFog : public AInfo
	{
	public:
		class UAtmosphericFogComponent*                            AtmosphericFogComponent;                                 // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AtmosphericFogComponent
	 * Size -> 0x0100 (FullSize[0x0320] - InheritedSize[0x0220])
	 */
	class UAtmosphericFogComponent : public USceneComponent
	{
	public:
		float                                                      FogMultiplier;                                           // 0x021C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DensityMultiplier;                                       // 0x0220(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DensityOffset;                                           // 0x0224(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceScale;                                           // 0x0228(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AltitudeScale;                                           // 0x022C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceOffset;                                          // 0x0230(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GroundOffset;                                            // 0x0234(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartDistance;                                           // 0x0238(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SunDiscScale;                                            // 0x023C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultBrightness;                                       // 0x0240(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              DefaultLightColor;                                       // 0x0244(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableSunDisk : 1;                                     // 0x0248(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAtmosphereAffectsSunIlluminance : 1;                    // 0x0248(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableGroundScattering : 1;                            // 0x0248(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_35GY[0x3];                                   // 0x0249(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAtmospherePrecomputeParameters                     PrecomputeParams;                                        // 0x024C(0x002C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected
		class UTexture2D*                                          TransmittanceTexture;                                    // 0x0278(0x0008) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          IrradianceTexture;                                       // 0x0280(0x0008) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2ESF[0x98];                                  // 0x0288(0x0098) MISSED OFFSET (PADDING)

	public:
		void StartPrecompute();
		void SetSunMultiplier(float NewSunMultiplier);
		void SetStartDistance(float NewStartDistance);
		void SetPrecomputeParams(float DensityHeight, int32_t MaxScatteringOrder, int32_t InscatterAltitudeSampleNum);
		void SetFogMultiplier(float NewFogMultiplier);
		void SetDistanceScale(float NewDistanceScale);
		void SetDistanceOffset(float NewDistanceOffset);
		void SetDensityOffset(float NewDensityOffset);
		void SetDensityMultiplier(float NewDensityMultiplier);
		void SetDefaultLightColor(const struct FLinearColor& NewLightColor);
		void SetDefaultBrightness(float NewBrightness);
		void SetAltitudeScale(float NewAltitudeScale);
		void DisableSunDisk(bool NewSunDisk);
		void DisableGroundScattering(bool NewGroundScattering);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AudioBus
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UAudioBus : public UObject
	{
	public:
		EAudioBusChannels                                          AudioBusChannels;                                        // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P4AC[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AudioSettings
	 * Size -> 0x01A8 (FullSize[0x01F0] - InheritedSize[0x0048])
	 */
	class UAudioSettings : public UDeveloperSettings
	{
	public:
		struct FSoftObjectPath                                     DefaultSoundClassName;                                   // 0x0048(0x0020) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DefaultMediaSoundClassName;                              // 0x0068(0x0020) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DefaultSoundConcurrencyName;                             // 0x0088(0x0020) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DefaultBaseSoundMix;                                     // 0x00A8(0x0020) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     VoiPSoundClass;                                          // 0x00C8(0x0020) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MasterSubmix;                                            // 0x00E8(0x0020) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     BaseDefaultSubmix;                                       // 0x0108(0x0020) Edit, ZeroConstructor, Config, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ReverbSubmix;                                            // 0x0128(0x0020) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     EQSubmix;                                                // 0x0148(0x0020) Edit, ZeroConstructor, Config, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVoiceSampleRate                                           VoiPSampleRate;                                          // 0x0168(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_93WT[0x3];                                   // 0x0168(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		float                                                      DefaultReverbSendLevel;                                  // 0x016C(0x0004) ZeroConstructor, Config, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaximumConcurrentStreams;                                // 0x0170(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlobalMinPitchScale;                                     // 0x0174(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlobalMaxPitchScale;                                     // 0x0178(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WGDQ[0x4];                                   // 0x017C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAudioQualitySettings>                       QualityLevels;                                           // 0x0180(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		unsigned char                                              bAllowPlayWhenSilent : 1;                                // 0x0190(0x0001) BIT_FIELD Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableMasterEQ : 1;                                    // 0x0190(0x0001) BIT_FIELD Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAllowCenterChannel3DPanning : 1;                        // 0x0190(0x0001) BIT_FIELD Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K8WC[0x3];                                   // 0x0191(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   NumStoppingSources;                                      // 0x0194(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPanningMethod                                             PanningMethod;                                           // 0x0198(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMonoChannelUpmixMethod                                    MonoChannelUpmixMethod;                                  // 0x0199(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5AGZ[0x6];                                   // 0x019A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DialogueFilenameFormat;                                  // 0x01A0(0x0010) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSoundDebugEntry>                            DebugSounds;                                             // 0x01B0(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<struct FDefaultAudioBusSettings>                    DefaultAudioBuses;                                       // 0x01C0(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		class USoundClass*                                         DefaultSoundClass;                                       // 0x01D0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USoundClass*                                         DefaultMediaSoundClass;                                  // 0x01D8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USoundConcurrency*                                   DefaultSoundConcurrency;                                 // 0x01E0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_FNEF[0x8];                                   // 0x01E8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AudioVolume
	 * Size -> 0x0070 (FullSize[0x02D8] - InheritedSize[0x0268])
	 */
	class AAudioVolume : public AVolume
	{
	public:
		float                                                      Priority;                                                // 0x0268(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bEnabled : 1;                                            // 0x026C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YWRX[0x3];                                   // 0x026D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FReverbSettings                                     Settings;                                                // 0x0270(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate
		struct FInteriorSettings                                   AmbientZoneSettings;                                     // 0x0290(0x0024) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_5G1S[0x4];                                   // 0x02B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAudioVolumeSubmixSendSettings>              SubmixSendSettings;                                      // 0x02B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FAudioVolumeSubmixOverrideSettings>          SubmixOverrideSettings;                                  // 0x02C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate

	public:
		void SetSubmixSendSettings(TArray<struct FAudioVolumeSubmixSendSettings> NewSubmixSendSettings);
		void SetSubmixOverrideSettings(TArray<struct FAudioVolumeSubmixOverrideSettings> NewSubmixOverrideSettings);
		void SetReverbSettings(const struct FReverbSettings& NewReverbSettings);
		void SetPriority(float NewPriority);
		void SetInteriorSettings(const struct FInteriorSettings& NewInteriorSettings);
		void SetEnabled(bool bNewEnabled);
		void OnRep_bEnabled();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AutoDestroySubsystem
	 * Size -> 0x0010 (FullSize[0x0058] - InheritedSize[0x0048])
	 */
	class UAutoDestroySubsystem : public UTickableWorldSubsystem
	{
	public:
		TArray<class AActor*>                                      ActorsToPoll;                                            // 0x0048(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate

	public:
		void OnActorEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AutomationTestSettings
	 * Size -> 0x0320 (FullSize[0x0350] - InheritedSize[0x0030])
	 */
	class UAutomationTestSettings : public UObject
	{
	public:
		TArray<class FString>                                      EngineTestModules;                                       // 0x0030(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<class FString>                                      EditorTestModules;                                       // 0x0040(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     AutomationTestmap;                                       // 0x0050(0x0020) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FEditorMapPerformanceTestDefinition>         EditorPerformanceTestMaps;                               // 0x0070(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<struct FSoftObjectPath>                             AssetsToOpen;                                            // 0x0080(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<class FString>                                      MapsToPIETest;                                           // 0x0090(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		struct FBuildPromotionTestSettings                         BuildPromotionTest;                                      // 0x00A0(0x01F0) Edit, Config, NativeAccessSpecifierPublic
		struct FMaterialEditorPromotionSettings                    MaterialEditorPromotionTest;                             // 0x0290(0x0030) Edit, Config, NativeAccessSpecifierPublic
		struct FParticleEditorPromotionSettings                    ParticleEditorPromotionTest;                             // 0x02C0(0x0010) Edit, Config, NativeAccessSpecifierPublic
		struct FBlueprintEditorPromotionSettings                   BlueprintEditorPromotionTest;                            // 0x02D0(0x0030) Edit, Config, NativeAccessSpecifierPublic
		TArray<class FString>                                      TestLevelFolders;                                        // 0x0300(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<struct FExternalToolDefinition>                     ExternalTools;                                           // 0x0310(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<struct FEditorImportExportTestDefinition>           ImportExportTestDefinitions;                             // 0x0320(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<struct FLaunchOnTestSettings>                       LaunchOnSettings;                                        // 0x0330(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		struct FIntPoint                                           DefaultScreenshotResolution;                             // 0x0340(0x0008) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PIETestDuration;                                         // 0x0348(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KZVU[0x4];                                   // 0x034C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.AvoidanceManager
	 * Size -> 0x00B8 (FullSize[0x00E8] - InheritedSize[0x0030])
	 */
	class UAvoidanceManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_QRNG[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefaultTimeToLive;                                       // 0x0038(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LockTimeAfterAvoid;                                      // 0x003C(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LockTimeAfterClean;                                      // 0x0040(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeltaTimeToPredict;                                      // 0x0044(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ArtificialRadiusExpansion;                               // 0x0048(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TestHeightDifference;                                    // 0x004C(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HeightCheckMargin;                                       // 0x0050(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ACWE[0x94];                                  // 0x0054(0x0094) MISSED OFFSET (PADDING)

	public:
		bool RegisterMovementComponent(class UMovementComponent* MovementComp, float AvoidanceWeight);
		int32_t GetObjectCount();
		int32_t GetNewAvoidanceUID();
		struct FVector GetAvoidanceVelocityForComponent(class UMovementComponent* MovementComp);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BandwidthTestActor
	 * Size -> 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
	 */
	class ABandwidthTestActor : public AActor
	{
	public:
		struct FBandwidthTestGenerator                             BandwidthGenerator;                                      // 0x0230(0x0020) Net, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.GPUCullingInstancedStaticMeshComponent
	 * Size -> 0x0040 (FullSize[0x0630] - InheritedSize[0x05F0])
	 */
	class UGPUCullingInstancedStaticMeshComponent : public UInstancedStaticMeshComponent
	{
	public:
		unsigned char                                              UnknownData_FJC3[0x18];                                  // 0x05F0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMaterialInterface*>                          MaterialOverrides;                                       // 0x0608(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_81CQ[0x18];                                  // 0x0618(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BillboardComponent
	 * Size -> 0x0020 (FullSize[0x04A0] - InheritedSize[0x0480])
	 */
	class UBillboardComponent : public UPrimitiveComponent
	{
	public:
		class UTexture2D*                                          Sprite;                                                  // 0x0480(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsScreenSizeScaled : 1;                                 // 0x0488(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P3A8[0x3];                                   // 0x0489(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ScreenSize;                                              // 0x048C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      U;                                                       // 0x0490(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UL;                                                      // 0x0494(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      V;                                                       // 0x0498(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VL;                                                      // 0x049C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SetUV(int32_t NewU, int32_t NewUL, int32_t NewV, int32_t NewVL);
		void SetSpriteAndUV(class UTexture2D* NewSprite, int32_t NewU, int32_t NewUL, int32_t NewV, int32_t NewVL);
		void SetSprite(class UTexture2D* NewSprite);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BlendableInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UBlendableInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Skeleton
	 * Size -> 0x0368 (FullSize[0x0398] - InheritedSize[0x0030])
	 */
	class USkeleton : public UObject
	{
	public:
		unsigned char                                              UnknownData_8WD7[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FBoneNode>                                   BoneTree;                                                // 0x0040(0x0010) Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected
		TArray<struct FTransform>                                  RefLocalPoses;                                           // 0x0050(0x0010) ZeroConstructor, Deprecated, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_S1YN[0x118];                                 // 0x0060(0x0118) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               VirtualBoneGuid;                                         // 0x0178(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FVirtualBone>                                VirtualBones;                                            // 0x0188(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class USkeletalMeshSocket*>                         Sockets;                                                 // 0x0198(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M1FC[0x50];                                  // 0x01A8(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSmartNameContainer                                 SmartNames;                                              // 0x01F8(0x0050) Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_L69E[0x30];                                  // 0x0248(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UBlendProfile*>                               BlendProfiles;                                           // 0x0278(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FAnimSlotGroup>                              SlotGroups;                                              // 0x0288(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_F7ZN[0xF0];                                  // 0x0298(0x00F0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAssetUserData*>                              AssetUserData;                                           // 0x0388(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BlendProfile
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UBlendProfile : public UObject
	{
	public:
		unsigned char                                              UnknownData_UE23[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeleton*                                           OwningSkeleton;                                          // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FBlendProfileBoneEntry>                      ProfileEntries;                                          // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BlockingVolume
	 * Size -> 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
	 */
	class ABlockingVolume : public AVolume
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BlueprintExtension
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UBlueprintExtension : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BlueprintMapLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UBlueprintMapLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_SetMapPropertyByName(class UObject* Object, const class FName& PropertyName, TMap<int32_t, int32_t> value);
		void STATIC_Map_Values(TMap<int32_t, int32_t> TargetMap, TArray<int32_t>* Values);
		bool STATIC_Map_Remove(TMap<int32_t, int32_t> TargetMap, int32_t Key);
		int32_t STATIC_Map_Length(TMap<int32_t, int32_t> TargetMap);
		void STATIC_Map_Keys(TMap<int32_t, int32_t> TargetMap, TArray<int32_t>* Keys);
		bool STATIC_Map_Find(TMap<int32_t, int32_t> TargetMap, int32_t Key, int32_t* value);
		bool STATIC_Map_Contains(TMap<int32_t, int32_t> TargetMap, int32_t Key);
		void STATIC_Map_Clear(TMap<int32_t, int32_t> TargetMap);
		void STATIC_Map_Add(TMap<int32_t, int32_t> TargetMap, int32_t Key, int32_t value);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BlueprintPathsLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UBlueprintPathsLibrary : public UBlueprintFunctionLibrary
	{
	public:
		class FString STATIC_VideoCaptureDir();
		void STATIC_ValidatePath(const class FString& InPath, bool* bDidSucceed, class FText* OutReason);
		void STATIC_Split(const class FString& InPath, class FString* PathPart, class FString* FilenamePart, class FString* ExtensionPart);
		class FString STATIC_SourceConfigDir();
		bool STATIC_ShouldSaveToUserDir();
		class FString STATIC_ShaderWorkingDir();
		void STATIC_SetProjectFilePath(const class FString& NewGameProjectFilePath);
		class FString STATIC_SetExtension(const class FString& InPath, const class FString& InNewExtension);
		class FString STATIC_ScreenShotDir();
		class FString STATIC_SandboxesDir();
		class FString STATIC_RootDir();
		void STATIC_RemoveDuplicateSlashes(const class FString& InPath, class FString* OutPath);
		class FString STATIC_ProjectUserDir();
		class FString STATIC_ProjectSavedDir();
		class FString STATIC_ProjectPluginsDir();
		class FString STATIC_ProjectPersistentDownloadDir();
		class FString STATIC_ProjectModsDir();
		class FString STATIC_ProjectLogDir();
		class FString STATIC_ProjectIntermediateDir();
		class FString STATIC_ProjectDir();
		class FString STATIC_ProjectContentDir();
		class FString STATIC_ProjectConfigDir();
		class FString STATIC_ProfilingDir();
		void STATIC_NormalizeFilename(const class FString& InPath, class FString* OutPath);
		void STATIC_NormalizeDirectoryName(const class FString& InPath, class FString* OutPath);
		class FString STATIC_MakeValidFileName(const class FString& inString, const class FString& InReplacementChar);
		void STATIC_MakeStandardFilename(const class FString& InPath, class FString* OutPath);
		void STATIC_MakePlatformFilename(const class FString& InPath, class FString* OutPath);
		bool STATIC_MakePathRelativeTo(const class FString& InPath, const class FString& InRelativeTo, class FString* OutPath);
		class FString STATIC_LaunchDir();
		bool STATIC_IsSamePath(const class FString& PathA, const class FString& PathB);
		bool STATIC_IsRestrictedPath(const class FString& InPath);
		bool STATIC_IsRelative(const class FString& InPath);
		bool STATIC_IsProjectFilePathSet();
		bool STATIC_IsDrive(const class FString& InPath);
		bool STATIC_HasProjectPersistentDownloadDir();
		TArray<class FString> STATIC_GetToolTipLocalizationPaths();
		TArray<class FString> STATIC_GetRestrictedFolderNames();
		class FString STATIC_GetRelativePathToRoot();
		TArray<class FString> STATIC_GetPropertyNameLocalizationPaths();
		class FString STATIC_GetProjectFilePath();
		class FString STATIC_GetPath(const class FString& InPath);
		class FString STATIC_GetInvalidFileSystemChars();
		TArray<class FString> STATIC_GetGameLocalizationPaths();
		class FString STATIC_GetExtension(const class FString& InPath, bool bIncludeDot);
		TArray<class FString> STATIC_GetEngineLocalizationPaths();
		TArray<class FString> STATIC_GetEditorLocalizationPaths();
		class FString STATIC_GetCleanFilename(const class FString& InPath);
		class FString STATIC_GetBaseFilename(const class FString& InPath, bool bRemovePath);
		class FString STATIC_GeneratedConfigDir();
		class FString STATIC_GameUserDeveloperDir();
		class FString STATIC_GameSourceDir();
		class FString STATIC_GameDevelopersDir();
		class FString STATIC_GameAgnosticSavedDir();
		bool STATIC_FileExists(const class FString& InPath);
		class FString STATIC_FeaturePackDir();
		class FString STATIC_EnterprisePluginsDir();
		class FString STATIC_EnterpriseFeaturePackDir();
		class FString STATIC_EnterpriseDir();
		class FString STATIC_EngineVersionAgnosticUserDir();
		class FString STATIC_EngineUserDir();
		class FString STATIC_EngineSourceDir();
		class FString STATIC_EngineSavedDir();
		class FString STATIC_EnginePluginsDir();
		class FString STATIC_EngineIntermediateDir();
		class FString STATIC_EngineDir();
		class FString STATIC_EngineContentDir();
		class FString STATIC_EngineConfigDir();
		bool STATIC_DirectoryExists(const class FString& InPath);
		class FString STATIC_DiffDir();
		class FString STATIC_CreateTempFilename(const class FString& Path, const class FString& Prefix, const class FString& Extension);
		class FString STATIC_ConvertToSandboxPath(const class FString& InPath, const class FString& InSandboxName);
		class FString STATIC_ConvertRelativePathToFull(const class FString& InPath, const class FString& InBasePath);
		class FString STATIC_ConvertFromSandboxPath(const class FString& InPath, const class FString& InSandboxName);
		class FString STATIC_Combine(TArray<class FString> InPaths);
		bool STATIC_CollapseRelativeDirectories(const class FString& InPath, class FString* OutPath);
		class FString STATIC_CloudDir();
		class FString STATIC_ChangeExtension(const class FString& InPath, const class FString& InNewExtension);
		class FString STATIC_BugItDir();
		class FString STATIC_AutomationTransientDir();
		class FString STATIC_AutomationLogDir();
		class FString STATIC_AutomationDir();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PlatformGameInstance
	 * Size -> 0x00D0 (FullSize[0x02D0] - InheritedSize[0x0200])
	 */
	class UPlatformGameInstance : public UGameInstance
	{
	public:
		class FScriptMulticastDelegate                             ApplicationWillDeactivateDelegate;                       // 0x0200(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationHasReactivatedDelegate;                       // 0x0210(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationWillEnterBackgroundDelegate;                  // 0x0220(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationHasEnteredForegroundDelegate;                 // 0x0230(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationWillTerminateDelegate;                        // 0x0240(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationShouldUnloadResourcesDelegate;                // 0x0250(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationReceivedStartupArgumentsDelegate;             // 0x0260(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationRegisteredForRemoteNotificationsDelegate;     // 0x0270(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationRegisteredForUserNotificationsDelegate;       // 0x0280(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationFailedToRegisterForRemoteNotificationsDelegate; // 0x0290(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationReceivedRemoteNotificationDelegate;           // 0x02A0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationReceivedLocalNotificationDelegate;            // 0x02B0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ApplicationReceivedScreenOrientationChangedNotificationDelegate; // 0x02C0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BlueprintPlatformLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UBlueprintPlatformLibrary : public UBlueprintFunctionLibrary
	{
	public:
		int32_t STATIC_ScheduleLocalNotificationFromNow(int32_t inSecondsFromNow, const class FText& Title, const class FText& Body, const class FText& action, const class FString& ActivationEvent);
		void STATIC_ScheduleLocalNotificationBadgeFromNow(int32_t inSecondsFromNow, const class FString& ActivationEvent);
		int32_t STATIC_ScheduleLocalNotificationBadgeAtTime(const struct FDateTime& FireDateTime, bool LocalTime, const class FString& ActivationEvent);
		int32_t STATIC_ScheduleLocalNotificationAtTime(const struct FDateTime& FireDateTime, bool LocalTime, const class FText& Title, const class FText& Body, const class FText& action, const class FString& ActivationEvent);
		void STATIC_GetLaunchNotification(bool* NotificationLaunchedApp, class FString* ActivationEvent, int32_t* FireDate);
		EScreenOrientation STATIC_GetDeviceOrientation();
		void STATIC_ClearAllLocalNotifications();
		void STATIC_CancelLocalNotificationById(int32_t notificationId);
		void STATIC_CancelLocalNotification(const class FString& ActivationEvent);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BlueprintSetLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UBlueprintSetLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_SetSetPropertyByName(class UObject* Object, const class FName& PropertyName);
		void STATIC_Set_Union();
		void STATIC_Set_ToArray(TArray<int32_t>* Result);
		void STATIC_Set_RemoveItems(TArray<int32_t> Items);
		bool STATIC_Set_Remove(int32_t Item);
		int32_t STATIC_Set_Length();
		void STATIC_Set_Intersection();
		void STATIC_Set_Difference();
		bool STATIC_Set_Contains(int32_t ItemToFind);
		void STATIC_Set_Clear();
		void STATIC_Set_AddItems(TArray<int32_t> NewItems);
		void STATIC_Set_Add(int32_t NewItem);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BodySetup
	 * Size -> 0x0260 (FullSize[0x02B0] - InheritedSize[0x0050])
	 */
	class UBodySetup : public UBodySetupCore
	{
	public:
		struct FKAggregateGeom                                     AggGeom;                                                 // 0x0050(0x0058) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bAlwaysFullAnimWeight : 1;                               // 0x00A8(0x0001) BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bConsiderForBounds : 1;                                  // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMeshCollideAll : 1;                                     // 0x00A8(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDoubleSidedGeometry : 1;                                // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bGenerateNonMirroredCollision : 1;                       // 0x00A8(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSharedCookedData : 1;                                   // 0x00A8(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bGenerateMirroredCollision : 1;                          // 0x00A8(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupportUVsAndFaceRemap : 1;                             // 0x00A8(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L78L[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPhysicalMaterial*                                   PhysMaterial;                                            // 0x00B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FWalkableSlopeOverride                              WalkableSlopeOverride;                                   // 0x00B8(0x0010) Edit, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6SO5[0x68];                                  // 0x00C8(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBodyInstance                                       DefaultInstance;                                         // 0x0130(0x0160) Edit, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GGNI[0x8];                                   // 0x0290(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             BuildScale3D;                                            // 0x0298(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VFJ2[0xC];                                   // 0x02A4(0x000C) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BoneMaskFilter
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UBoneMaskFilter : public UObject
	{
	public:
		TArray<struct FInputBlendPose>                             BlendPoses;                                              // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BookmarkBase
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UBookmarkBase : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BookMark
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class UBookMark : public UBookmarkBase
	{
	public:
		struct FVector                                             Location;                                                // 0x0030(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x003C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      HiddenLevels;                                            // 0x0048(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BookMark2D
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UBookMark2D : public UBookmarkBase
	{
	public:
		float                                                      Zoom2D;                                                  // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FIntPoint                                           Location;                                                // 0x0034(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_26PO[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BoundsCopyComponent
	 * Size -> 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
	 */
	class UBoundsCopyComponent : public UActorComponent
	{
	public:
		unsigned char                                              BoundsSourceActor[0x30];                                 // 0x00B8(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bUseCollidingComponentsForSourceBounds;                  // 0x00E8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKeepOwnBoundsScale;                                     // 0x00E9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseCollidingComponentsForOwnBounds;                     // 0x00EA(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WLWW[0x5];                                   // 0x00EB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          PostTransform;                                           // 0x00F0(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bCopyXBounds;                                            // 0x0120(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCopyYBounds;                                            // 0x0121(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCopyZBounds;                                            // 0x0122(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1ORA[0xD];                                   // 0x0123(0x000D) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ReflectionCapture
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class AReflectionCapture : public AActor
	{
	public:
		class UReflectionCaptureComponent*                         CaptureComponent;                                        // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BoxReflectionCapture
	 * Size -> 0x0000 (FullSize[0x0238] - InheritedSize[0x0238])
	 */
	class ABoxReflectionCapture : public AReflectionCapture
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ReflectionCaptureComponent
	 * Size -> 0x00A0 (FullSize[0x02C0] - InheritedSize[0x0220])
	 */
	class UReflectionCaptureComponent : public USceneComponent
	{
	public:
		class UBillboardComponent*                                 CaptureOffsetComponent;                                  // 0x0218(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EReflectionSourceType                                      ReflectionSourceType;                                    // 0x0220(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMobileReflectionCompression                               MobileReflectionCompression;                             // 0x0221(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7SM8[0x6];                                   // 0x0222(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTextureCube*                                        Cubemap;                                                 // 0x0228(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SourceCubemapAngle;                                      // 0x0230(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Brightness;                                              // 0x0234(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ContributionFactor;                                      // 0x0238(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IBLMultiplicator;                                        // 0x023C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeTinted;                                            // 0x0240(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OG81[0x3];                                   // 0x0241(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        TintColor;                                               // 0x0244(0x0010) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        LastTintColorNotBlack;                                   // 0x0254(0x0010) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQSD[0x4];                                   // 0x0264(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bModifyMaxValueRGBM;                                     // 0x0268(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R1EF[0x3];                                   // 0x0269(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxValueRGBM;                                            // 0x026C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CaptureOffset;                                           // 0x0270(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               MapBuildDataId;                                          // 0x027C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0ENB[0x14];                                  // 0x028C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTextureCube*                                        CachedEncodedHDRCubemap;                                 // 0x02A0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AOL7[0x18];                                  // 0x02A8(0x0018) MISSED OFFSET (PADDING)

	public:
		void SetIBLMultiplicator(float NewIBLMultiplicator);
		void SetContributionFactor(float NewContributionFactor);
		void SetBrightness(float NewBrightness);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BoxReflectionCaptureComponent
	 * Size -> 0x0020 (FullSize[0x02E0] - InheritedSize[0x02C0])
	 */
	class UBoxReflectionCaptureComponent : public UReflectionCaptureComponent
	{
	public:
		float                                                      BoxTransitionDistance;                                   // 0x02C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_78YR[0x4];                                   // 0x02C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBoxComponent*                                       PreviewInfluenceBox;                                     // 0x02C8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                       PreviewCaptureBox;                                       // 0x02D0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5X7A[0x8];                                   // 0x02D8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Breakpoint
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UBreakpoint : public UObject
	{
	public:
		unsigned char                                              bEnabled : 1;                                            // 0x0030(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DJGJ[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UEdGraphNode*                                        Node;                                                    // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bStepOnce : 1;                                           // 0x0040(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bStepOnce_WasPreviouslyDisabled : 1;                     // 0x0040(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bStepOnce_RemoveAfterHit : 1;                            // 0x0040(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4RP5[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BrushBuilder
	 * Size -> 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
	 */
	class UBrushBuilder : public UObject
	{
	public:
		class FString                                              BitmapFilename;                                          // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Tooltip;                                                 // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              NotifyBadParams : 1;                                     // 0x0050(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T7OW[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                                     Vertices;                                                // 0x0058(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<struct FBuilderPoly>                                Polys;                                                   // 0x0068(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		class FName                                                Layer;                                                   // 0x0078(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              MergeCoplanars : 1;                                      // 0x0084(0x0001) BIT_FIELD NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_CENS[0x3];                                   // 0x0085(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BrushComponent
	 * Size -> 0x0010 (FullSize[0x0490] - InheritedSize[0x0480])
	 */
	class UBrushComponent : public UPrimitiveComponent
	{
	public:
		class UModel*                                              Brush;                                                   // 0x0480(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBodySetup*                                          BrushBodySetup;                                          // 0x0488(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BrushShape
	 * Size -> 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
	 */
	class ABrushShape : public ABrush
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ButtonStyleAsset
	 * Size -> 0x02A8 (FullSize[0x02D8] - InheritedSize[0x0030])
	 */
	class UButtonStyleAsset : public UObject
	{
	public:
		struct FButtonStyle                                        ButtonStyle;                                             // 0x0030(0x02A8) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CameraAnim
	 * Size -> 0x05A0 (FullSize[0x05D0] - InheritedSize[0x0030])
	 */
	class UCameraAnim : public UObject
	{
	public:
		class UInterpGroup*                                        CameraInterpGroup;                                       // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnimLength;                                              // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBox                                                BoundingBox;                                             // 0x003C(0x001C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bRelativeToInitialTransform : 1;                         // 0x0058(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRelativeToInitialFOV : 1;                               // 0x0058(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DIT8[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BaseFOV;                                                 // 0x005C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPostProcessSettings                                BasePostProcessSettings;                                 // 0x0060(0x0560) NativeAccessSpecifierPublic
		float                                                      BasePostProcessBlendWeight;                              // 0x05C0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1DQR[0xC];                                   // 0x05C4(0x000C) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CameraAnimInst
	 * Size -> 0x00F0 (FullSize[0x0120] - InheritedSize[0x0030])
	 */
	class UCameraAnimInst : public UObject
	{
	public:
		class UCameraAnim*                                         CamAnim;                                                 // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInterpGroupInst*                                    InterpGroupInst;                                         // 0x0038(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_G7BU[0x18];                                  // 0x0040(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayRate;                                                // 0x0058(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_83I2[0x14];                                  // 0x005C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInterpTrackMove*                                    MoveTrack;                                               // 0x0070(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInterpTrackInstMove*                                MoveInst;                                                // 0x0078(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECameraShakePlaySpace                                      PlaySpace;                                               // 0x0080(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8CFV[0x9F];                                  // 0x0081(0x009F) MISSED OFFSET (PADDING)

	public:
		void Stop(bool bImmediate);
		void SetScale(float NewDuration);
		void SetDuration(float NewDuration);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CameraBlockingVolume
	 * Size -> 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
	 */
	class ACameraBlockingVolume : public AVolume
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CameraModifier
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UCameraModifier : public UObject
	{
	public:
		unsigned char                                              bDebug : 1;                                              // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bExclusive : 1;                                          // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9DO9[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Priority;                                                // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GS4A[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerCameraManager*                                CameraOwner;                                             // 0x0038(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      AlphaInTime;                                             // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      AlphaOutTime;                                            // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      alpha;                                                   // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_UX13[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)

	public:
		bool IsDisabled();
		class AActor* GetViewTarget();
		void EnableModifier();
		void DisableModifier(bool bImmediate);
		void BlueprintModifyPostProcess(float DeltaTime, float* PostProcessBlendWeight, struct FPostProcessSettings* PostProcessSettings);
		void BlueprintModifyCamera(float DeltaTime, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, float FOV, struct FVector* NewViewLocation, struct FRotator* NewViewRotation, float* NewFOV);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CameraModifier_CameraShake
	 * Size -> 0x0068 (FullSize[0x00B8] - InheritedSize[0x0050])
	 */
	class UCameraModifier_CameraShake : public UCameraModifier
	{
	public:
		TArray<struct FActiveCameraShakeInfo>                      ActiveShakes;                                            // 0x0050(0x0010) ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		TMap<class UClass*, struct FPooledCameraShakes>            ExpiredPooledShakesMap;                                  // 0x0060(0x0050) Protected, NativeAccessSpecifierProtected
		float                                                      SplitScreenShakeScale;                                   // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_7VX7[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CameraShakeSourceActor
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class ACameraShakeSourceActor : public AActor
	{
	public:
		class UCameraShakeSourceComponent*                         CameraShakeSourceComponent;                              // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CameraShakeSourceComponent
	 * Size -> 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
	 */
	class UCameraShakeSourceComponent : public USceneComponent
	{
	public:
		float                                                      InnerAttenuationRadius;                                  // 0x021C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OuterAttenuationRadius;                                  // 0x0220(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FIZ7[0x4];                                   // 0x0224(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              CameraShake;                                             // 0x0228(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoStart;                                              // 0x0230(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XUXX[0xF];                                   // 0x0231(0x000F) MISSED OFFSET (PADDING)

	public:
		void StopAllCameraShakesOfType(class UClass* InCameraShake, bool bImmediately);
		void StopAllCameraShakes(bool bImmediately);
		void StartCameraShake(class UClass* InCameraShake, float Scale, ECameraShakePlaySpace PlaySpace, const struct FRotator& UserPlaySpaceRot);
		void Start();
		float GetAttenuationFactor(const struct FVector& Location);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Canvas
	 * Size -> 0x02A0 (FullSize[0x02D0] - InheritedSize[0x0030])
	 */
	class UCanvas : public UObject
	{
	public:
		float                                                      OrgX;                                                    // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OrgY;                                                    // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClipX;                                                   // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClipY;                                                   // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              DrawColor;                                               // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCenterX : 1;                                            // 0x0044(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCenterY : 1;                                            // 0x0044(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNoSmooth : 1;                                           // 0x0044(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZG8R[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SizeX;                                                   // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SizeY;                                                   // 0x004C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPlane                                              ColorModulate;                                           // 0x0050(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          DefaultTexture;                                          // 0x0060(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          GradientTexture0;                                        // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReporterGraph*                                      ReporterGraph;                                           // 0x0070(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GHG0[0x258];                                 // 0x0078(0x0258) MISSED OFFSET (PADDING)

	public:
		struct FVector2D K2_TextSize(class UFont* RenderFont, const class FString& RenderText, const struct FVector2D& Scale);
		struct FVector2D K2_StrLen(class UFont* RenderFont, const class FString& RenderText);
		struct FVector K2_Project(const struct FVector& WorldLocation);
		void K2_DrawTriangle(class UTexture* RenderTexture, TArray<struct FCanvasUVTri> Triangles);
		void K2_DrawTexture(class UTexture* RenderTexture, const struct FVector2D& ScreenPosition, const struct FVector2D& ScreenSize, const struct FVector2D& CoordinatePosition, const struct FVector2D& CoordinateSize, const struct FLinearColor& RenderColor, EBlendMode BlendMode, float Rotation, const struct FVector2D& PivotPoint);
		void K2_DrawText(class UFont* RenderFont, const class FString& RenderText, const struct FVector2D& ScreenPosition, const struct FVector2D& Scale, const struct FLinearColor& RenderColor, float Kerning, const struct FLinearColor& ShadowColor, const struct FVector2D& ShadowOffset, bool bCentreX, bool bCentreY, bool bOutlined, const struct FLinearColor& OutlineColor);
		void K2_DrawPolygon(class UTexture* RenderTexture, const struct FVector2D& ScreenPosition, const struct FVector2D& Radius, int32_t NumberOfSides, const struct FLinearColor& RenderColor);
		void K2_DrawMaterialTriangle(class UMaterialInterface* RenderMaterial, TArray<struct FCanvasUVTri> Triangles);
		void K2_DrawMaterial(class UMaterialInterface* RenderMaterial, const struct FVector2D& ScreenPosition, const struct FVector2D& ScreenSize, const struct FVector2D& CoordinatePosition, const struct FVector2D& CoordinateSize, float Rotation, const struct FVector2D& PivotPoint);
		void K2_DrawLine(const struct FVector2D& ScreenPositionA, const struct FVector2D& ScreenPositionB, float Thickness, const struct FLinearColor& RenderColor);
		void K2_DrawBox(const struct FVector2D& ScreenPosition, const struct FVector2D& ScreenSize, float Thickness, const struct FLinearColor& RenderColor);
		void K2_DrawBorder(class UTexture* BorderTexture, class UTexture* BackgroundTexture, class UTexture* LeftBorderTexture, class UTexture* RightBorderTexture, class UTexture* TopBorderTexture, class UTexture* BottomBorderTexture, const struct FVector2D& ScreenPosition, const struct FVector2D& ScreenSize, const struct FVector2D& CoordinatePosition, const struct FVector2D& CoordinateSize, const struct FLinearColor& RenderColor, const struct FVector2D& BorderScale, const struct FVector2D& BackgroundScale, float Rotation, const struct FVector2D& PivotPoint, const struct FVector2D& CornerSize);
		void K2_Deproject(const struct FVector2D& ScreenPosition, struct FVector* WorldOrigin, struct FVector* WorldDirection);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TextureRenderTarget
	 * Size -> 0x0000 (FullSize[0x0180] - InheritedSize[0x0180])
	 */
	class UTextureRenderTarget : public UTexture
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TextureRenderTarget2D
	 * Size -> 0x0030 (FullSize[0x01B0] - InheritedSize[0x0180])
	 */
	class UTextureRenderTarget2D : public UTextureRenderTarget
	{
	public:
		int32_t                                                    SizeX;                                                   // 0x0180(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SizeY;                                                   // 0x0184(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        ClearColor;                                              // 0x0188(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETextureAddress                                            AddressX;                                                // 0x0198(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETextureAddress                                            AddressY;                                                // 0x0199(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceLinearGamma : 1;                                   // 0x019A(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHDR : 1;                                                // 0x019A(0x0001) BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bGPUSharedFlag : 1;                                      // 0x019A(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETextureRenderTargetFormat                                 RenderTargetFormat;                                      // 0x019B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAutoGenerateMips : 1;                                   // 0x019C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETextureFilter                                             MipsSamplerFilter;                                       // 0x019D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETextureAddress                                            MipsAddressU;                                            // 0x019E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETextureAddress                                            MipsAddressV;                                            // 0x019F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPixelFormat                                               OverrideFormat;                                          // 0x01A0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_04LJ[0xF];                                   // 0x01A1(0x000F) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CanvasRenderTarget2D
	 * Size -> 0x0020 (FullSize[0x01D0] - InheritedSize[0x01B0])
	 */
	class UCanvasRenderTarget2D : public UTextureRenderTarget2D
	{
	public:
		class FScriptMulticastDelegate                             OnCanvasRenderTargetUpdate;                              // 0x01A8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UWorld>                               World;                                                   // 0x01B8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShouldClearRenderTargetOnReceiveUpdate;                 // 0x01C0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_G4GM[0xF];                                   // 0x01C1(0x000F) MISSED OFFSET (PADDING)

	public:
		void UpdateResource();
		void ReceiveUpdate(class UCanvas* Canvas, int32_t Width, int32_t Height);
		void GetSize(int32_t* Width, int32_t* Height);
		class UCanvasRenderTarget2D* STATIC_CreateCanvasRenderTarget2D(class UObject* WorldContextObject, class UClass* CanvasRenderTarget2DClass, int32_t Width, int32_t Height);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CheatManagerExtension
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UCheatManagerExtension : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CheckBoxStyleAsset
	 * Size -> 0x05E0 (FullSize[0x0610] - InheritedSize[0x0030])
	 */
	class UCheckBoxStyleAsset : public UObject
	{
	public:
		struct FCheckBoxStyle                                      CheckBoxStyle;                                           // 0x0030(0x05E0) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ChildActorComponent
	 * Size -> 0x0050 (FullSize[0x0270] - InheritedSize[0x0220])
	 */
	class UChildActorComponent : public USceneComponent
	{
	public:
		class UClass*                                              ChildActorClass;                                         // 0x0218(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AActor*                                              ChildActor;                                              // 0x0220(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, TextExportTransient, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AActor*                                              ChildActorTemplate;                                      // 0x0228(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bAlwaysRecreateOnRegister;                               // 0x0230(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_CLBW[0x7];                                   // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              ChildActorMimic;                                         // 0x0238(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HZZP[0x30];                                  // 0x0240(0x0030) MISSED OFFSET (PADDING)

	public:
		void SetChildActorClass(class UClass* InClass);
		class AActor* K2_GetChildActor();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ChildConnection
	 * Size -> 0x0008 (FullSize[0x1BD0] - InheritedSize[0x1BC8])
	 */
	class UChildConnection : public UNetConnection
	{
	public:
		class UNetConnection*                                      Parent;                                                  // 0x1BC8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PlatformInterfaceBase
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UPlatformInterfaceBase : public UObject
	{
	public:
		TArray<struct FDelegateArray>                              AllDelegates;                                            // 0x0030(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CloudStorageBase
	 * Size -> 0x0018 (FullSize[0x0058] - InheritedSize[0x0040])
	 */
	class UCloudStorageBase : public UPlatformInterfaceBase
	{
	public:
		TArray<class FString>                                      LocalCloudFiles;                                         // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bSuppressDelegateCalls : 1;                              // 0x0050(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZMBC[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CollisionProfile
	 * Size -> 0x0138 (FullSize[0x0180] - InheritedSize[0x0048])
	 */
	class UCollisionProfile : public UDeveloperSettings
	{
	public:
		TArray<struct FCollisionResponseTemplate>                  Profiles;                                                // 0x0048(0x0010) ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPrivate
		TArray<struct FCustomChannelSetup>                         DefaultChannelResponses;                                 // 0x0058(0x0010) ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPrivate
		TArray<struct FCustomProfile>                              EditProfiles;                                            // 0x0068(0x0010) ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPrivate
		TArray<struct FRedirector>                                 ProfileRedirects;                                        // 0x0078(0x0010) ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPrivate
		TArray<struct FRedirector>                                 CollisionChannelRedirects;                               // 0x0088(0x0010) ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_MWBQ[0xE8];                                  // 0x0098(0x00E8) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ComponentDelegateBinding
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UComponentDelegateBinding : public UDynamicBlueprintBinding
	{
	public:
		TArray<struct FBlueprintComponentDelegateBinding>          ComponentDelegateBindings;                               // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ActorComponentInstanceDataTransientOuter
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UActorComponentInstanceDataTransientOuter : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CurveTable
	 * Size -> 0x0078 (FullSize[0x00A8] - InheritedSize[0x0030])
	 */
	class UCurveTable : public UObject
	{
	public:
		unsigned char                                              UnknownData_AFDY[0x78];                                  // 0x0030(0x0078) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CompositeCurveTable
	 * Size -> 0x0028 (FullSize[0x00D0] - InheritedSize[0x00A8])
	 */
	class UCompositeCurveTable : public UCurveTable
	{
	public:
		TArray<class UCurveTable*>                                 ParentTables;                                            // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class UCurveTable*>                                 OldParentTables;                                         // 0x00B8(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_8NSA[0x8];                                   // 0x00C8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DataTable
	 * Size -> 0x0088 (FullSize[0x00B8] - InheritedSize[0x0030])
	 */
	class UDataTable : public UObject
	{
	public:
		class UScriptStruct*                                       RowStruct;                                               // 0x0030(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DI47[0x50];                                  // 0x0038(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bStripFromClientBuilds : 1;                              // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreExtraFields : 1;                                  // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreMissingFields : 1;                                // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KV8U[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ImportKeyField;                                          // 0x0090(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ASM4[0x18];                                  // 0x00A0(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CompositeDataTable
	 * Size -> 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
	 */
	class UCompositeDataTable : public UDataTable
	{
	public:
		TArray<class UDataTable*>                                  ParentTables;                                            // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class UDataTable*>                                  OldParentTables;                                         // 0x00C8(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_IWU9[0x8];                                   // 0x00D8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Console
	 * Size -> 0x0110 (FullSize[0x0140] - InheritedSize[0x0030])
	 */
	class UConsole : public UObject
	{
	public:
		unsigned char                                              UnknownData_Z6NY[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULocalPlayer*                                        ConsoleTargetPlayer;                                     // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          DefaultTexture_Black;                                    // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          DefaultTexture_White;                                    // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BWAH[0x18];                                  // 0x0058(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      HistoryBuffer;                                           // 0x0070(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6T6Y[0xC0];                                  // 0x0080(0x00C0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ControlChannel
	 * Size -> 0x0018 (FullSize[0x0090] - InheritedSize[0x0078])
	 */
	class UControlChannel : public UChannel
	{
	public:
		unsigned char                                              UnknownData_2B13[0x18];                                  // 0x0078(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.StreamingSettings
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UStreamingSettings : public UDeveloperSettings
	{
	public:
		unsigned char                                              AsyncLoadingThreadEnabled : 1;                           // 0x0048(0x0001) BIT_FIELD Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              WarnIfTimeLimitExceeded : 1;                             // 0x0048(0x0001) BIT_FIELD Edit, Config, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_2IEL[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeLimitExceededMultiplier;                             // 0x004C(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      TimeLimitExceededMinTime;                                // 0x0050(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    MinBulkDataSizeForAsyncLoading;                          // 0x0054(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UseBackgroundLevelStreaming : 1;                         // 0x0058(0x0001) BIT_FIELD Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              AsyncLoadingUseFullTimeLimit : 1;                        // 0x0058(0x0001) BIT_FIELD Edit, Config, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_G74S[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AsyncLoadingTimeLimit;                                   // 0x005C(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      PriorityAsyncLoadingExtraTime;                           // 0x0060(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LevelStreamingActorsUpdateTimeLimit;                     // 0x0064(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      PriorityLevelStreamingActorsUpdateExtraTime;             // 0x0068(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    LevelStreamingComponentsRegistrationGranularity;         // 0x006C(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LevelStreamingUnregisterComponentsTimeLimit;             // 0x0070(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    LevelStreamingComponentsUnregistrationGranularity;       // 0x0074(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              FlushStreamingOnExit : 1;                                // 0x0078(0x0001) BIT_FIELD Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              EventDrivenLoaderEnabled : 1;                            // 0x0078(0x0001) BIT_FIELD Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ZMR4[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.GarbageCollectionSettings
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UGarbageCollectionSettings : public UDeveloperSettings
	{
	public:
		float                                                      TimeBetweenPurgingPendingKillObjects;                    // 0x0048(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              FlushStreamingOnGC : 1;                                  // 0x004C(0x0001) BIT_FIELD Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              AllowParallelGC : 1;                                     // 0x004C(0x0001) BIT_FIELD Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              IncrementalBeginDestroyEnabled : 1;                      // 0x004C(0x0001) BIT_FIELD Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              MultithreadedDestructionEnabled : 1;                     // 0x004C(0x0001) BIT_FIELD Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              CreateGCClusters : 1;                                    // 0x004C(0x0001) BIT_FIELD Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              AssetClusteringEnabled : 1;                              // 0x004C(0x0001) BIT_FIELD Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              ActorClusteringEnabled : 1;                              // 0x004C(0x0001) BIT_FIELD Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              BlueprintClusteringEnabled : 1;                          // 0x004C(0x0001) BIT_FIELD Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UseDisregardForGCOnDedicatedServers : 1;                 // 0x004D(0x0001) BIT_FIELD Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_1B85[0x2];                                   // 0x004E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MinGCClusterSize;                                        // 0x0050(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    NumRetriesBeforeForcingGC;                               // 0x0054(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    MaxObjectsNotConsideredByGC;                             // 0x0058(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    SizeOfPermanentObjectPool;                               // 0x005C(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    MaxObjectsInGame;                                        // 0x0060(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    MaxObjectsInEditor;                                      // 0x0064(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CullDistanceVolume
	 * Size -> 0x0018 (FullSize[0x0280] - InheritedSize[0x0268])
	 */
	class ACullDistanceVolume : public AVolume
	{
	public:
		TArray<struct FCullDistanceSizePair>                       CullDistances;                                           // 0x0268(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bEnabled : 1;                                            // 0x0278(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUnbound : 1;                                            // 0x0278(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WHL7[0x7];                                   // 0x0279(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CurveBase
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UCurveBase : public UObject
	{
	public:
		unsigned char                                              UnknownData_XZWO[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)

	public:
		void GetValueRange(float* MinValue, float* MaxValue);
		void GetTimeRange(float* MinTime, float* MaxTime);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CurveEdPresetCurve
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UCurveEdPresetCurve : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CurveFloat
	 * Size -> 0x0088 (FullSize[0x00C0] - InheritedSize[0x0038])
	 */
	class UCurveFloat : public UCurveBase
	{
	public:
		struct FRichCurve                                          FloatCurve;                                              // 0x0038(0x0080) NativeAccessSpecifierPublic
		bool                                                       bIsEventCurve;                                           // 0x00B8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MWQ0[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (PADDING)

	public:
		float GetFloatValue(float InTime);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CurveLinearColor
	 * Size -> 0x0220 (FullSize[0x0258] - InheritedSize[0x0038])
	 */
	class UCurveLinearColor : public UCurveBase
	{
	public:
		struct FRichCurve                                          FloatCurves[0x4];                                        // 0x0038(0x0200) NativeAccessSpecifierPublic
		float                                                      AdjustHue;                                               // 0x0238(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdjustSaturation;                                        // 0x023C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdjustBrightness;                                        // 0x0240(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdjustBrightnessCurve;                                   // 0x0244(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdjustVibrance;                                          // 0x0248(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdjustMinAlpha;                                          // 0x024C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdjustMaxAlpha;                                          // 0x0250(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WE8Q[0x4];                                   // 0x0254(0x0004) MISSED OFFSET (PADDING)

	public:
		struct FLinearColor GetUnadjustedLinearColorValue(float InTime);
		struct FLinearColor GetLinearColorValue(float InTime);
		struct FLinearColor GetClampedLinearColorValue(float InTime);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Texture2D
	 * Size -> 0x0040 (FullSize[0x01C0] - InheritedSize[0x0180])
	 */
	class UTexture2D : public UTexture
	{
	public:
		int32_t                                                    FirstResourceMemMip;                                     // 0x017C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTemporarilyDisableStreaming : 1;                        // 0x0180(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		ETextureAddress                                            AddressX;                                                // 0x0181(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETextureAddress                                            AddressY;                                                // 0x0182(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ETYK[0x1];                                   // 0x0183(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FIntPoint                                           ImportedSize;                                            // 0x0184(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8H0W[0x14];                                  // 0x018C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bIsUsingDistanceField : 1;                               // 0x01A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bComputeInnerDistance : 1;                               // 0x01A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SZ9V[0x7];                                   // 0x01A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          DistanceField;                                           // 0x01A8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UseChannel;                                              // 0x01B0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5WY8[0xF];                                   // 0x01B1(0x000F) MISSED OFFSET (PADDING)

	public:
		class UTexture2D* GetDistanceField();
		int32_t Blueprint_GetSizeY();
		int32_t Blueprint_GetSizeX();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CurveLinearColorAtlas
	 * Size -> 0x0020 (FullSize[0x01E0] - InheritedSize[0x01C0])
	 */
	class UCurveLinearColorAtlas : public UTexture2D
	{
	public:
		uint32_t                                                   TextureHeight;                                           // 0x01C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GFTE[0x4];                                   // 0x01C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UCurveLinearColor*>                           GradientCurves;                                          // 0x01C8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2IAF[0x8];                                   // 0x01D8(0x0008) MISSED OFFSET (PADDING)

	public:
		bool GetCurvePosition(class UCurveLinearColor* InCurve, float* position);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CurveSourceInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UCurveSourceInterface : public UInterface
	{
	public:
		float GetCurveValue(const class FName& CurveName);
		void GetCurves(TArray<struct FNamedCurveValue>* OutValues);
		class FName GetBindingName();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.CurveVector
	 * Size -> 0x0180 (FullSize[0x01B8] - InheritedSize[0x0038])
	 */
	class UCurveVector : public UCurveBase
	{
	public:
		struct FRichCurve                                          FloatCurves[0x3];                                        // 0x0038(0x0180) NativeAccessSpecifierPublic

	public:
		struct FVector GetVectorValue(float InTime);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DamageType
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UDamageType : public UObject
	{
	public:
		unsigned char                                              bCausedByWorld : 1;                                      // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bScaleMomentumByMass : 1;                                // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRadialDamageVelChange : 1;                              // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OV57[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DamageImpulse;                                           // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DestructibleImpulse;                                     // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DestructibleDamageSpreadScale;                           // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageFalloff;                                           // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0WTZ[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DataDrivenCVarEngineSubsystem
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UDataDrivenCVarEngineSubsystem : public UEngineSubsystem
	{
	public:
		class FScriptMulticastDelegate                             OnDataDrivenCVarDelegate;                                // 0x0038(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DataDrivenConsoleVariableSettings
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UDataDrivenConsoleVariableSettings : public UDeveloperSettings
	{
	public:
		unsigned char                                              UnknownData_VHW3[0x18];                                  // 0x0048(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FDataDrivenConsoleVariable>                  CVarsArray;                                              // 0x0060(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5QIH[0x10];                                  // 0x0070(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DataTableFunctionLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDataTableFunctionLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_GetDataTableRowNames(class UDataTable* Table, TArray<class FName>* OutRowNames);
		bool STATIC_GetDataTableRowFromName(class UDataTable* Table, const class FName& RowName, struct FTableRowBase* OutRow);
		TArray<class FString> STATIC_GetDataTableColumnAsString(class UDataTable* DataTable, const class FName& PropertyName);
		void STATIC_EvaluateCurveTableRow(class UCurveTable* CurveTable, const class FName& RowName, float InXY, EEvaluateCurveTableResult* OutResult, float* OutXY, const class FString& ContextString);
		bool STATIC_DoesDataTableRowExist(class UDataTable* Table, const class FName& RowName);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DebugCameraControllerSettings
	 * Size -> 0x0010 (FullSize[0x0058] - InheritedSize[0x0048])
	 */
	class UDebugCameraControllerSettings : public UDeveloperSettings
	{
	public:
		TArray<struct FDebugCameraControllerSettingsViewModeIndex> CycleViewModes;                                          // 0x0048(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DebugCameraHUD
	 * Size -> 0x0000 (FullSize[0x0320] - InheritedSize[0x0320])
	 */
	class ADebugCameraHUD : public AHUD
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DebugDrawService
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDebugDrawService : public UBlueprintFunctionLibrary
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DecalActor
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class ADecalActor : public AActor
	{
	public:
		class UDecalComponent*                                     Decal;                                                   // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SetDecalMaterial(class UMaterialInterface* NewDecalMaterial);
		class UMaterialInterface* GetDecalMaterial();
		class UMaterialInstanceDynamic* CreateDynamicMaterialInstance();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PhysicsVolume
	 * Size -> 0x0010 (FullSize[0x0278] - InheritedSize[0x0268])
	 */
	class APhysicsVolume : public AVolume
	{
	public:
		float                                                      TerminalVelocity;                                        // 0x0268(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x026C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FluidFriction;                                           // 0x0270(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bWaterVolume : 1;                                        // 0x0274(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPhysicsOnContact : 1;                                   // 0x0274(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CN5V[0x3];                                   // 0x0275(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DefaultPhysicsVolume
	 * Size -> 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
	 */
	class ADefaultPhysicsVolume : public APhysicsVolume
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DemoNetConnection
	 * Size -> 0x0070 (FullSize[0x1C38] - InheritedSize[0x1BC8])
	 */
	class UDemoNetConnection : public UNetConnection
	{
	public:
		unsigned char                                              UnknownData_PO6A[0x70];                                  // 0x1BC8(0x0070) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DemoNetDriver
	 * Size -> 0x0B78 (FullSize[0x12F8] - InheritedSize[0x0780])
	 */
	class UDemoNetDriver : public UNetDriver
	{
	public:
		unsigned char                                              UnknownData_LJ9W[0xF8];                                  // 0x0780(0x00F8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, struct FRollbackNetStartupActorInfo>   RollbackNetStartupActors;                                // 0x0878(0x0050) Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FFD3[0x15C];                                 // 0x08C8(0x015C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CheckpointSaveMaxMSPerFrame;                             // 0x0A24(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_D2DL[0x20];                                  // 0x0A28(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMulticastRecordOptions>                     MulticastRecordOptions;                                  // 0x0A48(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPrivate
		bool                                                       bIsLocalReplay;                                          // 0x0A58(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M2OV[0x7];                                   // 0x0A59(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class APlayerController*>                           SpectatorControllers;                                    // 0x0A60(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4ZD0[0x888];                                 // 0x0A70(0x0888) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PendingNetGame
	 * Size -> 0x0098 (FullSize[0x00C8] - InheritedSize[0x0030])
	 */
	class UPendingNetGame : public UObject
	{
	public:
		unsigned char                                              UnknownData_PX1V[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UNetDriver*                                          NetDriver;                                               // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDemoNetDriver*                                      DemoNetDriver;                                           // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VLRW[0x80];                                  // 0x0048(0x0080) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DemoPendingNetGame
	 * Size -> 0x0000 (FullSize[0x00C8] - InheritedSize[0x00C8])
	 */
	class UDemoPendingNetGame : public UPendingNetGame
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DestructibleInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDestructibleInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TextureLODSettings
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UTextureLODSettings : public UObject
	{
	public:
		TArray<struct FTextureLODGroup>                            TextureLODGroups;                                        // 0x0030(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DeviceProfile
	 * Size -> 0x0070 (FullSize[0x00B0] - InheritedSize[0x0040])
	 */
	class UDeviceProfile : public UTextureLODSettings
	{
	public:
		class FString                                              DeviceType;                                              // 0x0040(0x0010) Edit, ZeroConstructor, Config, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BaseProfileName;                                         // 0x0050(0x0010) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             Parent;                                                  // 0x0060(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IGEW[0x28];                                  // 0x0068(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      CVars;                                                   // 0x0090(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D9TL[0x10];                                  // 0x00A0(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DeviceProfileFragment
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UDeviceProfileFragment : public UObject
	{
	public:
		unsigned char                                              UnknownData_L8BI[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DeviceProfileManager
	 * Size -> 0x00A0 (FullSize[0x00D0] - InheritedSize[0x0030])
	 */
	class UDeviceProfileManager : public UObject
	{
	public:
		TArray<class UObject*>                                     Profiles;                                                // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MOYK[0x90];                                  // 0x0040(0x0090) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DialogueSoundWaveProxy
	 * Size -> 0x0018 (FullSize[0x0190] - InheritedSize[0x0178])
	 */
	class UDialogueSoundWaveProxy : public USoundBase
	{
	public:
		unsigned char                                              UnknownData_RM4E[0x18];                                  // 0x0178(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DialogueVoice
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UDialogueVoice : public UObject
	{
	public:
		EGrammaticalGender                                         Gender;                                                  // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGrammaticalNumber                                         Plurality;                                               // 0x0031(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VGPP[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               LocalizationGUID;                                        // 0x0034(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R4PR[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DialogueWave
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	class UDialogueWave : public UObject
	{
	public:
		unsigned char                                              bMature : 1;                                             // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SubtitleOverride : 1;                          // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OD05[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SpokenText;                                              // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SubtitleOverride;                                        // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FDialogueContextMapping>                     ContextMappings;                                         // 0x0058(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FGuid                                               LocalizationGUID;                                        // 0x0068(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Light
	 * Size -> 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
	 */
	class ALight : public AActor
	{
	public:
		class ULightComponent*                                     LightComponent;                                          // 0x0230(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bEnabled : 1;                                            // 0x0238(0x0001) BIT_FIELD Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0WA9[0x7];                                   // 0x0239(0x0007) MISSED OFFSET (PADDING)

	public:
		void ToggleEnabled();
		void SetLightFunctionScale(const struct FVector& NewLightFunctionScale);
		void SetLightFunctionMaterial(class UMaterialInterface* NewLightFunctionMaterial);
		void SetLightFunctionFadeDistance(float NewLightFunctionFadeDistance);
		void SetLightColor(const struct FLinearColor& NewLightColor);
		void SetEnabled(bool bSetEnabled);
		void SetCastShadows(bool bNewValue);
		void SetBrightness(float NewBrightness);
		void SetAffectTranslucentLighting(bool bNewValue);
		void OnRep_bEnabled();
		bool IsEnabled();
		struct FLinearColor GetLightColor();
		float GetBrightness();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DirectionalLight
	 * Size -> 0x0000 (FullSize[0x0240] - InheritedSize[0x0240])
	 */
	class ADirectionalLight : public ALight
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DirectionalLightComponent
	 * Size -> 0x00C0 (FullSize[0x0460] - InheritedSize[0x03A0])
	 */
	class UDirectionalLightComponent : public ULightComponent
	{
	public:
		float                                                      OcclusionMaskDarkness;                                   // 0x03A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OcclusionDepthRange;                                     // 0x03A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LightShaftOverrideDirection;                             // 0x03A8(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WholeSceneDynamicShadowRadius;                           // 0x03B4(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DynamicShadowDistanceMovableLight;                       // 0x03B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DynamicShadowDistanceStationaryLight;                    // 0x03BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DynamicShadowCascades;                                   // 0x03C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CascadeDistributionExponent;                             // 0x03C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CascadeTransitionFraction;                               // 0x03C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShadowDistanceFadeoutFraction;                           // 0x03CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseInsetShadowsForMovableObjects : 1;                   // 0x03D0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_64D3[0x3];                                   // 0x03D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FarShadowCascadeCount;                                   // 0x03D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FarShadowDistance;                                       // 0x03D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceFieldShadowDistance;                             // 0x03DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightSourceAngle;                                        // 0x03E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightSourceSoftAngle;                                    // 0x03E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShadowSourceAngleFactor;                                 // 0x03E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TraceDistance;                                           // 0x03EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedAsAtmosphereSunLight : 1;                           // 0x03F0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5OBH[0x3];                                   // 0x03F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AtmosphereSunLightIndex;                                 // 0x03F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        AtmosphereSunDiskColorScale;                             // 0x03F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPerPixelAtmosphereTransmittance : 1;                    // 0x0408(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastShadowsOnClouds : 1;                                // 0x0408(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastShadowsOnAtmosphere : 1;                            // 0x0408(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastCloudShadows : 1;                                   // 0x0408(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L3N4[0x3];                                   // 0x0409(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CloudShadowStrength;                                     // 0x040C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CloudShadowOnAtmosphereStrength;                         // 0x0410(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CloudShadowOnSurfaceStrength;                            // 0x0414(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CloudShadowDepthBias;                                    // 0x0418(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CloudShadowExtent;                                       // 0x041C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CloudShadowMapResolutionScale;                           // 0x0420(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CloudShadowRaySampleCountScale;                          // 0x0424(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        CloudScatteredLuminanceScale;                            // 0x0428(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLightmassDirectionalLightSettings                  LightmassSettings;                                       // 0x0438(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bCastModulatedShadows : 1;                               // 0x0448(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PCID[0x3];                                   // 0x0449(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FColor                                              ModulatedShadowColor;                                    // 0x044C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShadowAmount;                                            // 0x0450(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OCMZ[0xC];                                   // 0x0454(0x000C) MISSED OFFSET (PADDING)

	public:
		void SetShadowDistanceFadeoutFraction(float NewValue);
		void SetShadowAmount(float NewValue);
		void SetOcclusionMaskDarkness(float NewValue);
		void SetLightShaftOverrideDirection(const struct FVector& NewValue);
		void SetEnableLightShaftOcclusion(bool bNewValue);
		void SetDynamicShadowDistanceStationaryLight(float NewValue);
		void SetDynamicShadowDistanceMovableLight(float NewValue);
		void SetDynamicShadowCascades(int32_t NewValue);
		void SetCascadeTransitionFraction(float NewValue);
		void SetCascadeDistributionExponent(float NewValue);
		void SetAtmosphereSunLightIndex(int32_t NewValue);
		void SetAtmosphereSunLight(bool bNewValue);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Distribution
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UDistribution : public UObject
	{
	public:
		unsigned char                                              UnknownData_URUG[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DistributionFloat
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UDistributionFloat : public UDistribution
	{
	public:
		unsigned char                                              bCanBeBaked : 1;                                         // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SE5Z : 1;                                    // 0x0038(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bBakedDataSuccesfully : 1;                               // 0x0038(0x0001) BIT_FIELD NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_10OD[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DistributionFloatConstant
	 * Size -> 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
	 */
	class UDistributionFloatConstant : public UDistributionFloat
	{
	public:
		float                                                      Constant;                                                // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F9PH[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DistributionFloatConstantCurve
	 * Size -> 0x0018 (FullSize[0x0058] - InheritedSize[0x0040])
	 */
	class UDistributionFloatConstantCurve : public UDistributionFloat
	{
	public:
		struct FInterpCurveFloat                                   ConstantCurve;                                           // 0x0040(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DistributionFloatParameterBase
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UDistributionFloatParameterBase : public UDistributionFloatConstant
	{
	public:
		class FName                                                ParameterName;                                           // 0x0048(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinInput;                                                // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxInput;                                                // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinOutput;                                               // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxOutput;                                               // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDistributionParamMode                                     ParamMode;                                               // 0x0064(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_45IA[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DistributionFloatParticleParameter
	 * Size -> 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
	 */
	class UDistributionFloatParticleParameter : public UDistributionFloatParameterBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DistributionFloatUniform
	 * Size -> 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
	 */
	class UDistributionFloatUniform : public UDistributionFloat
	{
	public:
		float                                                      Min;                                                     // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Max;                                                     // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DistributionFloatUniformCurve
	 * Size -> 0x0018 (FullSize[0x0058] - InheritedSize[0x0040])
	 */
	class UDistributionFloatUniformCurve : public UDistributionFloat
	{
	public:
		struct FInterpCurveVector2D                                ConstantCurve;                                           // 0x0040(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DistributionVector
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UDistributionVector : public UDistribution
	{
	public:
		unsigned char                                              bCanBeBaked : 1;                                         // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsDirty : 1;                                            // 0x0038(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bBakedDataSuccesfully : 1;                               // 0x0038(0x0001) BIT_FIELD NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_DSQL[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DistributionVectorConstant
	 * Size -> 0x0018 (FullSize[0x0058] - InheritedSize[0x0040])
	 */
	class UDistributionVectorConstant : public UDistributionVector
	{
	public:
		struct FVector                                             Constant;                                                // 0x0040(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLockAxes : 1;                                           // 0x004C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HHYS[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EDistributionVectorLockFlags                               LockedAxes;                                              // 0x0050(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G13C[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DistributionVectorConstantCurve
	 * Size -> 0x0020 (FullSize[0x0060] - InheritedSize[0x0040])
	 */
	class UDistributionVectorConstantCurve : public UDistributionVector
	{
	public:
		struct FInterpCurveVector                                  ConstantCurve;                                           // 0x0040(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLockAxes : 1;                                           // 0x0058(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XS6X[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EDistributionVectorLockFlags                               LockedAxes;                                              // 0x005C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A4T2[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DistributionVectorParameterBase
	 * Size -> 0x0040 (FullSize[0x0098] - InheritedSize[0x0058])
	 */
	class UDistributionVectorParameterBase : public UDistributionVectorConstant
	{
	public:
		class FName                                                ParameterName;                                           // 0x0058(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MinInput;                                                // 0x0064(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MaxInput;                                                // 0x0070(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MinOutput;                                               // 0x007C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MaxOutput;                                               // 0x0088(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDistributionParamMode                                     ParamModes[0x3];                                         // 0x0094(0x0003) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7ISG[0x1];                                   // 0x0097(0x0001) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DistributionVectorParticleParameter
	 * Size -> 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
	 */
	class UDistributionVectorParticleParameter : public UDistributionVectorParameterBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DistributionVectorUniform
	 * Size -> 0x0028 (FullSize[0x0068] - InheritedSize[0x0040])
	 */
	class UDistributionVectorUniform : public UDistributionVector
	{
	public:
		struct FVector                                             Max;                                                     // 0x0040(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Min;                                                     // 0x004C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLockAxes : 1;                                           // 0x0058(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YJFY[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EDistributionVectorLockFlags                               LockedAxes;                                              // 0x005C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDistributionVectorMirrorFlags                             MirrorFlags[0x3];                                        // 0x005D(0x0003) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseExtremes : 1;                                        // 0x0060(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J9TK[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DistributionVectorUniformCurve
	 * Size -> 0x0028 (FullSize[0x0068] - InheritedSize[0x0040])
	 */
	class UDistributionVectorUniformCurve : public UDistributionVector
	{
	public:
		struct FInterpCurveTwoVectors                              ConstantCurve;                                           // 0x0040(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLockAxes1 : 1;                                          // 0x0058(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLockAxes2 : 1;                                          // 0x0058(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EEMO[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EDistributionVectorLockFlags                               LockedAxes[0x2];                                         // 0x005C(0x0002) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDistributionVectorMirrorFlags                             MirrorFlags[0x3];                                        // 0x005E(0x0003) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0ICY[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bUseExtremes : 1;                                        // 0x0064(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X9NZ[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DocumentationActor
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class ADocumentationActor : public AActor
	{
	public:
		unsigned char                                              UnknownData_F8J5[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DPICustomScalingRule
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDPICustomScalingRule : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DrawFrustumComponent
	 * Size -> 0x0020 (FullSize[0x04A0] - InheritedSize[0x0480])
	 */
	class UDrawFrustumComponent : public UPrimitiveComponent
	{
	public:
		struct FColor                                              FrustumColor;                                            // 0x0480(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrustumAngle;                                            // 0x0484(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrustumAspectRatio;                                      // 0x0488(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrustumStartDist;                                        // 0x048C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrustumEndDist;                                          // 0x0490(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DTUC[0x4];                                   // 0x0494(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                            Texture;                                                 // 0x0498(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.DrawSphereComponent
	 * Size -> 0x0000 (FullSize[0x04A0] - InheritedSize[0x04A0])
	 */
	class UDrawSphereComponent : public USphereComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.EdGraph
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	class UEdGraph : public UObject
	{
	public:
		class UClass*                                              Schema;                                                  // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UEdGraphNode*>                                Nodes;                                                   // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bEditable : 1;                                           // 0x0048(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAllowDeletion : 1;                                      // 0x0048(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAllowRenaming : 1;                                      // 0x0048(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CK5Q[0x1F];                                  // 0x0049(0x001F) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.GraphNodeContextMenuContext
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class UGraphNodeContextMenuContext : public UObject
	{
	public:
		class UBlueprint*                                          Blueprint;                                               // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UEdGraph*                                            Graph;                                                   // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UEdGraphNode*                                        Node;                                                    // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_54JX[0x8];                                   // 0x0048(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsDebugging;                                            // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9EDQ[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.EdGraphNode
	 * Size -> 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
	 */
	class UEdGraphNode : public UObject
	{
	public:
		unsigned char                                              UnknownData_E4P6[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UEdGraphPin_Deprecated*>                      DeprecatedPins;                                          // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    NodePosX;                                                // 0x0050(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NodePosY;                                                // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NodeWidth;                                               // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NodeHeight;                                              // 0x005C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENodeAdvancedPins                                          AdvancedPinDisplay;                                      // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENodeEnabledState                                          EnabledState;                                            // 0x0061(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_KOPM[0x1];                                   // 0x0062(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              UnknownData_C47K : 1;                                    // 0x0063(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bDisplayAsDisabled : 1;                                  // 0x0063(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bUserSetEnabledState : 1;                                // 0x0063(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TQ37 : 1;                                    // 0x0063(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bIsNodeEnabled : 1;                                      // 0x0063(0x0001) BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SVMQ : 1;                                    // 0x0063(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bHasCompilerMessage : 1;                                 // 0x0063(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CTDY[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              NodeComment;                                             // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ErrorType;                                               // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AE6Q[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ErrorMsg;                                                // 0x0080(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               NodeGuid;                                                // 0x0090(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.EdGraphNode_Documentation
	 * Size -> 0x0020 (FullSize[0x00C0] - InheritedSize[0x00A0])
	 */
	class UEdGraphNode_Documentation : public UEdGraphNode
	{
	public:
		class FString                                              Link;                                                    // 0x00A0(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Excerpt;                                                 // 0x00B0(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.EdGraphPin_Deprecated
	 * Size -> 0x0108 (FullSize[0x0138] - InheritedSize[0x0030])
	 */
	class UEdGraphPin_Deprecated : public UObject
	{
	public:
		class FString                                              PinName;                                                 // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PinToolTip;                                              // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEdGraphPinDirection                                       Direction;                                               // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7VTM[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FEdGraphPinType                                     PinType;                                                 // 0x0058(0x0070) NoDestructor, NativeAccessSpecifierPublic
		class FString                                              defaultValue;                                            // 0x00C8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AutogeneratedDefaultValue;                               // 0x00D8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             DefaultObject;                                           // 0x00E8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DefaultTextValue;                                        // 0x00F0(0x0018) NativeAccessSpecifierPublic
		TArray<class UEdGraphPin_Deprecated*>                      LinkedTo;                                                // 0x0108(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UEdGraphPin_Deprecated*>                      SubPins;                                                 // 0x0118(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class UEdGraphPin_Deprecated*                              ParentPin;                                               // 0x0128(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UEdGraphPin_Deprecated*                              ReferencePassThroughConnection;                          // 0x0130(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.EdGraphSchema
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UEdGraphSchema : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Emitter
	 * Size -> 0x0050 (FullSize[0x0280] - InheritedSize[0x0230])
	 */
	class AEmitter : public AActor
	{
	public:
		class UParticleSystemComponent*                            ParticleSystemComponent;                                 // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bDestroyOnSystemFinish : 1;                              // 0x0238(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPostUpdateTickGroup : 1;                                // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCurrentlyActive : 1;                                    // 0x0238(0x0001) BIT_FIELD Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S73K[0x7];                                   // 0x0239(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnParticleSpawn;                                         // 0x0240(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnParticleBurst;                                         // 0x0250(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnParticleDeath;                                         // 0x0260(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnParticleCollide;                                       // 0x0270(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		void ToggleActive();
		void SetVectorParameter(const class FName& ParameterName, const struct FVector& Param);
		void SetTemplate(class UParticleSystem* NewTemplate);
		void SetMaterialParameter(const class FName& ParameterName, class UMaterialInterface* Param);
		void SetFloatParameter(const class FName& ParameterName, float Param);
		void SetColorParameter(const class FName& ParameterName, const struct FLinearColor& Param);
		void SetActorParameter(const class FName& ParameterName, class AActor* Param);
		void OnRep_bCurrentlyActive();
		void OnParticleSystemFinished(class UParticleSystemComponent* FinishedComponent);
		bool IsActive();
		void Deactivate();
		void Activate();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.EmitterCameraLensEffectBase
	 * Size -> 0x0070 (FullSize[0x02F0] - InheritedSize[0x0280])
	 */
	class AEmitterCameraLensEffectBase : public AEmitter
	{
	public:
		class UParticleSystem*                                     PS_CameraEffect;                                         // 0x0280(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystem*                                     PS_CameraEffectNonExtremeContent;                        // 0x0288(0x0008) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class APlayerCameraManager*                                BaseCamera;                                              // 0x0290(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_O59J[0x8];                                   // 0x0298(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          RelativeTransform;                                       // 0x02A0(0x0030) Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		float                                                      BaseFOV;                                                 // 0x02D0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAllowMultipleInstances : 1;                             // 0x02D4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bResetWhenRetriggered : 1;                               // 0x02D4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GVFI[0x3];                                   // 0x02D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      EmittersToTreatAsSame;                                   // 0x02D8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic
		float                                                      DistFromCamera;                                          // 0x02E8(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DBKV[0x4];                                   // 0x02EC(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ViewModeUtils
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UViewModeUtils : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.EngineBaseTypes
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UEngineBaseTypes : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.EngineHandlerComponentFactory
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UEngineHandlerComponentFactory : public UHandlerComponentFactory
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LocalMessage
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class ULocalMessage : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.EngineMessage
	 * Size -> 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
	 */
	class UEngineMessage : public ULocalMessage
	{
	public:
		class FString                                              FailedPlaceMessage;                                      // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MaxedOutMessage;                                         // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EnteredMessage;                                          // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LeftMessage;                                             // 0x0060(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GlobalNameChange;                                        // 0x0070(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SpecEnteredMessage;                                      // 0x0080(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              NewPlayerMessage;                                        // 0x0090(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              NewSpecMessage;                                          // 0x00A0(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.EngineTypes
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UEngineTypes : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ExponentialHeightFog
	 * Size -> 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
	 */
	class AExponentialHeightFog : public AInfo
	{
	public:
		class UExponentialHeightFogComponent*                      Component;                                               // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bEnabled : 1;                                            // 0x0238(0x0001) BIT_FIELD Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZO2K[0x7];                                   // 0x0239(0x0007) MISSED OFFSET (PADDING)

	public:
		void OnRep_bEnabled();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ExponentialHeightFogComponent
	 * Size -> 0x00B0 (FullSize[0x02D0] - InheritedSize[0x0220])
	 */
	class UExponentialHeightFogComponent : public USceneComponent
	{
	public:
		float                                                      FogHeightFalloff;                                        // 0x021C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FExponentialHeightFogData                           SecondFogData;                                           // 0x0220(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FLinearColor                                        FogInscatteringColor;                                    // 0x022C(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_836M[0x4];                                   // 0x023C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTextureCube*                                        InscatteringColorCubemap;                                // 0x0240(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InscatteringColorCubemapAngle;                           // 0x0248(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        InscatteringTextureTint;                                 // 0x024C(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FullyDirectionalInscatteringColorDistance;               // 0x025C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NonDirectionalInscatteringColorDistance;                 // 0x0260(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DirectionalInscatteringExponent;                         // 0x0264(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DirectionalInscatteringStartDistance;                    // 0x0268(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        DirectionalInscatteringColor;                            // 0x026C(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FogMaxOpacity;                                           // 0x027C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartDistance;                                           // 0x0280(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FogCutoffDistance;                                       // 0x0284(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableVolumetricFog;                                    // 0x0288(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4ISA[0x3];                                   // 0x0289(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      VolumetricFogScatteringDistribution;                     // 0x028C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              VolumetricFogAlbedo;                                     // 0x0290(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        VolumetricFogEmissive;                                   // 0x0294(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VolumetricFogExtinctionScale;                            // 0x02A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VolumetricFogDistance;                                   // 0x02A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VolumetricFogStaticLightingScatteringIntensity;          // 0x02AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideLightColorsWithFogInscatteringColors;           // 0x02B0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QNOB[0x7];                                   // 0x02B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FHeightFogGradientEntry>                     FogGradient;                                             // 0x02B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Interp, NativeAccessSpecifierPublic
		float                                                      DistanceUntilFlatFog;                                    // 0x02C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceUntilNoFog;                                      // 0x02CC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetVolumetricFogScatteringDistribution(float NewValue);
		void SetVolumetricFogExtinctionScale(float NewValue);
		void SetVolumetricFogEmissive(const struct FLinearColor& NewValue);
		void SetVolumetricFogDistance(float NewValue);
		void SetVolumetricFogAlbedo(const struct FColor& NewValue);
		void SetVolumetricFog(bool bNewValue);
		void SetStartDistance(float value);
		void SetNonDirectionalInscatteringColorDistance(float value);
		void SetInscatteringTextureTint(const struct FLinearColor& value);
		void SetInscatteringColorCubemapAngle(float value);
		void SetInscatteringColorCubemap(class UTextureCube* value);
		void SetFullyDirectionalInscatteringColorDistance(float value);
		void SetFogMaxOpacity(float value);
		void SetFogInscatteringColor(const struct FLinearColor& value);
		void SetFogHeightFalloff(float value);
		void SetFogDensity(float value);
		void SetFogCutoffDistance(float value);
		void SetDirectionalInscatteringStartDistance(float value);
		void SetDirectionalInscatteringExponent(float value);
		void SetDirectionalInscatteringColor(const struct FLinearColor& value);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Exporter
	 * Size -> 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
	 */
	class UExporter : public UObject
	{
	public:
		class UClass*                                              SupportedClass;                                          // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             ExportRootScope;                                         // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      FormatExtension;                                         // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      FormatDescription;                                       // 0x0050(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    PreferredFormatIndex;                                    // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TextIndent;                                              // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bText : 1;                                               // 0x0068(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSelectedOnly : 1;                                       // 0x0068(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceFileOperations : 1;                                // 0x0068(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8MNG[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAssetExportTask*                                    ExportTask;                                              // 0x0070(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VP9F[0x8];                                   // 0x0078(0x0008) MISSED OFFSET (PADDING)

	public:
		bool ScriptRunAssetExportTask(class UAssetExportTask* Task);
		bool STATIC_RunAssetExportTasks(TArray<class UAssetExportTask*> ExportTasks);
		bool STATIC_RunAssetExportTask(class UAssetExportTask* Task);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.FloatingPawnMovement
	 * Size -> 0x0018 (FullSize[0x0160] - InheritedSize[0x0148])
	 */
	class UFloatingPawnMovement : public UPawnMovementComponent
	{
	public:
		float                                                      MaxSpeed;                                                // 0x0148(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Acceleration;                                            // 0x014C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Deceleration;                                            // 0x0150(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurningBoost;                                            // 0x0154(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPositionCorrected : 1;                                  // 0x0158(0x0001) BIT_FIELD Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_FS99[0x7];                                   // 0x0159(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Font
	 * Size -> 0x01B0 (FullSize[0x01E0] - InheritedSize[0x0030])
	 */
	class UFont : public UObject
	{
	public:
		unsigned char                                              UnknownData_8RBM[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EFontCacheType                                             FontCacheType;                                           // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WY3R[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FFontCharacter>                              Characters;                                              // 0x0040(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UTexture2D*>                                  Textures;                                                // 0x0050(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    IsRemapped;                                              // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EmScale;                                                 // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Ascent;                                                  // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Descent;                                                 // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Leading;                                                 // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Kerning;                                                 // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFontImportOptionsData                              ImportOptions;                                           // 0x0078(0x00B0) Edit, NativeAccessSpecifierPublic
		int32_t                                                    NumCharacters;                                           // 0x0128(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4XTJ[0x4];                                   // 0x012C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            MaxCharHeight;                                           // 0x0130(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		float                                                      ScalingFactor;                                           // 0x0140(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LegacyFontSize;                                          // 0x0144(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LegacyFontName;                                          // 0x0148(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U5HO[0x4];                                   // 0x0154(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCompositeFont                                      CompositeFont;                                           // 0x0158(0x0038) NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C6ZN[0x50];                                  // 0x0190(0x0050) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.FontFace
	 * Size -> 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
	 */
	class UFontFace : public UObject
	{
	public:
		unsigned char                                              UnknownData_67KT[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SourceFilename;                                          // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFontHinting                                               Hinting;                                                 // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFontLoadingPolicy                                         LoadingPolicy;                                           // 0x0049(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFontLayoutMethod                                          LayoutMethod;                                            // 0x004A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BBYS[0x15];                                  // 0x004B(0x0015) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.FontImportOptions
	 * Size -> 0x00B0 (FullSize[0x00E0] - InheritedSize[0x0030])
	 */
	class UFontImportOptions : public UObject
	{
	public:
		struct FFontImportOptionsData                              Data;                                                    // 0x0030(0x00B0) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ForceFeedbackAttenuation
	 * Size -> 0x00B0 (FullSize[0x00E0] - InheritedSize[0x0030])
	 */
	class UForceFeedbackAttenuation : public UObject
	{
	public:
		struct FForceFeedbackAttenuationSettings                   Attenuation;                                             // 0x0030(0x00B0) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ForceFeedbackComponent
	 * Size -> 0x00E0 (FullSize[0x0300] - InheritedSize[0x0220])
	 */
	class UForceFeedbackComponent : public USceneComponent
	{
	public:
		class UForceFeedbackEffect*                                ForceFeedbackEffect;                                     // 0x0218(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAutoDestroy : 1;                                        // 0x0220(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bStopWhenOwnerDestroyed : 1;                             // 0x0220(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLooping : 1;                                            // 0x0220(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreTimeDilation : 1;                                 // 0x0220(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideAttenuation : 1;                                // 0x0220(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YZCW[0x3];                                   // 0x0221(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IntensityMultiplier;                                     // 0x0224(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UForceFeedbackAttenuation*                           AttenuationSettings;                                     // 0x0228(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FForceFeedbackAttenuationSettings                   AttenuationOverrides;                                    // 0x0230(0x00B0) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnForceFeedbackFinished;                                 // 0x02E0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3U6X[0x10];                                  // 0x02F0(0x0010) MISSED OFFSET (PADDING)

	public:
		void Stop();
		void SetIntensityMultiplier(float NewIntensityMultiplier);
		void SetForceFeedbackEffect(class UForceFeedbackEffect* NewForceFeedbackEffect);
		void Play(float StartTime);
		bool BP_GetAttenuationSettingsToApply(struct FForceFeedbackAttenuationSettings* OutAttenuationSettings);
		void AdjustAttenuation(const struct FForceFeedbackAttenuationSettings& InAttenuationSettings);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ForceFeedbackEffect
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UForceFeedbackEffect : public UObject
	{
	public:
		TArray<struct FForceFeedbackChannelDetails>                ChannelDetails;                                          // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TBIM[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.GameNetworkManager
	 * Size -> 0x00B0 (FullSize[0x02E0] - InheritedSize[0x0230])
	 */
	class AGameNetworkManager : public AInfo
	{
	public:
		float                                                      BadPacketLossThreshold;                                  // 0x0230(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SeverePacketLossThreshold;                               // 0x0234(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BadPingThreshold;                                        // 0x0238(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SeverePingThreshold;                                     // 0x023C(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AdjustedNetSpeed;                                        // 0x0240(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastNetSpeedUpdateTime;                                  // 0x0244(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalNetBandwidth;                                       // 0x0248(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinDynamicBandwidth;                                     // 0x024C(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxDynamicBandwidth;                                     // 0x0250(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsStandbyCheckingEnabled : 1;                           // 0x0254(0x0001) BIT_FIELD Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHasStandbyCheatTriggered : 1;                           // 0x0254(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W2P3[0x3];                                   // 0x0255(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StandbyRxCheatTime;                                      // 0x0258(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StandbyTxCheatTime;                                      // 0x025C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PercentMissingForRxStandby;                              // 0x0260(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PercentMissingForTxStandby;                              // 0x0264(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PercentForBadPing;                                       // 0x0268(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JoinInProgressStandbyWaitTime;                           // 0x026C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoveRepSize;                                             // 0x0270(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MAXPOSITIONERRORSQUARED;                                 // 0x0274(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MAXNEARZEROVELOCITYSQUARED;                              // 0x0278(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CLIENTADJUSTUPDATECOST;                                  // 0x027C(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MAXCLIENTUPDATEINTERVAL;                                 // 0x0280(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxClientForcedUpdateDuration;                           // 0x0284(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ServerForcedUpdateHitchThreshold;                        // 0x0288(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ServerForcedUpdateHitchCooldown;                         // 0x028C(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxMoveDeltaTime;                                        // 0x0290(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxClientSmoothingDeltaTime;                             // 0x0294(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientNetSendMoveDeltaTime;                              // 0x0298(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientNetSendMoveDeltaTimeThrottled;                     // 0x029C(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientNetSendMoveDeltaTimeStationary;                    // 0x02A0(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClientNetSendMoveThrottleAtNetSpeed;                     // 0x02A4(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClientNetSendMoveThrottleOverPlayerCount;                // 0x02A8(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ClientAuthorativePosition;                               // 0x02AC(0x0001) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RE4M[0x3];                                   // 0x02AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ClientErrorUpdateRateLimit;                              // 0x02B0(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientNetCamUpdateDeltaTime;                             // 0x02B4(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientNetCamUpdatePositionLimit;                         // 0x02B8(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMovementTimeDiscrepancyDetection;                       // 0x02BC(0x0001) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMovementTimeDiscrepancyResolution;                      // 0x02BD(0x0001) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JDH1[0x2];                                   // 0x02BE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MovementTimeDiscrepancyMaxTimeMargin;                    // 0x02C0(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MovementTimeDiscrepancyMinTimeMargin;                    // 0x02C4(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MovementTimeDiscrepancyResolutionRate;                   // 0x02C8(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MovementTimeDiscrepancyDriftAllowance;                   // 0x02CC(0x0004) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMovementTimeDiscrepancyForceCorrectionsDuringResolution; // 0x02D0(0x0001) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDistanceBasedRelevancy;                              // 0x02D1(0x0001) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VUJP[0xE];                                   // 0x02D2(0x000E) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.GameplayStatics
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UGameplayStatics : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_UnRetainAllSoundsInSoundClass(class USoundClass* InSoundClass);
		void STATIC_UnloadStreamLevelBySoftObjectPtr(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, bool bShouldBlockOnUnload);
		void STATIC_UnloadStreamLevel(class UObject* WorldContextObject, const class FName& LevelName, const struct FLatentActionInfo& LatentInfo, bool bShouldBlockOnUnload);
		bool STATIC_SuggestProjectileVelocity_CustomArc(class UObject* WorldContextObject, struct FVector* OutLaunchVelocity, const struct FVector& StartPos, const struct FVector& EndPos, float OverrideGravityZ, float ArcParam);
		class UAudioComponent* STATIC_SpawnSoundAttached(class USoundBase* Sound, class USceneComponent* AttachToComponent, const class FName& attachPointName, const struct FVector& Location, const struct FRotator& Rotation, EAttachLocation LocationType, bool bStopWhenAttachedToDestroyed, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, bool bAutoDestroy);
		class UAudioComponent* STATIC_SpawnSoundAtLocation(class UObject* WorldContextObject, class USoundBase* Sound, const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, bool bAutoDestroy);
		class UAudioComponent* STATIC_SpawnSound2D(class UObject* WorldContextObject, class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings, bool bPersistAcrossLevelTransition, bool bAutoDestroy);
		class UObject* STATIC_SpawnObject(class UClass* ObjectClass, class UObject* Outer);
		class UForceFeedbackComponent* STATIC_SpawnForceFeedbackAttached(class UForceFeedbackEffect* ForceFeedbackEffect, class USceneComponent* AttachToComponent, const class FName& attachPointName, const struct FVector& Location, const struct FRotator& Rotation, EAttachLocation LocationType, bool bStopWhenAttachedToDestroyed, bool bLooping, float IntensityMultiplier, float StartTime, class UForceFeedbackAttenuation* AttenuationSettings, bool bAutoDestroy);
		class UForceFeedbackComponent* STATIC_SpawnForceFeedbackAtLocation(class UObject* WorldContextObject, class UForceFeedbackEffect* ForceFeedbackEffect, const struct FVector& Location, const struct FRotator& Rotation, bool bLooping, float IntensityMultiplier, float StartTime, class UForceFeedbackAttenuation* AttenuationSettings, bool bAutoDestroy);
		class UParticleSystemComponent* STATIC_SpawnEmitterAttached(class UParticleSystem* EmitterTemplate, class USceneComponent* AttachToComponent, const class FName& attachPointName, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale, EAttachLocation LocationType, bool bAutoDestroy, EPSCPoolMethod PoolingMethod, bool bAutoActivate);
		class UParticleSystemComponent* STATIC_SpawnEmitterAtLocation(class UObject* WorldContextObject, class UParticleSystem* EmitterTemplate, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale, bool bAutoDestroy, EPSCPoolMethod PoolingMethod, bool bAutoActivateSystem);
		class UAudioComponent* STATIC_SpawnDialogueAttached(class UDialogueWave* Dialogue, const struct FDialogueContext& Context, class USceneComponent* AttachToComponent, const class FName& attachPointName, const struct FVector& Location, const struct FRotator& Rotation, EAttachLocation LocationType, bool bStopWhenAttachedToDestroyed, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, bool bAutoDestroy);
		class UAudioComponent* STATIC_SpawnDialogueAtLocation(class UObject* WorldContextObject, class UDialogueWave* Dialogue, const struct FDialogueContext& Context, const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, bool bAutoDestroy);
		class UAudioComponent* STATIC_SpawnDialogue2D(class UObject* WorldContextObject, class UDialogueWave* Dialogue, const struct FDialogueContext& Context, float VolumeMultiplier, float PitchMultiplier, float StartTime, bool bAutoDestroy);
		class UDecalComponent* STATIC_SpawnDecalAttached(class UMaterialInterface* DecalMaterial, const struct FVector& DecalSize, class USceneComponent* AttachToComponent, const class FName& attachPointName, const struct FVector& Location, const struct FRotator& Rotation, EAttachLocation LocationType, float LifeSpan);
		class UDecalComponent* STATIC_SpawnDecalAtLocation(class UObject* WorldContextObject, class UMaterialInterface* DecalMaterial, const struct FVector& DecalSize, const struct FVector& Location, const struct FRotator& Rotation, float LifeSpan);
		void STATIC_SetWorldOriginLocation(class UObject* WorldContextObject, const struct FIntVector& NewLocation);
		void STATIC_SetViewportMouseCaptureMode(class UObject* WorldContextObject, EMouseCaptureMode MouseCaptureMode);
		void STATIC_SetSubtitlesEnabled(bool bEnabled);
		void STATIC_SetSoundMixClassOverride(class UObject* WorldContextObject, class USoundMix* InSoundMixModifier, class USoundClass* InSoundClass, float Volume, float Pitch, float FadeInTime, bool bApplyToChildren);
		void STATIC_SetSoundClassDistanceScale(class UObject* WorldContextObject, class USoundClass* SoundClass, float DistanceAttenuationScale, float TimeSec);
		void STATIC_SetPlayerControllerID(class APlayerController* Player, int32_t ControllerId);
		void STATIC_SetMaxAudioChannelsScaled(class UObject* WorldContextObject, float MaxChannelCountScale);
		void STATIC_SetGlobalTimeDilation(class UObject* WorldContextObject, float TimeDilation);
		void STATIC_SetGlobalPitchModulation(class UObject* WorldContextObject, float PitchModulation, float TimeSec);
		void STATIC_SetGlobalListenerFocusParameters(class UObject* WorldContextObject, float FocusAzimuthScale, float NonFocusAzimuthScale, float FocusDistanceScale, float NonFocusDistanceScale, float FocusVolumeScale, float NonFocusVolumeScale, float FocusPriorityScale, float NonFocusPriorityScale);
		bool STATIC_SetGamePaused(class UObject* WorldContextObject, bool bPaused);
		void STATIC_SetForceDisableSplitscreen(class UObject* WorldContextObject, bool bDisable);
		void STATIC_SetEnableWorldRendering(class UObject* WorldContextObject, bool bEnable);
		void STATIC_SetBaseSoundMix(class UObject* WorldContextObject, class USoundMix* InSoundMix);
		bool STATIC_SaveGameToSlot(class USaveGame* SaveGameObject, const class FString& SlotName, int32_t UserIndex);
		void STATIC_RemovePlayer(class APlayerController* Player, bool bDestroyPawn);
		struct FVector STATIC_RebaseZeroOriginOntoLocal(class UObject* WorldContextObject, const struct FVector& WorldLocation);
		struct FVector STATIC_RebaseLocalOriginOntoZero(class UObject* WorldContextObject, const struct FVector& WorldLocation);
		void STATIC_PushSoundMixModifier(class UObject* WorldContextObject, class USoundMix* InSoundMixModifier);
		bool STATIC_ProjectWorldToScreen(class APlayerController* Player, const struct FVector& WorldPosition, struct FVector2D* ScreenPosition, bool bPlayerViewportRelative);
		void STATIC_PrimeSound(class USoundBase* InSound);
		void STATIC_PrimeAllSoundsInSoundClass(class USoundClass* InSoundClass);
		void STATIC_PopSoundMixModifier(class UObject* WorldContextObject, class USoundMix* InSoundMixModifier);
		void STATIC_PlayWorldCameraShake(class UObject* WorldContextObject, class UClass* Shake, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float Falloff, bool bOrientShakeTowardsEpicenter);
		void STATIC_PlaySoundAtLocation(class UObject* WorldContextObject, class USoundBase* Sound, const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, class AActor* OwningActor);
		void STATIC_PlaySound2D(class UObject* WorldContextObject, class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings, class AActor* OwningActor, bool bIsUISound);
		void STATIC_PlayDialogueAtLocation(class UObject* WorldContextObject, class UDialogueWave* Dialogue, const struct FDialogueContext& Context, const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings);
		void STATIC_PlayDialogue2D(class UObject* WorldContextObject, class UDialogueWave* Dialogue, const struct FDialogueContext& Context, float VolumeMultiplier, float PitchMultiplier, float StartTime);
		class FString STATIC_ParseOption(const class FString& Options, const class FString& Key);
		void STATIC_OpenLevelBySoftObjectPtr(class UObject* WorldContextObject, bool bAbsolute, const class FString& Options);
		void STATIC_OpenLevel(class UObject* WorldContextObject, const class FName& LevelName, bool bAbsolute, const class FString& Options);
		struct FHitResult STATIC_MakeHitResult(bool bBlockingHit, bool bInitialOverlap, float Time, float Distance, const struct FVector& Location, const struct FVector& ImpactPoint, const struct FVector& Normal, const struct FVector& ImpactNormal, class UPhysicalMaterial* PhysMat, class AActor* HitActor, class UPrimitiveComponent* HitComponent, const class FName& HitBoneName, int32_t HitItem, int32_t ElementIndex, int32_t FaceIndex, const struct FVector& TraceStart, const struct FVector& TraceEnd);
		void STATIC_LoadStreamLevelBySoftObjectPtr(class UObject* WorldContextObject, bool bMakeVisibleAfterLoad, bool bShouldBlockOnLoad, const struct FLatentActionInfo& LatentInfo);
		void STATIC_LoadStreamLevel(class UObject* WorldContextObject, const class FName& LevelName, bool bMakeVisibleAfterLoad, bool bShouldBlockOnLoad, const struct FLatentActionInfo& LatentInfo);
		class USaveGame* STATIC_LoadGameFromSlot(const class FString& SlotName, int32_t UserIndex);
		bool STATIC_IsSplitscreenForceDisabled(class UObject* WorldContextObject);
		bool STATIC_IsGamePaused(class UObject* WorldContextObject);
		bool STATIC_HasOption(const class FString& Options, const class FString& InKey);
		bool STATIC_HasLaunchOption(const class FString& OptionToCheck);
		int32_t STATIC_GrassOverlappingSphereCount(class UObject* WorldContextObject, class UStaticMesh* StaticMesh, const struct FVector& CenterPosition, float Radius);
		struct FIntVector STATIC_GetWorldOriginLocation(class UObject* WorldContextObject);
		float STATIC_GetWorldDeltaSeconds(class UObject* WorldContextObject);
		void STATIC_GetViewProjectionMatrix(const struct FMinimalViewInfo& DesiredView, struct FMatrix* ViewMatrix, struct FMatrix* ProjectionMatrix, struct FMatrix* ViewProjectionMatrix);
		EMouseCaptureMode STATIC_GetViewportMouseCaptureMode(class UObject* WorldContextObject);
		float STATIC_GetUnpausedTimeSeconds(class UObject* WorldContextObject);
		float STATIC_GetTimeSeconds(class UObject* WorldContextObject);
		EPhysicalSurface STATIC_GetSurfaceType(const struct FHitResult& Hit);
		class ULevelStreaming* STATIC_GetStreamingLevel(class UObject* WorldContextObject, const class FName& PackageName);
		float STATIC_GetRealTimeSeconds(class UObject* WorldContextObject);
		class APawn* STATIC_GetPlayerPawn(class UObject* WorldContextObject, int32_t PlayerIndex);
		int32_t STATIC_GetPlayerControllerID(class APlayerController* Player);
		class APlayerController* STATIC_GetPlayerControllerFromID(class UObject* WorldContextObject, int32_t ControllerId);
		class APlayerController* STATIC_GetPlayerController(class UObject* WorldContextObject, int32_t PlayerIndex);
		class ACharacter* STATIC_GetPlayerCharacter(class UObject* WorldContextObject, int32_t PlayerIndex);
		class APlayerCameraManager* STATIC_GetPlayerCameraManager(class UObject* WorldContextObject, int32_t PlayerIndex);
		class FString STATIC_GetPlatformName();
		class UClass* STATIC_GetObjectClass(class UObject* Object);
		int32_t STATIC_GetMaxAudioChannelCount(class UObject* WorldContextObject);
		void STATIC_GetKeyValue(const class FString& Pair, class FString* Key, class FString* value);
		int32_t STATIC_GetIntOption(const class FString& Options, const class FString& Key, int32_t defaultValue);
		float STATIC_GetGlobalTimeDilation(class UObject* WorldContextObject);
		class AGameStateBase* STATIC_GetGameState(class UObject* WorldContextObject);
		class AGameModeBase* STATIC_GetGameMode(class UObject* WorldContextObject);
		class UGameInstance* STATIC_GetGameInstance(class UObject* WorldContextObject);
		bool STATIC_GetEnableWorldRendering(class UObject* WorldContextObject);
		class UReverbEffect* STATIC_GetCurrentReverbEffect(class UObject* WorldContextObject);
		class FString STATIC_GetCurrentLevelName(class UObject* WorldContextObject, bool bRemovePrefixString);
		bool STATIC_GetClosestListenerLocation(class UObject* WorldContextObject, const struct FVector& Location, float MaximumRange, bool bAllowAttenuationOverride, struct FVector* ListenerPosition);
		float STATIC_GetAudioTimeSeconds(class UObject* WorldContextObject);
		void STATIC_GetAllActorsWithTag(class UObject* WorldContextObject, const class FName& Tag, TArray<class AActor*>* OutActors);
		void STATIC_GetAllActorsWithInterface(class UObject* WorldContextObject, class UClass* Interface, TArray<class AActor*>* OutActors);
		void STATIC_GetAllActorsOfClassWithTag(class UObject* WorldContextObject, class UClass* ActorClass, const class FName& Tag, TArray<class AActor*>* OutActors);
		void STATIC_GetAllActorsOfClass(class UObject* WorldContextObject, class UClass* ActorClass, TArray<class AActor*>* OutActors);
		class AActor* STATIC_GetActorOfClass(class UObject* WorldContextObject, class UClass* ActorClass);
		void STATIC_GetActorArrayBounds(TArray<class AActor*> Actors, bool bOnlyCollidingComponents, struct FVector* Center, struct FVector* BoxExtent);
		struct FVector STATIC_GetActorArrayAverageLocation(TArray<class AActor*> Actors);
		void STATIC_GetAccurateRealTime(int32_t* Seconds, float* PartialSeconds);
		void STATIC_FlushLevelStreaming(class UObject* WorldContextObject);
		class AActor* STATIC_FinishSpawningActor(class AActor* Actor, const struct FTransform& SpawnTransform);
		class AActor* STATIC_FindNearestActor(const struct FVector& Origin, TArray<class AActor*> ActorsToCheck, float* Distance);
		bool STATIC_FindCollisionUV(const struct FHitResult& Hit, int32_t UVChannel, struct FVector2D* UV);
		void STATIC_EnableLiveStreaming(bool enable);
		bool STATIC_DoesSaveGameExist(const class FString& SlotName, int32_t UserIndex);
		bool STATIC_DeprojectScreenToWorld(class APlayerController* Player, const struct FVector2D& ScreenPosition, struct FVector* WorldPosition, struct FVector* WorldDirection);
		bool STATIC_DeleteGameInSlot(const class FString& SlotName, int32_t UserIndex);
		void STATIC_DeactivateReverbEffect(class UObject* WorldContextObject, const class FName& TagName);
		class UAudioComponent* STATIC_CreateSound2D(class UObject* WorldContextObject, class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings, bool bPersistAcrossLevelTransition, bool bAutoDestroy);
		class USaveGame* STATIC_CreateSaveGameObject(class UClass* SaveGameClass);
		class APlayerController* STATIC_CreatePlayer(class UObject* WorldContextObject, int32_t ControllerId, bool bSpawnPlayerController);
		void STATIC_ClearSoundMixModifiers(class UObject* WorldContextObject);
		void STATIC_ClearSoundMixClassOverride(class UObject* WorldContextObject, class USoundMix* InSoundMixModifier, class USoundClass* InSoundClass, float FadeOutTime);
		void STATIC_CancelAsyncLoading();
		void STATIC_BreakHitResult(const struct FHitResult& Hit, bool* bBlockingHit, bool* bInitialOverlap, float* Time, float* Distance, struct FVector* Location, struct FVector* ImpactPoint, struct FVector* Normal, struct FVector* ImpactNormal, class UPhysicalMaterial** PhysMat, class AActor** HitActor, class UPrimitiveComponent** HitComponent, class FName* HitBoneName, int32_t* HitItem, int32_t* ElementIndex, int32_t* FaceIndex, struct FVector* TraceStart, struct FVector* TraceEnd);
		bool STATIC_BlueprintSuggestProjectileVelocity(class UObject* WorldContextObject, struct FVector* TossVelocity, const struct FVector& StartLocation, const struct FVector& EndLocation, float LaunchSpeed, float OverrideGravityZ, ESuggestProjVelocityTraceOption TraceOption, float CollisionRadius, bool bFavorHighArc, bool bDrawDebug);
		bool STATIC_Blueprint_PredictProjectilePath_ByTraceChannel(class UObject* WorldContextObject, struct FHitResult* OutHit, TArray<struct FVector>* OutPathPositions, struct FVector* OutLastTraceDestination, const struct FVector& StartPos, const struct FVector& LaunchVelocity, bool bTracePath, float ProjectileRadius, ECollisionChannel TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, float DrawDebugTime, float SimFrequency, float MaxSimTime, float OverrideGravityZ);
		bool STATIC_Blueprint_PredictProjectilePath_ByObjectType(class UObject* WorldContextObject, struct FHitResult* OutHit, TArray<struct FVector>* OutPathPositions, struct FVector* OutLastTraceDestination, const struct FVector& StartPos, const struct FVector& LaunchVelocity, bool bTracePath, float ProjectileRadius, TArray<EObjectTypeQuery> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, float DrawDebugTime, float SimFrequency, float MaxSimTime, float OverrideGravityZ);
		bool STATIC_Blueprint_PredictProjectilePath_Advanced(class UObject* WorldContextObject, const struct FPredictProjectilePathParams& PredictParams, struct FPredictProjectilePathResult* PredictResult);
		class AActor* STATIC_BeginSpawningActorFromClass(class UObject* WorldContextObject, class UClass* ActorClass, const struct FTransform& SpawnTransform, bool bNoCollisionFail, class AActor* Owner);
		class AActor* STATIC_BeginSpawningActorFromBlueprint(class UObject* WorldContextObject, class UBlueprint* Blueprint, const struct FTransform& SpawnTransform, bool bNoCollisionFail);
		class AActor* STATIC_BeginDeferredActorSpawnFromClass(class UObject* WorldContextObject, class UClass* ActorClass, const struct FTransform& SpawnTransform, ESpawnActorCollisionHandlingMethod CollisionHandlingOverride, class AActor* Owner);
		bool STATIC_AreSubtitlesEnabled();
		bool STATIC_AreAnyListenersWithinRange(class UObject* WorldContextObject, const struct FVector& Location, float MaximumRange);
		bool STATIC_ApplyRadialDamageWithFalloff(class UObject* WorldContextObject, float BaseDamage, float MinimumDamage, const struct FVector& Origin, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, class UClass* DamageTypeClass, TArray<class AActor*> ignoreActors, class AActor* DamageCauser, class AController* InstigatedByController, ECollisionChannel DamagePreventionChannel);
		bool STATIC_ApplyRadialDamage(class UObject* WorldContextObject, float BaseDamage, const struct FVector& Origin, float DamageRadius, class UClass* DamageTypeClass, TArray<class AActor*> ignoreActors, class AActor* DamageCauser, class AController* InstigatedByController, bool bDoFullDamage, ECollisionChannel DamagePreventionChannel);
		float STATIC_ApplyPointDamage(class AActor* DamagedActor, float BaseDamage, const struct FVector& HitFromDirection, const struct FHitResult& HitInfo, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageTypeClass);
		float STATIC_ApplyDamage(class AActor* DamagedActor, float BaseDamage, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageTypeClass);
		void STATIC_AnnounceAccessibleString(const class FString& AnnouncementString);
		void STATIC_ActivateReverbEffect(class UObject* WorldContextObject, class UReverbEffect* ReverbEffect, const class FName& TagName, float Priority, float Volume, float FadeTime);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SpotLight
	 * Size -> 0x0008 (FullSize[0x0248] - InheritedSize[0x0240])
	 */
	class ASpotLight : public ALight
	{
	public:
		class USpotLightComponent*                                 SpotLightComponent;                                      // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SetOuterConeAngle(float NewOuterConeAngle);
		void SetInnerConeAngle(float NewInnerConeAngle);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.GeneratedMeshAreaLight
	 * Size -> 0x0000 (FullSize[0x0248] - InheritedSize[0x0248])
	 */
	class AGeneratedMeshAreaLight : public ASpotLight
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.HapticFeedbackEffect_Base
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UHapticFeedbackEffect_Base : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.HapticFeedbackEffect_Buffer
	 * Size -> 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
	 */
	class UHapticFeedbackEffect_Buffer : public UHapticFeedbackEffect_Base
	{
	public:
		TArray<unsigned char>                                      Amplitudes;                                              // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    SampleRate;                                              // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NH2K[0x2C];                                  // 0x0044(0x002C) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.HapticFeedbackEffect_Curve
	 * Size -> 0x0110 (FullSize[0x0140] - InheritedSize[0x0030])
	 */
	class UHapticFeedbackEffect_Curve : public UHapticFeedbackEffect_Base
	{
	public:
		struct FHapticFeedbackDetails_Curve                        HapticDetails;                                           // 0x0030(0x0110) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.HapticFeedbackEffect_SoundWave
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	class UHapticFeedbackEffect_SoundWave : public UHapticFeedbackEffect_Base
	{
	public:
		class USoundWave*                                          SoundWave;                                               // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6C7C[0x30];                                  // 0x0038(0x0030) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.HealthSnapshotBlueprintLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UHealthSnapshotBlueprintLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_StopPerformanceSnapshots();
		void STATIC_StartPerformanceSnapshots();
		void STATIC_LogPerformanceSnapshot(const class FString& SnapshotTitle, bool bResetStats);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.HLODEngineSubsystem
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UHLODEngineSubsystem : public UEngineSubsystem
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.HLODProxy
	 * Size -> 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
	 */
	class UHLODProxy : public UObject
	{
	public:
		TArray<struct FHLODProxyMesh>                              ProxyMeshes;                                             // 0x0030(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate
		TMap<class UHLODProxyDesc*, struct FHLODProxyMesh>         HLODActors;                                              // 0x0040(0x0050) Edit, EditConst, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.HLODProxyDesc
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UHLODProxyDesc : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ImportanceSamplingLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UImportanceSamplingLibrary : public UBlueprintFunctionLibrary
	{
	public:
		float STATIC_RandomSobolFloat(int32_t Index, int32_t Dimension, float Seed);
		struct FVector STATIC_RandomSobolCell3D(int32_t Index, int32_t NumCells, const struct FVector& Cell, const struct FVector& Seed);
		struct FVector2D STATIC_RandomSobolCell2D(int32_t Index, int32_t NumCells, const struct FVector2D& Cell, const struct FVector2D& Seed);
		float STATIC_NextSobolFloat(int32_t Index, int32_t Dimension, float previousValue);
		struct FVector STATIC_NextSobolCell3D(int32_t Index, int32_t NumCells, const struct FVector& previousValue);
		struct FVector2D STATIC_NextSobolCell2D(int32_t Index, int32_t NumCells, const struct FVector2D& previousValue);
		struct FImportanceTexture STATIC_MakeImportanceTexture(class UTexture2D* Texture, EImportanceWeight WeightingFunc);
		void STATIC_ImportanceSample(const struct FImportanceTexture& Texture, const struct FVector2D& Rand, int32_t Samples, float Intensity, struct FVector2D* SamplePosition, struct FLinearColor* SampleColor, float* SampleIntensity, float* SampleSize);
		void STATIC_BreakImportanceTexture(const struct FImportanceTexture& ImportanceTexture, class UTexture2D** Texture, EImportanceWeight* WeightingFunc);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ImportantToggleSettingInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UImportantToggleSettingInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InGameAdManager
	 * Size -> 0x0028 (FullSize[0x0068] - InheritedSize[0x0040])
	 */
	class UInGameAdManager : public UPlatformInterfaceBase
	{
	public:
		unsigned char                                              bShouldPauseWhileAdOpen : 1;                             // 0x0040(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_69BS[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FScriptDelegate>                              ClickedBannerDelegates;                                  // 0x0048(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class FScriptDelegate>                              ClosedAdDelegates;                                       // 0x0058(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InheritableComponentHandler
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UInheritableComponentHandler : public UObject
	{
	public:
		TArray<struct FComponentOverrideRecord>                    Records;                                                 // 0x0030(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class UActorComponent*>                             UnnecessaryComponents;                                   // 0x0040(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InputDelegateBinding
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UInputDelegateBinding : public UDynamicBlueprintBinding
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InputActionDelegateBinding
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UInputActionDelegateBinding : public UInputDelegateBinding
	{
	public:
		TArray<struct FBlueprintInputActionDelegateBinding>        InputActionDelegateBindings;                             // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InputAxisDelegateBinding
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UInputAxisDelegateBinding : public UInputDelegateBinding
	{
	public:
		TArray<struct FBlueprintInputAxisDelegateBinding>          InputAxisDelegateBindings;                               // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InputAxisKeyDelegateBinding
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UInputAxisKeyDelegateBinding : public UInputDelegateBinding
	{
	public:
		TArray<struct FBlueprintInputAxisKeyDelegateBinding>       InputAxisKeyDelegateBindings;                            // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InputComponent
	 * Size -> 0x0088 (FullSize[0x0140] - InheritedSize[0x00B8])
	 */
	class UInputComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_9LLE[0x70];                                  // 0x00B8(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCachedKeyToActionInfo>                      CachedKeyToActionInfo;                                   // 0x0128(0x0010) ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QZ9B[0x8];                                   // 0x0138(0x0008) MISSED OFFSET (PADDING)

	public:
		bool WasControllerKeyJustReleased(const struct FKey& Key);
		bool WasControllerKeyJustPressed(const struct FKey& Key);
		bool IsControllerKeyDown(const struct FKey& Key);
		void GetTouchState(int32_t FingerIndex, float* LocationX, float* LocationY, bool* bIsCurrentlyPressed);
		struct FVector GetControllerVectorKeyState(const struct FKey& Key);
		void GetControllerMouseDelta(float* DeltaX, float* DeltaY);
		float GetControllerKeyTimeDown(const struct FKey& Key);
		void GetControllerAnalogStickState(EControllerAnalogStick WhichStick, float* StickX, float* StickY);
		float GetControllerAnalogKeyState(const struct FKey& Key);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InputKeyDelegateBinding
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UInputKeyDelegateBinding : public UInputDelegateBinding
	{
	public:
		TArray<struct FBlueprintInputKeyDelegateBinding>           InputKeyDelegateBindings;                                // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InputSettings
	 * Size -> 0x0138 (FullSize[0x0168] - InheritedSize[0x0030])
	 */
	class UInputSettings : public UObject
	{
	public:
		TArray<struct FInputAxisConfigEntry>                       AxisConfig;                                              // 0x0030(0x0010) Edit, EditFixedSize, ZeroConstructor, Config, AdvancedDisplay, NativeAccessSpecifierPublic
		unsigned char                                              bAltEnterTogglesFullscreen : 1;                          // 0x0040(0x0001) BIT_FIELD Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bF11TogglesFullscreen : 1;                               // 0x0040(0x0001) BIT_FIELD Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseMouseForTouch : 1;                                   // 0x0040(0x0001) BIT_FIELD Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableMouseSmoothing : 1;                               // 0x0040(0x0001) BIT_FIELD Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableFOVScaling : 1;                                   // 0x0040(0x0001) BIT_FIELD Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCaptureMouseOnLaunch : 1;                               // 0x0040(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDefaultViewportMouseLock : 1;                           // 0x0040(0x0001) BIT_FIELD Config, Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAlwaysShowTouchInterface : 1;                           // 0x0040(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShowConsoleOnFourFingerTap : 1;                         // 0x0041(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableGestureRecognizer : 1;                            // 0x0041(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseAutocorrect;                                         // 0x0042(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TT53[0x5];                                   // 0x0043(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      ExcludedAutocorrectOS;                                   // 0x0048(0x0010) Edit, ZeroConstructor, Config, AdvancedDisplay, NativeAccessSpecifierPublic
		TArray<class FString>                                      ExcludedAutocorrectCultures;                             // 0x0058(0x0010) Edit, ZeroConstructor, Config, AdvancedDisplay, NativeAccessSpecifierPublic
		TArray<class FString>                                      ExcludedAutocorrectDeviceModels;                         // 0x0068(0x0010) Edit, ZeroConstructor, Config, AdvancedDisplay, NativeAccessSpecifierPublic
		EMouseCaptureMode                                          DefaultViewportMouseCaptureMode;                         // 0x0078(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMouseLockMode                                             DefaultViewportMouseLockMode;                            // 0x0079(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9ZZ8[0x2];                                   // 0x007A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FOVScale;                                                // 0x007C(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DoubleClickTime;                                         // 0x0080(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6TME[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FInputActionKeyMapping>                      ActionMappings;                                          // 0x0088(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate
		TArray<struct FInputAxisKeyMapping>                        AxisMappings;                                            // 0x0098(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate
		TArray<struct FInputActionSpeechMapping>                   SpeechMappings;                                          // 0x00A8(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate
		unsigned char                                              DefaultPlayerInputClass[0x30];                           // 0x00B8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              DefaultInputComponentClass[0x30];                        // 0x00E8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		struct FSoftObjectPath                                     DefaultTouchInterface;                                   // 0x0118(0x0020) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKey                                                ConsoleKey;                                              // 0x0138(0x0020) Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FKey>                                        ConsoleKeys;                                             // 0x0158(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic

	public:
		void SaveKeyMappings();
		void RemoveAxisMapping(const struct FInputAxisKeyMapping& KeyMapping, bool bForceRebuildKeymaps);
		void RemoveActionMapping(const struct FInputActionKeyMapping& KeyMapping, bool bForceRebuildKeymaps);
		class UInputSettings* STATIC_GetInputSettings();
		void GetAxisNames(TArray<class FName>* AxisNames);
		void GetAxisMappingByName(const class FName& InAxisName, TArray<struct FInputAxisKeyMapping>* OutMappings);
		void GetActionNames(TArray<class FName>* ActionNames);
		void GetActionMappingByName(const class FName& InActionName, TArray<struct FInputActionKeyMapping>* OutMappings);
		void ForceRebuildKeymaps();
		void AddAxisMapping(const struct FInputAxisKeyMapping& KeyMapping, bool bForceRebuildKeymaps);
		void AddActionMapping(const struct FInputActionKeyMapping& KeyMapping, bool bForceRebuildKeymaps);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InputTouchDelegateBinding
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UInputTouchDelegateBinding : public UInputDelegateBinding
	{
	public:
		TArray<struct FBlueprintInputTouchDelegateBinding>         InputTouchDelegateBindings;                              // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InputVectorAxisDelegateBinding
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	class UInputVectorAxisDelegateBinding : public UInputAxisKeyDelegateBinding
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Interface_ActorSubobject
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UInterface_ActorSubobject : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Interface_AssetUserData
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UInterface_AssetUserData : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.BoneReferenceSkeletonProvider
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UBoneReferenceSkeletonProvider : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Interface_CollisionDataProvider
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UInterface_CollisionDataProvider : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Interface_PostProcessVolume
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UInterface_PostProcessVolume : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Interface_PreviewMeshProvider
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UInterface_PreviewMeshProvider : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpCurveEdSetup
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UInterpCurveEdSetup : public UObject
	{
	public:
		TArray<struct FCurveEdTab>                                 Tabs;                                                    // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    ActiveTab;                                               // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I7X6[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpData
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	class UInterpData : public UObject
	{
	public:
		float                                                      InterpLength;                                            // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PathBuildTime;                                           // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UInterpGroup*>                                InterpGroups;                                            // 0x0038(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UInterpCurveEdSetup*                                 CurveEdSetup;                                            // 0x0048(0x0008) ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EdSectionStart;                                          // 0x0050(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EdSectionEnd;                                            // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShouldBakeAndPrune : 1;                                 // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I2LC[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInterpGroupDirector*                                CachedDirectorGroup;                                     // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        AllEventNames;                                           // 0x0068(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpFilter
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UInterpFilter : public UObject
	{
	public:
		class FString                                              Caption;                                                 // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpFilter_Classes
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	class UInterpFilter_Classes : public UInterpFilter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpFilter_Custom
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	class UInterpFilter_Custom : public UInterpFilter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpGroup
	 * Size -> 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
	 */
	class UInterpGroup : public UObject
	{
	public:
		unsigned char                                              UnknownData_TLG4[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UInterpTrack*>                                InterpTracks;                                            // 0x0038(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                GroupName;                                               // 0x0048(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              GroupColor;                                              // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCollapsed : 1;                                          // 0x0058(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bVisible : 1;                                            // 0x0058(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsFolder : 1;                                           // 0x0058(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsParented : 1;                                         // 0x0058(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsSelected : 1;                                         // 0x0058(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_83IM[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpGroupCamera
	 * Size -> 0x0010 (FullSize[0x0070] - InheritedSize[0x0060])
	 */
	class UInterpGroupCamera : public UInterpGroup
	{
	public:
		class UCameraAnim*                                         CameraAnimInst;                                          // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CompressTolerance;                                       // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6Z4K[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpGroupDirector
	 * Size -> 0x0000 (FullSize[0x0060] - InheritedSize[0x0060])
	 */
	class UInterpGroupDirector : public UInterpGroup
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpGroupInst
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UInterpGroupInst : public UObject
	{
	public:
		class UInterpGroup*                                        Group;                                                   // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              GroupActor;                                              // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UInterpTrackInst*>                            TrackInst;                                               // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpGroupInstCamera
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UInterpGroupInstCamera : public UInterpGroupInst
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpGroupInstDirector
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UInterpGroupInstDirector : public UInterpGroupInst
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpToMovementComponent
	 * Size -> 0x00A0 (FullSize[0x0198] - InheritedSize[0x00F8])
	 */
	class UInterpToMovementComponent : public UMovementComponent
	{
	public:
		float                                                      Duration;                                                // 0x00F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPauseOnImpact : 1;                                      // 0x00FC(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8WTA[0x3];                                   // 0x00FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bSweep;                                                  // 0x0100(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETeleportType                                              TeleportType;                                            // 0x0101(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EInterpToBehaviourType                                     BehaviourType;                                           // 0x0102(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCheckIfStillInWorld;                                    // 0x0103(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceSubStepping : 1;                                   // 0x0104(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MSUV[0x3];                                   // 0x0105(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnInterpToReverse;                                       // 0x0108(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnInterpToStop;                                          // 0x0118(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnWaitBeginDelegate;                                     // 0x0128(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnWaitEndDelegate;                                       // 0x0138(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnResetDelegate;                                         // 0x0148(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		float                                                      MaxSimulationTimeStep;                                   // 0x0158(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxSimulationIterations;                                 // 0x015C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FInterpControlPoint>                         ControlPoints;                                           // 0x0160(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TOCF[0x28];                                  // 0x0170(0x0028) MISSED OFFSET (PADDING)

	public:
		void StopSimulating(const struct FHitResult& HitResult);
		void RestartMovement(float InitialDirection);
		void ResetControlPoints();
		void OnInterpToWaitEndDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
		void OnInterpToWaitBeginDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
		void OnInterpToStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
		void OnInterpToReverseDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
		void OnInterpToResetDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
		void FinaliseControlPoints();
		void AddControlPointPosition(const struct FVector& Pos, bool bPositionIsRelative);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackAnimControl
	 * Size -> 0x0028 (FullSize[0x00C0] - InheritedSize[0x0098])
	 */
	class UInterpTrackAnimControl : public UInterpTrackFloatBase
	{
	public:
		class FName                                                SlotName;                                                // 0x0098(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MWSL[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAnimControlTrackKey>                        AnimSeqs;                                                // 0x00A8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bSkipAnimNotifiers : 1;                                  // 0x00B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NL0N[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackAudioMaster
	 * Size -> 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
	 */
	class UInterpTrackAudioMaster : public UInterpTrackVectorBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackBoolProp
	 * Size -> 0x0020 (FullSize[0x0098] - InheritedSize[0x0078])
	 */
	class UInterpTrackBoolProp : public UInterpTrack
	{
	public:
		TArray<struct FBoolTrackKey>                               BoolTrack;                                               // 0x0078(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                PropertyName;                                            // 0x0088(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VPA4[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackColorProp
	 * Size -> 0x0010 (FullSize[0x00A8] - InheritedSize[0x0098])
	 */
	class UInterpTrackColorProp : public UInterpTrackVectorBase
	{
	public:
		class FName                                                PropertyName;                                            // 0x0098(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZPEF[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackColorScale
	 * Size -> 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
	 */
	class UInterpTrackColorScale : public UInterpTrackVectorBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackDirector
	 * Size -> 0x0018 (FullSize[0x0090] - InheritedSize[0x0078])
	 */
	class UInterpTrackDirector : public UInterpTrack
	{
	public:
		TArray<struct FDirectorTrackCut>                           CutTrack;                                                // 0x0078(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bSimulateCameraCutsOnClients : 1;                        // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_OOP3[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackEvent
	 * Size -> 0x0018 (FullSize[0x0090] - InheritedSize[0x0078])
	 */
	class UInterpTrackEvent : public UInterpTrack
	{
	public:
		TArray<struct FEventTrackKey>                              EventTrack;                                              // 0x0078(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bFireEventsWhenForwards : 1;                             // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFireEventsWhenBackwards : 1;                            // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFireEventsWhenJumpingForwards : 1;                      // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseCustomEventName : 1;                                 // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9JU1[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackFade
	 * Size -> 0x0018 (FullSize[0x00B0] - InheritedSize[0x0098])
	 */
	class UInterpTrackFade : public UInterpTrackFloatBase
	{
	public:
		unsigned char                                              bPersistFade : 1;                                        // 0x0098(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFadeAudio : 1;                                          // 0x0098(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_83FJ[0x3];                                   // 0x0099(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        FadeColor;                                               // 0x009C(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QHTQ[0x4];                                   // 0x00AC(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackFloatAnimBPParam
	 * Size -> 0x0020 (FullSize[0x00B8] - InheritedSize[0x0098])
	 */
	class UInterpTrackFloatAnimBPParam : public UInterpTrackFloatBase
	{
	public:
		class UAnimBlueprintGeneratedClass*                        AnimBlueprintClass;                                      // 0x0098(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AnimClass;                                               // 0x00A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ParamName;                                               // 0x00A8(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AHXF[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackFloatMaterialParam
	 * Size -> 0x0020 (FullSize[0x00B8] - InheritedSize[0x0098])
	 */
	class UInterpTrackFloatMaterialParam : public UInterpTrackFloatBase
	{
	public:
		TArray<class UMaterialInterface*>                          TargetMaterials;                                         // 0x0098(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                ParamName;                                               // 0x00A8(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FG46[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackFloatParticleParam
	 * Size -> 0x0010 (FullSize[0x00A8] - InheritedSize[0x0098])
	 */
	class UInterpTrackFloatParticleParam : public UInterpTrackFloatBase
	{
	public:
		class FName                                                ParamName;                                               // 0x0098(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S73I[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackFloatProp
	 * Size -> 0x0010 (FullSize[0x00A8] - InheritedSize[0x0098])
	 */
	class UInterpTrackFloatProp : public UInterpTrackFloatBase
	{
	public:
		class FName                                                PropertyName;                                            // 0x0098(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QLES[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstAnimControl
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstAnimControl : public UInterpTrackInst
	{
	public:
		float                                                      LastUpdatePosition;                                      // 0x0030(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W933[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstAudioMaster
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstAudioMaster : public UInterpTrackInst
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstProperty
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstProperty : public UInterpTrackInst
	{
	public:
		unsigned char                                              InterpProperty[0x20];                                    // 0x0030(0x0020) UNKNOWN PROPERTY: FieldPathProperty
		class UObject*                                             PropertyOuterObjectInst;                                 // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstBoolProp
	 * Size -> 0x0018 (FullSize[0x0070] - InheritedSize[0x0058])
	 */
	class UInterpTrackInstBoolProp : public UInterpTrackInstProperty
	{
	public:
		unsigned char                                              UnknownData_W0WT[0x10];                                  // 0x0058(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       ResetBool;                                               // 0x0068(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q08P[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstColorProp
	 * Size -> 0x0010 (FullSize[0x0068] - InheritedSize[0x0058])
	 */
	class UInterpTrackInstColorProp : public UInterpTrackInstProperty
	{
	public:
		unsigned char                                              UnknownData_9JIU[0x8];                                   // 0x0058(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FColor                                              ResetColor;                                              // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S1ZC[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstColorScale
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstColorScale : public UInterpTrackInst
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstDirector
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstDirector : public UInterpTrackInst
	{
	public:
		class AActor*                                              OldViewTarget;                                           // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstEvent
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstEvent : public UInterpTrackInst
	{
	public:
		float                                                      LastUpdatePosition;                                      // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WVWP[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstFade
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstFade : public UInterpTrackInst
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstFloatAnimBPParam
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstFloatAnimBPParam : public UInterpTrackInst
	{
	public:
		class UAnimInstance*                                       AnimScriptInstance;                                      // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResetFloat;                                              // 0x0038(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AAC4[0xC];                                   // 0x003C(0x000C) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstFloatMaterialParam
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstFloatMaterialParam : public UInterpTrackInst
	{
	public:
		TArray<class UMaterialInstanceDynamic*>                    materialInstances;                                       // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<float>                                              ResetFloats;                                             // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FPrimitiveMaterialRef>                       PrimitiveMaterialRefs;                                   // 0x0050(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UInterpTrackFloatMaterialParam*                      InstancedTrack;                                          // 0x0060(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstFloatParticleParam
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstFloatParticleParam : public UInterpTrackInst
	{
	public:
		float                                                      ResetFloat;                                              // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1P7T[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstFloatProp
	 * Size -> 0x0010 (FullSize[0x0068] - InheritedSize[0x0058])
	 */
	class UInterpTrackInstFloatProp : public UInterpTrackInstProperty
	{
	public:
		unsigned char                                              UnknownData_9DS2[0x8];                                   // 0x0058(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ResetFloat;                                              // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VZZJ[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstLinearColorProp
	 * Size -> 0x0018 (FullSize[0x0070] - InheritedSize[0x0058])
	 */
	class UInterpTrackInstLinearColorProp : public UInterpTrackInstProperty
	{
	public:
		unsigned char                                              UnknownData_4KCK[0x8];                                   // 0x0058(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        ResetColor;                                              // 0x0060(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstMove
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstMove : public UInterpTrackInst
	{
	public:
		struct FVector                                             ResetLocation;                                           // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            ResetRotation;                                           // 0x003C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstParticleReplay
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstParticleReplay : public UInterpTrackInst
	{
	public:
		float                                                      LastUpdatePosition;                                      // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9U2O[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstSlomo
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstSlomo : public UInterpTrackInst
	{
	public:
		float                                                      OldTimeDilation;                                         // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8IB9[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstSound
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstSound : public UInterpTrackInst
	{
	public:
		float                                                      LastUpdatePosition;                                      // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2B47[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAudioComponent*                                     PlayAudioComp;                                           // 0x0038(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstToggle
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstToggle : public UInterpTrackInst
	{
	public:
		ETrackToggleAction                                         action;                                                  // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XMV8[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastUpdatePosition;                                      // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSavedActiveState : 1;                                   // 0x0038(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0WA2[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstVectorMaterialParam
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstVectorMaterialParam : public UInterpTrackInst
	{
	public:
		TArray<class UMaterialInstanceDynamic*>                    materialInstances;                                       // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FVector>                                     ResetVectors;                                            // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FPrimitiveMaterialRef>                       PrimitiveMaterialRefs;                                   // 0x0050(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UInterpTrackVectorMaterialParam*                     InstancedTrack;                                          // 0x0060(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstVectorProp
	 * Size -> 0x0018 (FullSize[0x0070] - InheritedSize[0x0058])
	 */
	class UInterpTrackInstVectorProp : public UInterpTrackInstProperty
	{
	public:
		unsigned char                                              UnknownData_CN6Q[0x8];                                   // 0x0058(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             ResetVector;                                             // 0x0060(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9M88[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackInstVisibility
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UInterpTrackInstVisibility : public UInterpTrackInst
	{
	public:
		EVisibilityTrackAction                                     action;                                                  // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DQ8Z[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastUpdatePosition;                                      // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackLinearColorBase
	 * Size -> 0x0020 (FullSize[0x0098] - InheritedSize[0x0078])
	 */
	class UInterpTrackLinearColorBase : public UInterpTrack
	{
	public:
		struct FInterpCurveLinearColor                             LinearColorTrack;                                        // 0x0078(0x0018) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurveTension;                                            // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CAKJ[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackLinearColorProp
	 * Size -> 0x0010 (FullSize[0x00A8] - InheritedSize[0x0098])
	 */
	class UInterpTrackLinearColorProp : public UInterpTrackLinearColorBase
	{
	public:
		class FName                                                PropertyName;                                            // 0x0098(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0ZOC[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackMove
	 * Size -> 0x0060 (FullSize[0x00D8] - InheritedSize[0x0078])
	 */
	class UInterpTrackMove : public UInterpTrack
	{
	public:
		struct FInterpCurveVector                                  PosTrack;                                                // 0x0078(0x0018) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FInterpCurveVector                                  EulerTrack;                                              // 0x0090(0x0018) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FInterpLookupTrack                                  LookupTrack;                                             // 0x00A8(0x0010) NativeAccessSpecifierPublic
		class FName                                                LookAtGroupName;                                         // 0x00B8(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LinCurveTension;                                         // 0x00C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AngCurveTension;                                         // 0x00C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseQuatInterpolation : 1;                               // 0x00CC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShowArrowAtKeys : 1;                                    // 0x00CC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableMovement : 1;                                    // 0x00CC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShowTranslationOnCurveEd : 1;                           // 0x00CC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShowRotationOnCurveEd : 1;                              // 0x00CC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHide3DTrack : 1;                                        // 0x00CC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W1DY[0x3];                                   // 0x00CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EInterpTrackMoveRotMode                                    RotMode;                                                 // 0x00D0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MVWL[0x7];                                   // 0x00D1(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackMoveAxis
	 * Size -> 0x0018 (FullSize[0x00B0] - InheritedSize[0x0098])
	 */
	class UInterpTrackMoveAxis : public UInterpTrackFloatBase
	{
	public:
		EInterpMoveAxis                                            MoveAxis;                                                // 0x0098(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZIJM[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FInterpLookupTrack                                  LookupTrack;                                             // 0x00A0(0x0010) NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackParticleReplay
	 * Size -> 0x0010 (FullSize[0x0088] - InheritedSize[0x0078])
	 */
	class UInterpTrackParticleReplay : public UInterpTrack
	{
	public:
		TArray<struct FParticleReplayTrackKey>                     TrackKeys;                                               // 0x0078(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackSlomo
	 * Size -> 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
	 */
	class UInterpTrackSlomo : public UInterpTrackFloatBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackSound
	 * Size -> 0x0018 (FullSize[0x00B0] - InheritedSize[0x0098])
	 */
	class UInterpTrackSound : public UInterpTrackVectorBase
	{
	public:
		TArray<struct FSoundTrackKey>                              Sounds;                                                  // 0x0098(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bPlayOnReverse : 1;                                      // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bContinueSoundOnMatineeEnd : 1;                          // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSuppressSubtitles : 1;                                  // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTreatAsDialogue : 1;                                    // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAttach : 1;                                             // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QN2D[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackToggle
	 * Size -> 0x0018 (FullSize[0x0090] - InheritedSize[0x0078])
	 */
	class UInterpTrackToggle : public UInterpTrack
	{
	public:
		TArray<struct FToggleTrackKey>                             ToggleTrack;                                             // 0x0078(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bActivateSystemEachUpdate : 1;                           // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bActivateWithJustAttachedFlag : 1;                       // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFireEventsWhenForwards : 1;                             // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFireEventsWhenBackwards : 1;                            // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFireEventsWhenJumpingForwards : 1;                      // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JWGS[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackVectorMaterialParam
	 * Size -> 0x0020 (FullSize[0x00B8] - InheritedSize[0x0098])
	 */
	class UInterpTrackVectorMaterialParam : public UInterpTrackVectorBase
	{
	public:
		TArray<class UMaterialInterface*>                          TargetMaterials;                                         // 0x0098(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                ParamName;                                               // 0x00A8(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TCWU[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackVectorProp
	 * Size -> 0x0010 (FullSize[0x00A8] - InheritedSize[0x0098])
	 */
	class UInterpTrackVectorProp : public UInterpTrackVectorBase
	{
	public:
		class FName                                                PropertyName;                                            // 0x0098(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_85MA[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.InterpTrackVisibility
	 * Size -> 0x0018 (FullSize[0x0090] - InheritedSize[0x0078])
	 */
	class UInterpTrackVisibility : public UInterpTrack
	{
	public:
		TArray<struct FVisibilityTrackKey>                         VisibilityTrack;                                         // 0x0078(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bFireEventsWhenForwards : 1;                             // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFireEventsWhenBackwards : 1;                            // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFireEventsWhenJumpingForwards : 1;                      // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X5U5[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.IntSerialization
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class UIntSerialization : public UObject
	{
	public:
		uint16_t                                                   UnsignedInt16Variable;                                   // 0x0030(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ME92[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   UnsignedInt32Variable;                                   // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint64_t                                                   UnsignedInt64Variable;                                   // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     SignedInt8Variable;                                      // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q8WY[0x1];                                   // 0x0041(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int16_t                                                    SignedInt16Variable;                                     // 0x0042(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I787[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    SignedInt64Variable;                                     // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnsignedInt8Variable;                                    // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KL3S[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SignedInt32Variable;                                     // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.KillZVolume
	 * Size -> 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
	 */
	class AKillZVolume : public APhysicsVolume
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.KismetArrayLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UKismetArrayLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_SetArrayPropertyByName(class UObject* Object, const class FName& PropertyName, TArray<int32_t> value);
		void STATIC_FilterArray(TArray<class AActor*> TargetArray, class UClass* FilterClass, TArray<class AActor*>* FilteredArray);
		void STATIC_Array_Swap(TArray<int32_t> TargetArray, int32_t FirstIndex, int32_t SecondIndex);
		void STATIC_Array_Shuffle(TArray<int32_t> TargetArray);
		void STATIC_Array_Set(TArray<int32_t> TargetArray, int32_t Index, int32_t Item, bool bSizeToFit);
		void STATIC_Array_Reverse(TArray<int32_t> TargetArray);
		void STATIC_Array_Resize(TArray<int32_t> TargetArray, int32_t Size);
		bool STATIC_Array_RemoveItem(TArray<int32_t> TargetArray, int32_t Item);
		void STATIC_Array_Remove(TArray<int32_t> TargetArray, int32_t IndexToRemove);
		void STATIC_Array_RandomFromStream(TArray<int32_t> TargetArray, struct FRandomStream* RandomStream, int32_t* OutItem, int32_t* OutIndex);
		void STATIC_Array_Random(TArray<int32_t> TargetArray, int32_t* OutItem, int32_t* OutIndex);
		int32_t STATIC_Array_Length(TArray<int32_t> TargetArray);
		int32_t STATIC_Array_LastIndex(TArray<int32_t> TargetArray);
		bool STATIC_Array_IsValidIndex(TArray<int32_t> TargetArray, int32_t IndexToTest);
		void STATIC_Array_Insert(TArray<int32_t> TargetArray, int32_t NewItem, int32_t Index);
		bool STATIC_Array_Identical(TArray<int32_t> ArrayA, TArray<int32_t> ArrayB);
		void STATIC_Array_Get(TArray<int32_t> TargetArray, int32_t Index, int32_t* Item);
		int32_t STATIC_Array_Find(TArray<int32_t> TargetArray, int32_t ItemToFind);
		bool STATIC_Array_Contains(TArray<int32_t> TargetArray, int32_t ItemToFind);
		void STATIC_Array_Clear(TArray<int32_t> TargetArray);
		void STATIC_Array_Append(TArray<int32_t> TargetArray, TArray<int32_t> SourceArray);
		int32_t STATIC_Array_AddUnique(TArray<int32_t> TargetArray, int32_t NewItem);
		int32_t STATIC_Array_Add(TArray<int32_t> TargetArray, int32_t NewItem);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.KismetGuidLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UKismetGuidLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_Parse_StringToGuid(const class FString& GuidString, struct FGuid* OutGuid, bool* success);
		bool STATIC_NotEqual_GuidGuid(const struct FGuid& A, const struct FGuid& B);
		struct FGuid STATIC_NewGuid();
		bool STATIC_IsValid_Guid(const struct FGuid& InGuid);
		void STATIC_Invalidate_Guid(struct FGuid* InGuid);
		bool STATIC_EqualEqual_GuidGuid(const struct FGuid& A, const struct FGuid& B);
		class FString STATIC_Conv_GuidToString(const struct FGuid& InGuid);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.KismetInputLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UKismetInputLibrary : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_PointerEvent_IsTouchEvent(const struct FPointerEvent& Input);
		bool STATIC_PointerEvent_IsMouseButtonDown(const struct FPointerEvent& Input, const struct FKey& MouseButton);
		float STATIC_PointerEvent_GetWheelDelta(const struct FPointerEvent& Input);
		int32_t STATIC_PointerEvent_GetUserIndex(const struct FPointerEvent& Input);
		int32_t STATIC_PointerEvent_GetTouchpadIndex(const struct FPointerEvent& Input);
		struct FVector2D STATIC_PointerEvent_GetScreenSpacePosition(const struct FPointerEvent& Input);
		int32_t STATIC_PointerEvent_GetPointerIndex(const struct FPointerEvent& Input);
		struct FVector2D STATIC_PointerEvent_GetLastScreenSpacePosition(const struct FPointerEvent& Input);
		ESlateGesture STATIC_PointerEvent_GetGestureType(const struct FPointerEvent& Input);
		struct FVector2D STATIC_PointerEvent_GetGestureDelta(const struct FPointerEvent& Input);
		struct FKey STATIC_PointerEvent_GetEffectingButton(const struct FPointerEvent& Input);
		struct FVector2D STATIC_PointerEvent_GetCursorDelta(const struct FPointerEvent& Input);
		bool STATIC_Key_IsVectorAxis(const struct FKey& Key);
		bool STATIC_Key_IsValid(const struct FKey& Key);
		bool STATIC_Key_IsMouseButton(const struct FKey& Key);
		bool STATIC_Key_IsModifierKey(const struct FKey& Key);
		bool STATIC_Key_IsKeyboardKey(const struct FKey& Key);
		bool STATIC_Key_IsGamepadKey(const struct FKey& Key);
		bool STATIC_Key_IsDigital(const struct FKey& Key);
		bool STATIC_Key_IsButtonAxis(const struct FKey& Key);
		bool STATIC_Key_IsAxis3D(const struct FKey& Key);
		bool STATIC_Key_IsAxis2D(const struct FKey& Key);
		bool STATIC_Key_IsAxis1D(const struct FKey& Key);
		bool STATIC_Key_IsAnalog(const struct FKey& Key);
		EUINavigation STATIC_Key_GetNavigationDirectionFromKey(const struct FKeyEvent& InKeyEvent);
		EUINavigation STATIC_Key_GetNavigationDirectionFromAnalog(const struct FAnalogInputEvent& InAnalogEvent);
		EUINavigationAction STATIC_Key_GetNavigationActionFromKey(const struct FKeyEvent& InKeyEvent);
		EUINavigationAction STATIC_Key_GetNavigationAction(const struct FKey& InKey);
		class FText STATIC_Key_GetDisplayName(const struct FKey& Key);
		bool STATIC_InputEvent_IsShiftDown(const struct FInputEvent& Input);
		bool STATIC_InputEvent_IsRightShiftDown(const struct FInputEvent& Input);
		bool STATIC_InputEvent_IsRightControlDown(const struct FInputEvent& Input);
		bool STATIC_InputEvent_IsRightCommandDown(const struct FInputEvent& Input);
		bool STATIC_InputEvent_IsRightAltDown(const struct FInputEvent& Input);
		bool STATIC_InputEvent_IsRepeat(const struct FInputEvent& Input);
		bool STATIC_InputEvent_IsLeftShiftDown(const struct FInputEvent& Input);
		bool STATIC_InputEvent_IsLeftControlDown(const struct FInputEvent& Input);
		bool STATIC_InputEvent_IsLeftCommandDown(const struct FInputEvent& Input);
		bool STATIC_InputEvent_IsLeftAltDown(const struct FInputEvent& Input);
		bool STATIC_InputEvent_IsControlDown(const struct FInputEvent& Input);
		bool STATIC_InputEvent_IsCommandDown(const struct FInputEvent& Input);
		bool STATIC_InputEvent_IsAltDown(const struct FInputEvent& Input);
		class FText STATIC_InputChord_GetDisplayName(const struct FInputChord& Key);
		int32_t STATIC_GetUserIndex(const struct FKeyEvent& Input);
		struct FKey STATIC_GetKey(const struct FKeyEvent& Input);
		float STATIC_GetAnalogValue(const struct FAnalogInputEvent& Input);
		bool STATIC_EqualEqual_KeyKey(const struct FKey& A, const struct FKey& B);
		bool STATIC_EqualEqual_InputChordInputChord(const struct FInputChord& A, const struct FInputChord& B);
		void STATIC_CalibrateTilt();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.KismetInternationalizationLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UKismetInternationalizationLibrary : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_SetCurrentLocale(const class FString& Culture, bool SaveToConfig);
		bool STATIC_SetCurrentLanguageAndLocale(const class FString& Culture, bool SaveToConfig);
		bool STATIC_SetCurrentLanguage(const class FString& Culture, bool SaveToConfig);
		bool STATIC_SetCurrentCulture(const class FString& Culture, bool SaveToConfig);
		bool STATIC_SetCurrentAssetGroupCulture(const class FName& AssetGroup, const class FString& Culture, bool SaveToConfig);
		class FString STATIC_GetSuitableCulture(TArray<class FString> AvailableCultures, const class FString& CultureToMatch, const class FString& FallbackCulture);
		class FString STATIC_GetNativeCulture(ELocalizedTextSourceCategory TextCategory);
		TArray<class FString> STATIC_GetLocalizedCultures(bool IncludeGame, bool IncludeEngine, bool IncludeEditor, bool IncludeAdditional);
		class FString STATIC_GetCurrentLocale();
		class FString STATIC_GetCurrentLanguage();
		class FString STATIC_GetCurrentCulture();
		class FString STATIC_GetCurrentAssetGroupCulture(const class FName& AssetGroup);
		class FString STATIC_GetCultureDisplayName(const class FString& Culture, bool Localized);
		void STATIC_ClearCurrentAssetGroupCulture(const class FName& AssetGroup, bool SaveToConfig);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.KismetMaterialLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UKismetMaterialLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_SetVectorParameterValue(class UObject* WorldContextObject, class UMaterialParameterCollection* Collection, const class FName& ParameterName, const struct FLinearColor& ParameterValue);
		void STATIC_SetScalarParameterValue(class UObject* WorldContextObject, class UMaterialParameterCollection* Collection, const class FName& ParameterName, float ParameterValue);
		struct FLinearColor STATIC_GetVectorParameterValue(class UObject* WorldContextObject, class UMaterialParameterCollection* Collection, const class FName& ParameterName);
		float STATIC_GetScalarParameterValue(class UObject* WorldContextObject, class UMaterialParameterCollection* Collection, const class FName& ParameterName);
		class UMaterialInstanceDynamic* STATIC_CreateDynamicMaterialInstance(class UObject* WorldContextObject, class UMaterialInterface* Parent, const class FName& OptionalName, EMIDCreationFlags CreationFlags);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.KismetMathLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UKismetMathLibrary : public UBlueprintFunctionLibrary
	{
	public:
		int32_t STATIC_Xor_IntInt(int32_t A, int32_t B);
		int64_t STATIC_Xor_Int64Int64(int64_t A, int64_t B);
		int32_t STATIC_Wrap(int32_t value, int32_t Min, int32_t Max);
		struct FVector STATIC_WeightedMovingAverage_FVector(const struct FVector& CurrentSample, const struct FVector& PreviousSample, float Weight);
		struct FRotator STATIC_WeightedMovingAverage_FRotator(const struct FRotator& CurrentSample, const struct FRotator& PreviousSample, float Weight);
		float STATIC_WeightedMovingAverage_Float(float CurrentSample, float PreviousSample, float Weight);
		float STATIC_VSizeXYSquared(const struct FVector& A);
		float STATIC_VSizeXY(const struct FVector& A);
		float STATIC_VSizeSquared(const struct FVector& A);
		float STATIC_VSize2DSquared(const struct FVector2D& A);
		float STATIC_VSize2D(const struct FVector2D& A);
		float STATIC_VSize(const struct FVector& A);
		struct FVector STATIC_VLerp(const struct FVector& A, const struct FVector& B, float alpha);
		struct FVector STATIC_VInterpTo_Constant(const struct FVector& Current, const struct FVector& Target, float DeltaTime, float InterpSpeed);
		struct FVector STATIC_VInterpTo(const struct FVector& Current, const struct FVector& Target, float DeltaTime, float InterpSpeed);
		struct FVector STATIC_VectorSpringInterp(const struct FVector& Current, const struct FVector& Target, struct FVectorSpringState* SpringState, float Stiffness, float CriticalDampingFactor, float DeltaTime, float Mass);
		struct FVector STATIC_Vector_Zero();
		struct FVector STATIC_Vector_Up();
		void STATIC_Vector_UnwindEuler(struct FVector* A);
		struct FVector2D STATIC_Vector_UnitCartesianToSpherical(const struct FVector& A);
		struct FVector STATIC_Vector_ToRadians(const struct FVector& A);
		struct FVector STATIC_Vector_ToDegrees(const struct FVector& A);
		struct FVector STATIC_Vector_SnappedToGrid(const struct FVector& InVect, float InGridSize);
		void STATIC_Vector_Set(struct FVector* A, float X, float Y, float Z);
		struct FVector STATIC_Vector_Right();
		struct FVector STATIC_Vector_Reciprocal(const struct FVector& A);
		struct FVector STATIC_Vector_ProjectOnToNormal(const struct FVector& V, const struct FVector& InNormal);
		struct FVector STATIC_Vector_One();
		struct FVector STATIC_Vector_NormalUnsafe(const struct FVector& A);
		void STATIC_Vector_Normalize(struct FVector* A, float Tolerance);
		struct FVector STATIC_Vector_Normal2D(const struct FVector& A, float Tolerance);
		struct FVector STATIC_Vector_MirrorByPlane(const struct FVector& A, const struct FPlane& InPlane);
		struct FVector STATIC_Vector_Left();
		bool STATIC_Vector_IsZero(const struct FVector& A);
		bool STATIC_Vector_IsUnit(const struct FVector& A, float SquaredLenthTolerance);
		bool STATIC_Vector_IsUniform(const struct FVector& A, float Tolerance);
		bool STATIC_Vector_IsNormal(const struct FVector& A);
		bool STATIC_Vector_IsNearlyZero(const struct FVector& A, float Tolerance);
		bool STATIC_Vector_IsNAN(const struct FVector& A);
		float STATIC_Vector_HeadingAngle(const struct FVector& A);
		struct FVector STATIC_Vector_GetSignVector(const struct FVector& A);
		struct FVector STATIC_Vector_GetProjection(const struct FVector& A);
		float STATIC_Vector_GetAbsMin(const struct FVector& A);
		float STATIC_Vector_GetAbsMax(const struct FVector& A);
		struct FVector STATIC_Vector_GetAbs(const struct FVector& A);
		struct FVector STATIC_Vector_Forward();
		struct FVector STATIC_Vector_Down();
		float STATIC_Vector_DistanceSquared(const struct FVector& v1, const struct FVector& v2);
		float STATIC_Vector_Distance2DSquared(const struct FVector& v1, const struct FVector& v2);
		float STATIC_Vector_Distance2D(const struct FVector& v1, const struct FVector& v2);
		float STATIC_Vector_Distance(const struct FVector& v1, const struct FVector& v2);
		float STATIC_Vector_CosineAngle2D(const struct FVector& A, const struct FVector& B);
		struct FVector STATIC_Vector_ComponentMin(const struct FVector& A, const struct FVector& B);
		struct FVector STATIC_Vector_ComponentMax(const struct FVector& A, const struct FVector& B);
		struct FVector STATIC_Vector_ClampSizeMax2D(const struct FVector& A, float Max);
		struct FVector STATIC_Vector_ClampSizeMax(const struct FVector& A, float Max);
		struct FVector STATIC_Vector_ClampSize2D(const struct FVector& A, float Min, float Max);
		struct FVector STATIC_Vector_BoundedToCube(const struct FVector& InVect, float InRadius);
		struct FVector STATIC_Vector_BoundedToBox(const struct FVector& InVect, const struct FVector& InBoxMin, const struct FVector& InBoxMax);
		struct FVector STATIC_Vector_Backward();
		void STATIC_Vector_Assign(struct FVector* A, const struct FVector& InVector);
		void STATIC_Vector_AddBounded(struct FVector* A, const struct FVector& InAddVect, float InRadius);
		struct FVector4 STATIC_Vector4_Zero();
		float STATIC_Vector4_SizeSquared3(const struct FVector4& A);
		float STATIC_Vector4_SizeSquared(const struct FVector4& A);
		float STATIC_Vector4_Size3(const struct FVector4& A);
		float STATIC_Vector4_Size(const struct FVector4& A);
		void STATIC_Vector4_Set(struct FVector4* A, float X, float Y, float Z, float W);
		struct FVector4 STATIC_Vector4_NormalUnsafe3(const struct FVector4& A);
		void STATIC_Vector4_Normalize3(struct FVector4* A, float Tolerance);
		struct FVector4 STATIC_Vector4_Normal3(const struct FVector4& A, float Tolerance);
		struct FVector4 STATIC_Vector4_Negated(const struct FVector4& A);
		struct FVector4 STATIC_Vector4_MirrorByVector3(const struct FVector4& Direction, const struct FVector4& SurfaceNormal);
		bool STATIC_Vector4_IsZero(const struct FVector4& A);
		bool STATIC_Vector4_IsUnit3(const struct FVector4& A, float SquaredLenthTolerance);
		bool STATIC_Vector4_IsNormal3(const struct FVector4& A);
		bool STATIC_Vector4_IsNearlyZero3(const struct FVector4& A, float Tolerance);
		bool STATIC_Vector4_IsNAN(const struct FVector4& A);
		float STATIC_Vector4_DotProduct3(const struct FVector4& A, const struct FVector4& B);
		float STATIC_Vector4_DotProduct(const struct FVector4& A, const struct FVector4& B);
		struct FVector4 STATIC_Vector4_CrossProduct3(const struct FVector4& A, const struct FVector4& B);
		void STATIC_Vector4_Assign(struct FVector4* A, const struct FVector4& InVector);
		struct FVector2D STATIC_Vector2DInterpTo_Constant(const struct FVector2D& Current, const struct FVector2D& Target, float DeltaTime, float InterpSpeed);
		struct FVector2D STATIC_Vector2DInterpTo(const struct FVector2D& Current, const struct FVector2D& Target, float DeltaTime, float InterpSpeed);
		struct FVector2D STATIC_Vector2D_Zero();
		struct FVector2D STATIC_Vector2D_Unit45Deg();
		struct FVector2D STATIC_Vector2D_One();
		struct FVector STATIC_VEase(const struct FVector& A, const struct FVector& B, float alpha, EEasingFunc EasingFunc, float BlendExp, int32_t Steps);
		struct FDateTime STATIC_UtcNow();
		struct FVector4 STATIC_TransformVector4(const struct FMatrix& Matrix, const struct FVector4& Vec4);
		struct FRotator STATIC_TransformRotation(const struct FTransform& T, const struct FRotator& Rotation);
		struct FVector STATIC_TransformLocation(const struct FTransform& T, const struct FVector& Location);
		struct FVector STATIC_TransformDirection(const struct FTransform& T, const struct FVector& Direction);
		float STATIC_Transform_Determinant(const struct FTransform& Transform);
		struct FVector2D STATIC_ToSign2D(const struct FVector2D& A);
		struct FVector2D STATIC_ToRounded2D(const struct FVector2D& A);
		void STATIC_ToDirectionAndLength2D(const struct FVector2D& A, struct FVector2D* OutDir, float* OutLength);
		struct FDateTime STATIC_Today();
		struct FTransform STATIC_TLerp(const struct FTransform& A, const struct FTransform& B, float alpha, ELerpInterpolationMode InterpMode);
		struct FTransform STATIC_TInterpTo(const struct FTransform& Current, const struct FTransform& Target, float DeltaTime, float InterpSpeed);
		struct FTimespan STATIC_TimespanZeroValue();
		float STATIC_TimespanRatio(const struct FTimespan& A, const struct FTimespan& B);
		struct FTimespan STATIC_TimespanMinValue();
		struct FTimespan STATIC_TimespanMaxValue();
		bool STATIC_TimespanFromString(const class FString& TimespanString, struct FTimespan* Result);
		struct FTransform STATIC_TEase(const struct FTransform& A, const struct FTransform& B, float alpha, EEasingFunc EasingFunc, float BlendExp, int32_t Steps);
		float STATIC_Tan(float A);
		struct FVector STATIC_Subtract_VectorVector(const struct FVector& A, const struct FVector& B);
		struct FVector STATIC_Subtract_VectorInt(const struct FVector& A, int32_t B);
		struct FVector STATIC_Subtract_VectorFloat(const struct FVector& A, float B);
		struct FVector4 STATIC_Subtract_Vector4Vector4(const struct FVector4& A, const struct FVector4& B);
		struct FVector2D STATIC_Subtract_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B);
		struct FVector2D STATIC_Subtract_Vector2DFloat(const struct FVector2D& A, float B);
		struct FTimespan STATIC_Subtract_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);
		struct FQuat STATIC_Subtract_QuatQuat(const struct FQuat& A, const struct FQuat& B);
		struct FLinearColor STATIC_Subtract_LinearColorLinearColor(const struct FLinearColor& A, const struct FLinearColor& B);
		struct FIntPoint STATIC_Subtract_IntPointIntPoint(const struct FIntPoint& A, const struct FIntPoint& B);
		struct FIntPoint STATIC_Subtract_IntPointInt(const struct FIntPoint& A, int32_t B);
		int32_t STATIC_Subtract_IntInt(int32_t A, int32_t B);
		int64_t STATIC_Subtract_Int64Int64(int64_t A, int64_t B);
		float STATIC_Subtract_FloatFloat(float A, float B);
		struct FDateTime STATIC_Subtract_DateTimeTimespan(const struct FDateTime& A, const struct FTimespan& B);
		struct FTimespan STATIC_Subtract_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);
		unsigned char STATIC_Subtract_ByteByte(unsigned char A, unsigned char B);
		float STATIC_Square(float A);
		float STATIC_Sqrt(float A);
		struct FVector STATIC_Spherical2DToUnitCartesian(const struct FVector2D& A);
		float STATIC_Sin(float A);
		int64_t STATIC_SignOfInteger64(int64_t A);
		int32_t STATIC_SignOfInteger(int32_t A);
		float STATIC_SignOfFloat(float A);
		void STATIC_SetRandomStreamSeed(struct FRandomStream* Stream, int32_t NewSeed);
		void STATIC_Set2D(struct FVector2D* A, float X, float Y);
		struct FVector STATIC_SelectVector(const struct FVector& A, const struct FVector& B, bool bPickA);
		struct FTransform STATIC_SelectTransform(const struct FTransform& A, const struct FTransform& B, bool bPickA);
		class FString STATIC_SelectString(const class FString& A, const class FString& B, bool bPickA);
		struct FRotator STATIC_SelectRotator(const struct FRotator& A, const struct FRotator& B, bool bPickA);
		class UObject* STATIC_SelectObject(class UObject* A, class UObject* B, bool bSelectA);
		int32_t STATIC_SelectInt(int32_t A, int32_t B, bool bPickA);
		float STATIC_SelectFloat(float A, float B, bool bPickA);
		struct FLinearColor STATIC_SelectColor(const struct FLinearColor& A, const struct FLinearColor& B, bool bPickA);
		class UClass* STATIC_SelectClass(class UClass* A, class UClass* B, bool bSelectA);
		void STATIC_SeedRandomStream(struct FRandomStream* Stream);
		float STATIC_SafeDivide(float A, float B);
		int64_t STATIC_Round64(float A);
		int32_t STATIC_Round(float A);
		struct FRotator STATIC_RotatorFromAxisAndAngle(const struct FVector& Axis, float Angle);
		struct FVector STATIC_RotateAngleAxis(const struct FVector& InVect, float AngleDeg, const struct FVector& Axis);
		struct FRotator STATIC_RLerp(const struct FRotator& A, const struct FRotator& B, float alpha, bool bShortestPath);
		struct FRotator STATIC_RInterpTo_Constant(const struct FRotator& Current, const struct FRotator& Target, float DeltaTime, float InterpSpeed);
		struct FRotator STATIC_RInterpTo(const struct FRotator& Current, const struct FRotator& Target, float DeltaTime, float InterpSpeed);
		void STATIC_RGBToHSV_Vector(const struct FLinearColor& RGB, struct FLinearColor* HSV);
		void STATIC_RGBToHSV(const struct FLinearColor& InColor, float* H, float* S, float* V, float* A);
		struct FLinearColor STATIC_RGBLinearToHSV(const struct FLinearColor& RGB);
		void STATIC_ResetVectorSpringState(struct FVectorSpringState* SpringState);
		void STATIC_ResetRandomStream(const struct FRandomStream& Stream);
		void STATIC_ResetFloatSpringState(struct FFloatSpringState* SpringState);
		struct FRotator STATIC_REase(const struct FRotator& A, const struct FRotator& B, float alpha, bool bShortestPath, EEasingFunc EasingFunc, float BlendExp, int32_t Steps);
		struct FVector STATIC_RandomUnitVectorInEllipticalConeInRadiansFromStream(const struct FVector& ConeDir, float MaxYawInRadians, float MaxPitchInRadians, const struct FRandomStream& Stream);
		struct FVector STATIC_RandomUnitVectorInEllipticalConeInRadians(const struct FVector& ConeDir, float MaxYawInRadians, float MaxPitchInRadians);
		struct FVector STATIC_RandomUnitVectorInEllipticalConeInDegreesFromStream(const struct FVector& ConeDir, float MaxYawInDegrees, float MaxPitchInDegrees, const struct FRandomStream& Stream);
		struct FVector STATIC_RandomUnitVectorInEllipticalConeInDegrees(const struct FVector& ConeDir, float MaxYawInDegrees, float MaxPitchInDegrees);
		struct FVector STATIC_RandomUnitVectorInConeInRadiansFromStream(const struct FVector& ConeDir, float ConeHalfAngleInRadians, const struct FRandomStream& Stream);
		struct FVector STATIC_RandomUnitVectorInConeInRadians(const struct FVector& ConeDir, float ConeHalfAngleInRadians);
		struct FVector STATIC_RandomUnitVectorInConeInDegreesFromStream(const struct FVector& ConeDir, float ConeHalfAngleInDegrees, const struct FRandomStream& Stream);
		struct FVector STATIC_RandomUnitVectorInConeInDegrees(const struct FVector& ConeDir, float ConeHalfAngleInDegrees);
		struct FVector STATIC_RandomUnitVectorFromStream(const struct FRandomStream& Stream);
		struct FVector STATIC_RandomUnitVector();
		struct FRotator STATIC_RandomRotatorFromStream(bool bRoll, const struct FRandomStream& Stream);
		struct FRotator STATIC_RandomRotator(bool bRoll);
		struct FVector STATIC_RandomPointInBoundingBox(const struct FVector& Origin, const struct FVector& BoxExtent);
		int32_t STATIC_RandomIntegerInRangeFromStream(int32_t Min, int32_t Max, const struct FRandomStream& Stream);
		int32_t STATIC_RandomIntegerInRange(int32_t Min, int32_t Max);
		int32_t STATIC_RandomIntegerFromStream(int32_t Max, const struct FRandomStream& Stream);
		int64_t STATIC_RandomInteger64InRange(int64_t Min, int64_t Max);
		int64_t STATIC_RandomInteger64(int64_t Max);
		int32_t STATIC_RandomInteger(int32_t Max);
		float STATIC_RandomFloatInRangeFromStream(float Min, float Max, const struct FRandomStream& Stream);
		float STATIC_RandomFloatInRange(float Min, float Max);
		float STATIC_RandomFloatFromStream(const struct FRandomStream& Stream);
		float STATIC_RandomFloat();
		bool STATIC_RandomBoolWithWeightFromStream(float Weight, const struct FRandomStream& RandomStream);
		bool STATIC_RandomBoolWithWeight(float Weight);
		bool STATIC_RandomBoolFromStream(const struct FRandomStream& Stream);
		bool STATIC_RandomBool();
		float STATIC_RadiansToDegrees(float A);
		struct FVector STATIC_Quat_VectorUp(const struct FQuat& Q);
		struct FVector STATIC_Quat_VectorRight(const struct FQuat& Q);
		struct FVector STATIC_Quat_VectorForward(const struct FQuat& Q);
		struct FVector STATIC_Quat_UnrotateVector(const struct FQuat& Q, const struct FVector& V);
		float STATIC_Quat_SizeSquared(const struct FQuat& Q);
		float STATIC_Quat_Size(const struct FQuat& Q);
		void STATIC_Quat_SetFromEuler(struct FQuat* Q, const struct FVector& Euler);
		void STATIC_Quat_SetComponents(struct FQuat* Q, float X, float Y, float Z, float W);
		struct FRotator STATIC_Quat_Rotator(const struct FQuat& Q);
		struct FVector STATIC_Quat_RotateVector(const struct FQuat& Q, const struct FVector& V);
		struct FQuat STATIC_Quat_Normalized(const struct FQuat& Q, float Tolerance);
		void STATIC_Quat_Normalize(struct FQuat* Q, float Tolerance);
		struct FQuat STATIC_Quat_MakeFromEuler(const struct FVector& Euler);
		struct FQuat STATIC_Quat_Log(const struct FQuat& Q);
		bool STATIC_Quat_IsNormalized(const struct FQuat& Q);
		bool STATIC_Quat_IsNonFinite(const struct FQuat& Q);
		bool STATIC_Quat_IsIdentity(const struct FQuat& Q, float Tolerance);
		bool STATIC_Quat_IsFinite(const struct FQuat& Q);
		struct FQuat STATIC_Quat_Inversed(const struct FQuat& Q);
		struct FQuat STATIC_Quat_Identity();
		struct FVector STATIC_Quat_GetRotationAxis(const struct FQuat& Q);
		struct FVector STATIC_Quat_GetAxisZ(const struct FQuat& Q);
		struct FVector STATIC_Quat_GetAxisY(const struct FQuat& Q);
		struct FVector STATIC_Quat_GetAxisX(const struct FQuat& Q);
		float STATIC_Quat_GetAngle(const struct FQuat& Q);
		struct FQuat STATIC_Quat_Exp(const struct FQuat& Q);
		struct FVector STATIC_Quat_Euler(const struct FQuat& Q);
		void STATIC_Quat_EnforceShortestArcWith(struct FQuat* A, const struct FQuat& B);
		float STATIC_Quat_AngularDistance(const struct FQuat& A, const struct FQuat& B);
		struct FVector STATIC_ProjectVectorOnToVector(const struct FVector& V, const struct FVector& Target);
		struct FVector STATIC_ProjectVectorOnToPlane(const struct FVector& V, const struct FVector& PlaneNormal);
		struct FVector STATIC_ProjectPointOnToPlane(const struct FVector& Point, const struct FVector& PlaneBase, const struct FVector& PlaneNormal);
		bool STATIC_PointsAreCoplanar(TArray<struct FVector> Points, float Tolerance);
		float STATIC_PerlinNoise1D(float value);
		int32_t STATIC_Percent_IntInt(int32_t A, int32_t B);
		float STATIC_Percent_FloatFloat(float A, float B);
		unsigned char STATIC_Percent_ByteByte(unsigned char A, unsigned char B);
		int32_t STATIC_Or_IntInt(int32_t A, int32_t B);
		int64_t STATIC_Or_Int64Int64(int64_t A, int64_t B);
		struct FDateTime STATIC_Now();
		bool STATIC_NotEqualExactly_VectorVector(const struct FVector& A, const struct FVector& B);
		bool STATIC_NotEqualExactly_Vector4Vector4(const struct FVector4& A, const struct FVector4& B);
		bool STATIC_NotEqualExactly_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B);
		bool STATIC_NotEqual_VectorVector(const struct FVector& A, const struct FVector& B, float ErrorTolerance);
		bool STATIC_NotEqual_Vector4Vector4(const struct FVector4& A, const struct FVector4& B, float ErrorTolerance);
		bool STATIC_NotEqual_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B, float ErrorTolerance);
		bool STATIC_NotEqual_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);
		bool STATIC_NotEqual_RotatorRotator(const struct FRotator& A, const struct FRotator& B, float ErrorTolerance);
		bool STATIC_NotEqual_QuatQuat(const struct FQuat& A, const struct FQuat& B, float ErrorTolerance);
		bool STATIC_NotEqual_ObjectObject(class UObject* A, class UObject* B);
		bool STATIC_NotEqual_NameName(const class FName& A, const class FName& B);
		bool STATIC_NotEqual_MatrixMatrix(const struct FMatrix& A, const struct FMatrix& B, float Tolerance);
		bool STATIC_NotEqual_LinearColorLinearColor(const struct FLinearColor& A, const struct FLinearColor& B);
		bool STATIC_NotEqual_IntPointIntPoint(const struct FIntPoint& A, const struct FIntPoint& B);
		bool STATIC_NotEqual_IntInt(int32_t A, int32_t B);
		bool STATIC_NotEqual_Int64Int64(int64_t A, int64_t B);
		bool STATIC_NotEqual_FloatFloat(float A, float B);
		bool STATIC_NotEqual_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);
		bool STATIC_NotEqual_ClassClass(class UClass* A, class UClass* B);
		bool STATIC_NotEqual_ByteByte(unsigned char A, unsigned char B);
		bool STATIC_NotEqual_BoolBool(bool A, bool B);
		bool STATIC_Not_PreBool(bool A);
		int64_t STATIC_Not_Int64(int64_t A);
		int32_t STATIC_Not_Int(int32_t A);
		struct FVector2D STATIC_NormalSafe2D(const struct FVector2D& A, float Tolerance);
		float STATIC_NormalizeToRange(float value, float RangeMin, float RangeMax);
		struct FRotator STATIC_NormalizedDeltaRotator(const struct FRotator& A, const struct FRotator& B);
		float STATIC_NormalizeAxis(float Angle);
		void STATIC_Normalize2D(struct FVector2D* A, float Tolerance);
		struct FVector2D STATIC_Normal2D(const struct FVector2D& A);
		struct FVector STATIC_Normal(const struct FVector& A, float Tolerance);
		struct FVector STATIC_NegateVector(const struct FVector& A);
		struct FRotator STATIC_NegateRotator(const struct FRotator& A);
		struct FVector2D STATIC_Negated2D(const struct FVector2D& A);
		bool STATIC_NearlyEqual_TransformTransform(const struct FTransform& A, const struct FTransform& B, float LocationTolerance, float RotationTolerance, float Scale3DTolerance);
		bool STATIC_NearlyEqual_FloatFloat(float A, float B, float ErrorTolerance);
		float STATIC_MultiplyMultiply_FloatFloat(float Base, float Exp);
		float STATIC_MultiplyByPi(float value);
		struct FVector STATIC_Multiply_VectorVector(const struct FVector& A, const struct FVector& B);
		struct FVector STATIC_Multiply_VectorInt(const struct FVector& A, int32_t B);
		struct FVector STATIC_Multiply_VectorFloat(const struct FVector& A, float B);
		struct FVector4 STATIC_Multiply_Vector4Vector4(const struct FVector4& A, const struct FVector4& B);
		struct FVector2D STATIC_Multiply_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B);
		struct FVector2D STATIC_Multiply_Vector2DFloat(const struct FVector2D& A, float B);
		struct FTimespan STATIC_Multiply_TimespanFloat(const struct FTimespan& A, float Scalar);
		struct FRotator STATIC_Multiply_RotatorInt(const struct FRotator& A, int32_t B);
		struct FRotator STATIC_Multiply_RotatorFloat(const struct FRotator& A, float B);
		struct FQuat STATIC_Multiply_QuatQuat(const struct FQuat& A, const struct FQuat& B);
		struct FMatrix STATIC_Multiply_MatrixMatrix(const struct FMatrix& A, const struct FMatrix& B);
		struct FMatrix STATIC_Multiply_MatrixFloat(const struct FMatrix& A, float B);
		struct FLinearColor STATIC_Multiply_LinearColorLinearColor(const struct FLinearColor& A, const struct FLinearColor& B);
		struct FLinearColor STATIC_Multiply_LinearColorFloat(const struct FLinearColor& A, float B);
		struct FIntPoint STATIC_Multiply_IntPointIntPoint(const struct FIntPoint& A, const struct FIntPoint& B);
		struct FIntPoint STATIC_Multiply_IntPointInt(const struct FIntPoint& A, int32_t B);
		int32_t STATIC_Multiply_IntInt(int32_t A, int32_t B);
		float STATIC_Multiply_IntFloat(int32_t A, float B);
		int64_t STATIC_Multiply_Int64Int64(int64_t A, int64_t B);
		float STATIC_Multiply_FloatFloat(float A, float B);
		unsigned char STATIC_Multiply_ByteByte(unsigned char A, unsigned char B);
		struct FVector STATIC_MirrorVectorByNormal(const struct FVector& InVect, const struct FVector& InNormal);
		void STATIC_MinOfIntArray(TArray<int32_t> IntArray, int32_t* IndexOfMinValue, int32_t* MinValue);
		void STATIC_MinOfFloatArray(TArray<float> FloatArray, int32_t* IndexOfMinValue, float* MinValue);
		void STATIC_MinOfByteArray(TArray<unsigned char> ByteArray, int32_t* IndexOfMinValue, unsigned char* MinValue);
		int64_t STATIC_MinInt64(int64_t A, int64_t B);
		void STATIC_MinimumAreaRectangle(class UObject* WorldContextObject, TArray<struct FVector> InVerts, const struct FVector& SampleSurfaceNormal, struct FVector* OutRectCenter, struct FRotator* OutRectRotation, float* OutSideLengthX, float* OutSideLengthY, bool bDebugDraw);
		int32_t STATIC_Min(int32_t A, int32_t B);
		void STATIC_MaxOfIntArray(TArray<int32_t> IntArray, int32_t* IndexOfMaxValue, int32_t* MaxValue);
		void STATIC_MaxOfFloatArray(TArray<float> FloatArray, int32_t* IndexOfMaxValue, float* MaxValue);
		void STATIC_MaxOfByteArray(TArray<unsigned char> ByteArray, int32_t* IndexOfMaxValue, unsigned char* MaxValue);
		int64_t STATIC_MaxInt64(int64_t A, int64_t B);
		int32_t STATIC_Max(int32_t A, int32_t B);
		struct FVector4 STATIC_Matrix_TransformVector4(const struct FMatrix& M, const struct FVector4& V);
		struct FVector4 STATIC_Matrix_TransformVector(const struct FMatrix& M, const struct FVector& V);
		struct FVector4 STATIC_Matrix_TransformPosition(const struct FMatrix& M, const struct FVector& V);
		struct FQuat STATIC_Matrix_ToQuat(const struct FMatrix& M);
		void STATIC_Matrix_SetOrigin(struct FMatrix* M, const struct FVector& NewOrigin);
		void STATIC_Matrix_SetColumn(struct FMatrix* M, EMatrixColumns Column, const struct FVector& value);
		void STATIC_Matrix_SetAxis(struct FMatrix* M, EAxis Axis, const struct FVector& AxisVector);
		struct FMatrix STATIC_Matrix_ScaleTranslation(const struct FMatrix& M, const struct FVector& Scale3D);
		struct FMatrix STATIC_Matrix_RemoveTranslation(const struct FMatrix& M);
		void STATIC_Matrix_RemoveScaling(struct FMatrix* M, float Tolerance);
		struct FMatrix STATIC_Matrix_Mirror(const struct FMatrix& M, EAxis MirrorAxis, EAxis FlipAxis);
		struct FVector STATIC_Matrix_InverseTransformVector(const struct FMatrix& M, const struct FVector& V);
		struct FVector STATIC_Matrix_InverseTransformPosition(const struct FMatrix& M, const struct FVector& V);
		struct FMatrix STATIC_Matrix_Identity();
		struct FVector STATIC_Matrix_GetUnitAxis(const struct FMatrix& M, EAxis Axis);
		void STATIC_Matrix_GetUnitAxes(const struct FMatrix& M, struct FVector* X, struct FVector* Y, struct FVector* Z);
		struct FMatrix STATIC_Matrix_GetTransposed(const struct FMatrix& M);
		struct FMatrix STATIC_Matrix_GetTransposeAdjoint(const struct FMatrix& M);
		struct FVector STATIC_Matrix_GetScaleVector(const struct FMatrix& M, float Tolerance);
		struct FVector STATIC_Matrix_GetScaledAxis(const struct FMatrix& M, EAxis Axis);
		void STATIC_Matrix_GetScaledAxes(const struct FMatrix& M, struct FVector* X, struct FVector* Y, struct FVector* Z);
		float STATIC_Matrix_GetRotDeterminant(const struct FMatrix& M);
		struct FRotator STATIC_Matrix_GetRotator(const struct FMatrix& M);
		struct FVector STATIC_Matrix_GetOrigin(const struct FMatrix& InMatrix);
		float STATIC_Matrix_GetMaximumAxisScale(const struct FMatrix& M);
		struct FMatrix STATIC_Matrix_GetMatrixWithoutScale(const struct FMatrix& M, float Tolerance);
		struct FMatrix STATIC_Matrix_GetInverse(const struct FMatrix& M);
		bool STATIC_Matrix_GetFrustumTopPlane(const struct FMatrix& M, struct FPlane* OutPlane);
		bool STATIC_Matrix_GetFrustumRightPlane(const struct FMatrix& M, struct FPlane* OutPlane);
		bool STATIC_Matrix_GetFrustumNearPlane(const struct FMatrix& M, struct FPlane* OutPlane);
		bool STATIC_Matrix_GetFrustumLeftPlane(const struct FMatrix& M, struct FPlane* OutPlane);
		bool STATIC_Matrix_GetFrustumFarPlane(const struct FMatrix& M, struct FPlane* OutPlane);
		bool STATIC_Matrix_GetFrustumBottomPlane(const struct FMatrix& M, struct FPlane* OutPlane);
		float STATIC_Matrix_GetDeterminant(const struct FMatrix& M);
		struct FVector STATIC_Matrix_GetColumn(const struct FMatrix& M, EMatrixColumns Column);
		bool STATIC_Matrix_ContainsNaN(const struct FMatrix& M);
		struct FMatrix STATIC_Matrix_ConcatenateTranslation(const struct FMatrix& M, const struct FVector& Translation);
		struct FMatrix STATIC_Matrix_ApplyScale(const struct FMatrix& M, float Scale);
		float STATIC_MapRangeUnclamped(float value, float InRangeA, float InRangeB, float OutRangeA, float OutRangeB);
		float STATIC_MapRangeClamped(float value, float InRangeA, float InRangeB, float OutRangeA, float OutRangeB);
		struct FVector4 STATIC_MakeVector4(float X, float Y, float Z, float W);
		struct FVector2D STATIC_MakeVector2D(float X, float Y);
		struct FVector STATIC_MakeVector(float X, float Y, float Z);
		struct FTransform STATIC_MakeTransform(const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale);
		struct FTimespan STATIC_MakeTimespan2(int32_t Days, int32_t Hours, int32_t Minutes, int32_t Seconds, int32_t FractionNano);
		struct FTimespan STATIC_MakeTimespan(int32_t Days, int32_t Hours, int32_t Minutes, int32_t Seconds, int32_t Milliseconds);
		struct FRotator STATIC_MakeRotFromZY(const struct FVector& Z, const struct FVector& Y);
		struct FRotator STATIC_MakeRotFromZX(const struct FVector& Z, const struct FVector& X);
		struct FRotator STATIC_MakeRotFromZ(const struct FVector& Z);
		struct FRotator STATIC_MakeRotFromYZ(const struct FVector& Y, const struct FVector& Z);
		struct FRotator STATIC_MakeRotFromYX(const struct FVector& Y, const struct FVector& X);
		struct FRotator STATIC_MakeRotFromY(const struct FVector& Y);
		struct FRotator STATIC_MakeRotFromXZ(const struct FVector& X, const struct FVector& Z);
		struct FRotator STATIC_MakeRotFromXY(const struct FVector& X, const struct FVector& Y);
		struct FRotator STATIC_MakeRotFromX(const struct FVector& X);
		struct FRotator STATIC_MakeRotator(float Roll, float Pitch, float Yaw);
		struct FRotator STATIC_MakeRotationFromAxes(const struct FVector& Forward, const struct FVector& Right, const struct FVector& Up);
		struct FTransform STATIC_MakeRelativeTransform(const struct FTransform& A, const struct FTransform& RelativeTo);
		struct FRandomStream STATIC_MakeRandomStream(int32_t InitialSeed);
		struct FQualifiedFrameTime STATIC_MakeQualifiedFrameTime(const struct FFrameNumber& Frame, const struct FFrameRate& FrameRate, float SubFrame);
		float STATIC_MakePulsatingValue(float InCurrentTime, float InPulsesPerSecond, float InPhase);
		struct FPlane STATIC_MakePlaneFromPointAndNormal(const struct FVector& Point, const struct FVector& Normal);
		struct FFrameRate STATIC_MakeFrameRate(int32_t Numerator, int32_t Denominator);
		struct FDateTime STATIC_MakeDateTime(int32_t Year, int32_t Month, int32_t Day, int32_t Hour, int32_t Minute, int32_t second, int32_t Millisecond);
		struct FLinearColor STATIC_MakeColor(float R, float G, float B, float A);
		struct FBox2D STATIC_MakeBox2D(const struct FVector2D& Min, const struct FVector2D& Max);
		struct FBox STATIC_MakeBox(const struct FVector& Min, const struct FVector& Max);
		float STATIC_Loge(float A);
		float STATIC_Log(float A, float Base);
		bool STATIC_LinePlaneIntersection_OriginNormal(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FVector& PlaneOrigin, const struct FVector& PlaneNormal, float* T, struct FVector* Intersection);
		bool STATIC_LinePlaneIntersection(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FPlane& APlane, float* T, struct FVector* Intersection);
		struct FLinearColor STATIC_LinearColorLerpUsingHSV(const struct FLinearColor& A, const struct FLinearColor& B, float alpha);
		struct FLinearColor STATIC_LinearColorLerp(const struct FLinearColor& A, const struct FLinearColor& B, float alpha);
		struct FLinearColor STATIC_LinearColor_Yellow();
		struct FLinearColor STATIC_LinearColor_White();
		struct FLinearColor STATIC_LinearColor_Transparent();
		struct FColor STATIC_LinearColor_ToRGBE(const struct FLinearColor& InLinearColor);
		struct FLinearColor STATIC_LinearColor_ToNewOpacity(const struct FLinearColor& InColor, float InOpacity);
		void STATIC_LinearColor_SetTemperature(struct FLinearColor* InOutColor, float InTemperature);
		void STATIC_LinearColor_SetRGBA(struct FLinearColor* InOutColor, float R, float G, float B, float A);
		void STATIC_LinearColor_SetRandomHue(struct FLinearColor* InOutColor);
		void STATIC_LinearColor_SetFromSRGB(struct FLinearColor* InOutColor, const struct FColor& InSRGB);
		void STATIC_LinearColor_SetFromPow22(struct FLinearColor* InOutColor, const struct FColor& InColor);
		void STATIC_LinearColor_SetFromHSV(struct FLinearColor* InOutColor, float H, float S, float V, float A);
		void STATIC_LinearColor_Set(struct FLinearColor* InOutColor, const struct FLinearColor& InColor);
		struct FLinearColor STATIC_LinearColor_Red();
		struct FColor STATIC_LinearColor_QuantizeRound(const struct FLinearColor& InColor);
		struct FColor STATIC_LinearColor_Quantize(const struct FLinearColor& InColor);
		bool STATIC_LinearColor_IsNearEqual(const struct FLinearColor& A, const struct FLinearColor& B, float Tolerance);
		struct FLinearColor STATIC_LinearColor_Green();
		struct FLinearColor STATIC_LinearColor_Gray();
		float STATIC_LinearColor_GetMin(const struct FLinearColor& InColor);
		float STATIC_LinearColor_GetMax(const struct FLinearColor& InColor);
		float STATIC_LinearColor_GetLuminance(const struct FLinearColor& InColor);
		float STATIC_LinearColor_Distance(const struct FLinearColor& C1, const struct FLinearColor& C2);
		struct FLinearColor STATIC_LinearColor_Desaturated(const struct FLinearColor& InColor, float InDesaturation);
		struct FLinearColor STATIC_LinearColor_Blue();
		struct FLinearColor STATIC_LinearColor_Black();
		struct FVector STATIC_LessLess_VectorRotator(const struct FVector& A, const struct FRotator& B);
		bool STATIC_LessEqual_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);
		bool STATIC_LessEqual_IntInt(int32_t A, int32_t B);
		bool STATIC_LessEqual_Int64Int64(int64_t A, int64_t B);
		bool STATIC_LessEqual_FloatFloat(float A, float B);
		bool STATIC_LessEqual_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);
		bool STATIC_LessEqual_ByteByte(unsigned char A, unsigned char B);
		bool STATIC_Less_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);
		bool STATIC_Less_IntInt(int32_t A, int32_t B);
		bool STATIC_Less_Int64Int64(int64_t A, int64_t B);
		bool STATIC_Less_FloatFloat(float A, float B);
		bool STATIC_Less_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);
		bool STATIC_Less_ByteByte(unsigned char A, unsigned char B);
		float STATIC_Lerp(float A, float B, float alpha);
		bool STATIC_IsZero2D(const struct FVector2D& A);
		bool STATIC_IsPointInBoxWithTransform(const struct FVector& Point, const struct FTransform& BoxWorldTransform, const struct FVector& BoxExtent);
		bool STATIC_IsPointInBox(const struct FVector& Point, const struct FVector& BoxOrigin, const struct FVector& BoxExtent);
		bool STATIC_IsNearlyZero2D(const struct FVector2D& A, float Tolerance);
		bool STATIC_IsMorning(const struct FDateTime& A);
		bool STATIC_IsLeapYear(int32_t Year);
		bool STATIC_IsAfternoon(const struct FDateTime& A);
		struct FTransform STATIC_InvertTransform(const struct FTransform& T);
		struct FRotator STATIC_InverseTransformRotation(const struct FTransform& T, const struct FRotator& Rotation);
		struct FVector STATIC_InverseTransformLocation(const struct FTransform& T, const struct FVector& Location);
		struct FVector STATIC_InverseTransformDirection(const struct FTransform& T, const struct FVector& Direction);
		struct FIntPoint STATIC_IntPoint_Zero();
		struct FIntPoint STATIC_IntPoint_Up();
		struct FIntPoint STATIC_IntPoint_Right();
		struct FIntPoint STATIC_IntPoint_One();
		struct FIntPoint STATIC_IntPoint_Left();
		struct FIntPoint STATIC_IntPoint_Down();
		bool STATIC_InRange_IntInt(int32_t value, int32_t Min, int32_t Max, bool InclusiveMin, bool InclusiveMax);
		bool STATIC_InRange_Int64Int64(int64_t value, int64_t Min, int64_t Max, bool InclusiveMin, bool InclusiveMax);
		bool STATIC_InRange_FloatFloat(float value, float Min, float Max, bool InclusiveMin, bool InclusiveMax);
		float STATIC_Hypotenuse(float Width, float Height);
		struct FLinearColor STATIC_HSVToRGBLinear(const struct FLinearColor& HSV);
		void STATIC_HSVToRGB_Vector(const struct FLinearColor& HSV, struct FLinearColor* RGB);
		struct FLinearColor STATIC_HSVToRGB(float H, float S, float V, float A);
		float STATIC_GridSnap_Float(float Location, float GridSize);
		struct FVector STATIC_GreaterGreater_VectorRotator(const struct FVector& A, const struct FRotator& B);
		bool STATIC_GreaterEqual_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);
		bool STATIC_GreaterEqual_IntInt(int32_t A, int32_t B);
		bool STATIC_GreaterEqual_Int64Int64(int64_t A, int64_t B);
		bool STATIC_GreaterEqual_FloatFloat(float A, float B);
		bool STATIC_GreaterEqual_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);
		bool STATIC_GreaterEqual_ByteByte(unsigned char A, unsigned char B);
		bool STATIC_Greater_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);
		bool STATIC_Greater_IntInt(int32_t A, int32_t B);
		bool STATIC_Greater_Int64Int64(int64_t A, int64_t B);
		bool STATIC_Greater_FloatFloat(float A, float B);
		bool STATIC_Greater_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);
		bool STATIC_Greater_ByteByte(unsigned char A, unsigned char B);
		int32_t STATIC_GetYear(const struct FDateTime& A);
		void STATIC_GetYawPitchFromVector(const struct FVector& InVec, float* Yaw, float* Pitch);
		struct FVector STATIC_GetVectorArrayAverage(TArray<struct FVector> Vectors);
		struct FVector STATIC_GetUpVector(const struct FRotator& InRot);
		float STATIC_GetTotalSeconds(const struct FTimespan& A);
		float STATIC_GetTotalMinutes(const struct FTimespan& A);
		float STATIC_GetTotalMilliseconds(const struct FTimespan& A);
		float STATIC_GetTotalHours(const struct FTimespan& A);
		float STATIC_GetTotalDays(const struct FTimespan& A);
		struct FTimespan STATIC_GetTimeOfDay(const struct FDateTime& A);
		float STATIC_GetTAU();
		void STATIC_GetSlopeDegreeAngles(const struct FVector& MyRightYAxis, const struct FVector& FloorNormal, const struct FVector& UpVector, float* OutSlopePitchDegreeAngle, float* OutSlopeRollDegreeAngle);
		int32_t STATIC_GetSeconds(const struct FTimespan& A);
		int32_t STATIC_GetSecond(const struct FDateTime& A);
		struct FVector2D STATIC_GetRotated2D(const struct FVector2D& A, float AngleDeg);
		struct FVector STATIC_GetRightVector(const struct FRotator& InRot);
		struct FVector STATIC_GetReflectionVector(const struct FVector& Direction, const struct FVector& SurfaceNormal);
		float STATIC_GetPointDistanceToSegment(const struct FVector& Point, const struct FVector& SegmentStart, const struct FVector& SegmentEnd);
		float STATIC_GetPointDistanceToLine(const struct FVector& Point, const struct FVector& LineOrigin, const struct FVector& LineDirection);
		float STATIC_GetPI();
		int32_t STATIC_GetMonth(const struct FDateTime& A);
		int32_t STATIC_GetMinutes(const struct FTimespan& A);
		int32_t STATIC_GetMinute(const struct FDateTime& A);
		float STATIC_GetMinElement(const struct FVector& A);
		float STATIC_GetMin2D(const struct FVector2D& A);
		int32_t STATIC_GetMilliseconds(const struct FTimespan& A);
		int32_t STATIC_GetMillisecond(const struct FDateTime& A);
		float STATIC_GetMaxElement(const struct FVector& A);
		float STATIC_GetMax2D(const struct FVector2D& A);
		int32_t STATIC_GetHours(const struct FTimespan& A);
		int32_t STATIC_GetHour12(const struct FDateTime& A);
		int32_t STATIC_GetHour(const struct FDateTime& A);
		struct FVector STATIC_GetForwardVector(const struct FRotator& InRot);
		struct FTimespan STATIC_GetDuration(const struct FTimespan& A);
		struct FVector STATIC_GetDirectionUnitVector(const struct FVector& From, const struct FVector& To);
		int32_t STATIC_GetDays(const struct FTimespan& A);
		int32_t STATIC_GetDayOfYear(const struct FDateTime& A);
		int32_t STATIC_GetDay(const struct FDateTime& A);
		struct FDateTime STATIC_GetDate(const struct FDateTime& A);
		void STATIC_GetAzimuthAndElevation(const struct FVector& InDirection, const struct FTransform& ReferenceFrame, float* Azimuth, float* Elevation);
		void STATIC_GetAxes(const struct FRotator& A, struct FVector* X, struct FVector* Y, struct FVector* Z);
		float STATIC_GetAbsMax2D(const struct FVector2D& A);
		struct FVector2D STATIC_GetAbs2D(const struct FVector2D& A);
		float STATIC_FWrap(float value, float Min, float Max);
		struct FIntVector STATIC_FTruncVector(const struct FVector& InVector);
		int64_t STATIC_FTrunc64(float A);
		int32_t STATIC_FTrunc(float A);
		struct FTimespan STATIC_FromSeconds(float Seconds);
		struct FTimespan STATIC_FromMinutes(float Minutes);
		struct FTimespan STATIC_FromMilliseconds(float Milliseconds);
		struct FTimespan STATIC_FromHours(float Hours);
		struct FTimespan STATIC_FromDays(float Days);
		float STATIC_Fraction(float A);
		int32_t STATIC_FMod(float Dividend, float Divisor, float* Remainder);
		float STATIC_FMin(float A, float B);
		float STATIC_FMax(float A, float B);
		float STATIC_FloatSpringInterp(float Current, float Target, struct FFloatSpringState* SpringState, float Stiffness, float CriticalDampingFactor, float DeltaTime, float Mass);
		float STATIC_FixedTurn(float InCurrent, float InDesired, float InDeltaRate);
		float STATIC_FInterpTo_Constant(float Current, float Target, float DeltaTime, float InterpSpeed);
		float STATIC_FInterpTo(float Current, float Target, float DeltaTime, float InterpSpeed);
		float STATIC_FInterpEaseInOut(float A, float B, float alpha, float Exponent);
		void STATIC_FindNearestPointsOnLineSegments(const struct FVector& Segment1Start, const struct FVector& Segment1End, const struct FVector& Segment2Start, const struct FVector& Segment2End, struct FVector* Segment1Point, struct FVector* Segment2Point);
		struct FRotator STATIC_FindLookAtRotation(const struct FVector& Start, const struct FVector& Target);
		struct FVector STATIC_FindClosestPointOnSegment(const struct FVector& Point, const struct FVector& SegmentStart, const struct FVector& SegmentEnd);
		struct FVector STATIC_FindClosestPointOnLine(const struct FVector& Point, const struct FVector& LineOrigin, const struct FVector& LineDirection);
		int64_t STATIC_FFloor64(float A);
		int32_t STATIC_FFloor(float A);
		float STATIC_FClamp(float value, float Min, float Max);
		int64_t STATIC_FCeil64(float A);
		int32_t STATIC_FCeil(float A);
		float STATIC_Exp(float A);
		bool STATIC_EqualExactly_VectorVector(const struct FVector& A, const struct FVector& B);
		bool STATIC_EqualExactly_Vector4Vector4(const struct FVector4& A, const struct FVector4& B);
		bool STATIC_EqualExactly_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B);
		bool STATIC_EqualEqual_VectorVector(const struct FVector& A, const struct FVector& B, float ErrorTolerance);
		bool STATIC_EqualEqual_Vector4Vector4(const struct FVector4& A, const struct FVector4& B, float ErrorTolerance);
		bool STATIC_EqualEqual_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B, float ErrorTolerance);
		bool STATIC_EqualEqual_TransformTransform(const struct FTransform& A, const struct FTransform& B);
		bool STATIC_EqualEqual_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);
		bool STATIC_EqualEqual_RotatorRotator(const struct FRotator& A, const struct FRotator& B, float ErrorTolerance);
		bool STATIC_EqualEqual_QuatQuat(const struct FQuat& A, const struct FQuat& B, float Tolerance);
		bool STATIC_EqualEqual_ObjectObject(class UObject* A, class UObject* B);
		bool STATIC_EqualEqual_NameName(const class FName& A, const class FName& B);
		bool STATIC_EqualEqual_MatrixMatrix(const struct FMatrix& A, const struct FMatrix& B, float Tolerance);
		bool STATIC_EqualEqual_LinearColorLinearColor(const struct FLinearColor& A, const struct FLinearColor& B);
		bool STATIC_EqualEqual_IntInt(int32_t A, int32_t B);
		bool STATIC_EqualEqual_Int64Int64(int64_t A, int64_t B);
		bool STATIC_EqualEqual_FloatFloat(float A, float B);
		bool STATIC_EqualEqual_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);
		bool STATIC_EqualEqual_ClassClass(class UClass* A, class UClass* B);
		bool STATIC_EqualEqual_ByteByte(unsigned char A, unsigned char B);
		bool STATIC_EqualEqual_BoolBool(bool A, bool B);
		bool STATIC_Equal_IntPointIntPoint(const struct FIntPoint& A, const struct FIntPoint& B);
		float STATIC_Ease(float A, float B, float alpha, EEasingFunc EasingFunc, float BlendExp, int32_t Steps);
		struct FVector STATIC_DynamicWeightedMovingAverage_FVector(const struct FVector& CurrentSample, const struct FVector& PreviousSample, float MaxDistance, float MinWeight, float MaxWeight);
		struct FRotator STATIC_DynamicWeightedMovingAverage_FRotator(const struct FRotator& CurrentSample, const struct FRotator& PreviousSample, float MaxDistance, float MinWeight, float MaxWeight);
		float STATIC_DynamicWeightedMovingAverage_Float(float CurrentSample, float PreviousSample, float MaxDistance, float MinWeight, float MaxWeight);
		float STATIC_DotProduct2D(const struct FVector2D& A, const struct FVector2D& B);
		float STATIC_Dot_VectorVector(const struct FVector& A, const struct FVector& B);
		struct FVector STATIC_Divide_VectorVector(const struct FVector& A, const struct FVector& B);
		struct FVector STATIC_Divide_VectorInt(const struct FVector& A, int32_t B);
		struct FVector STATIC_Divide_VectorFloat(const struct FVector& A, float B);
		struct FVector4 STATIC_Divide_Vector4Vector4(const struct FVector4& A, const struct FVector4& B);
		struct FVector2D STATIC_Divide_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B);
		struct FVector2D STATIC_Divide_Vector2DFloat(const struct FVector2D& A, float B);
		struct FTimespan STATIC_Divide_TimespanFloat(const struct FTimespan& A, float Scalar);
		struct FLinearColor STATIC_Divide_LinearColorLinearColor(const struct FLinearColor& A, const struct FLinearColor& B);
		struct FIntPoint STATIC_Divide_IntPointIntPoint(const struct FIntPoint& A, const struct FIntPoint& B);
		struct FIntPoint STATIC_Divide_IntPointInt(const struct FIntPoint& A, int32_t B);
		int32_t STATIC_Divide_IntInt(int32_t A, int32_t B);
		int64_t STATIC_Divide_Int64Int64(int64_t A, int64_t B);
		float STATIC_Divide_FloatFloat(float A, float B);
		unsigned char STATIC_Divide_ByteByte(unsigned char A, unsigned char B);
		float STATIC_DistanceSquared2D(const struct FVector2D& v1, const struct FVector2D& v2);
		float STATIC_Distance2D(const struct FVector2D& v1, const struct FVector2D& v2);
		float STATIC_DegTan(float A);
		float STATIC_DegSin(float A);
		float STATIC_DegreesToRadians(float A);
		float STATIC_DegCos(float A);
		float STATIC_DegAtan2(float Y, float X);
		float STATIC_DegAtan(float A);
		float STATIC_DegAsin(float A);
		float STATIC_DegAcos(float A);
		int32_t STATIC_DaysInYear(int32_t Year);
		int32_t STATIC_DaysInMonth(int32_t Year, int32_t Month);
		struct FDateTime STATIC_DateTimeMinValue();
		struct FDateTime STATIC_DateTimeMaxValue();
		bool STATIC_DateTimeFromString(const class FString& DateTimeString, struct FDateTime* Result);
		bool STATIC_DateTimeFromIsoString(const class FString& IsoString, struct FDateTime* Result);
		float STATIC_CrossProduct2D(const struct FVector2D& A, const struct FVector2D& B);
		struct FVector STATIC_Cross_VectorVector(const struct FVector& A, const struct FVector& B);
		struct FVector STATIC_CreateVectorFromYawPitch(float Yaw, float Pitch, float Length);
		float STATIC_Cos(float A);
		struct FTransform STATIC_ConvertTransformToRelative(const struct FTransform& Transform, const struct FTransform& ParentTransform);
		struct FVector2D STATIC_Conv_VectorToVector2D(const struct FVector& InVector);
		struct FTransform STATIC_Conv_VectorToTransform(const struct FVector& InLocation);
		struct FRotator STATIC_Conv_VectorToRotator(const struct FVector& InVec);
		struct FQuat STATIC_Conv_VectorToQuaternion(const struct FVector& InVec);
		struct FLinearColor STATIC_Conv_VectorToLinearColor(const struct FVector& InVec);
		struct FVector STATIC_Conv_Vector4ToVector(const struct FVector4& InVector4);
		struct FRotator STATIC_Conv_Vector4ToRotator(const struct FVector4& InVec);
		struct FQuat STATIC_Conv_Vector4ToQuaternion(const struct FVector4& InVec);
		struct FVector STATIC_Conv_Vector2DToVector(const struct FVector2D& InVector2D, float Z);
		struct FIntPoint STATIC_Conv_Vector2DToIntPoint(const struct FVector2D& InVector2D);
		struct FMatrix STATIC_Conv_TransformToMatrix(const struct FTransform& Transform);
		struct FVector STATIC_Conv_RotatorToVector(const struct FRotator& InRot);
		struct FTransform STATIC_Conv_RotatorToTransform(const struct FRotator& InRotator);
		struct FTransform STATIC_Conv_MatrixToTransform(const struct FMatrix& InMatrix);
		struct FRotator STATIC_Conv_MatrixToRotator(const struct FMatrix& InMatrix);
		struct FVector STATIC_Conv_LinearColorToVector(const struct FLinearColor& InLinearColor);
		struct FColor STATIC_Conv_LinearColorToColor(const struct FLinearColor& InLinearColor, bool InUseSRGB);
		struct FVector STATIC_Conv_IntVectorToVector(const struct FIntVector& InIntVector);
		struct FIntVector STATIC_Conv_IntToIntVector(int32_t inInt);
		int64_t STATIC_Conv_IntToInt64(int32_t inInt);
		float STATIC_Conv_IntToFloat(int32_t inInt);
		unsigned char STATIC_Conv_IntToByte(int32_t inInt);
		bool STATIC_Conv_IntToBool(int32_t inInt);
		struct FVector2D STATIC_Conv_IntPointToVector2D(const struct FIntPoint& InIntPoint);
		int32_t STATIC_Conv_Int64ToInt(int64_t inInt);
		unsigned char STATIC_Conv_Int64ToByte(int64_t inInt);
		struct FVector STATIC_Conv_FloatToVector(float InFloat);
		struct FLinearColor STATIC_Conv_FloatToLinearColor(float InFloat);
		struct FLinearColor STATIC_Conv_ColorToLinearColor(const struct FColor& InColor);
		int32_t STATIC_Conv_ByteToInt(unsigned char InByte);
		float STATIC_Conv_ByteToFloat(unsigned char InByte);
		int32_t STATIC_Conv_BoolToInt(bool InBool);
		float STATIC_Conv_BoolToFloat(bool InBool);
		unsigned char STATIC_Conv_BoolToByte(bool InBool);
		struct FTransform STATIC_ComposeTransforms(const struct FTransform& A, const struct FTransform& B);
		struct FRotator STATIC_ComposeRotators(const struct FRotator& A, const struct FRotator& B);
		bool STATIC_ClassIsChildOf(class UClass* TestClass, class UClass* ParentClass);
		struct FVector STATIC_ClampVectorSize(const struct FVector& A, float Min, float Max);
		int64_t STATIC_ClampInt64(int64_t value, int64_t Min, int64_t Max);
		float STATIC_ClampAxis(float Angle);
		struct FVector2D STATIC_ClampAxes2D(const struct FVector2D& A, float MinAxisVal, float MaxAxisVal);
		float STATIC_ClampAngle(float AngleDegrees, float MinAngleDegrees, float MaxAngleDegrees);
		int32_t STATIC_Clamp(int32_t value, int32_t Min, int32_t Max);
		struct FLinearColor STATIC_CInterpTo(const struct FLinearColor& Current, const struct FLinearColor& Target, float DeltaTime, float InterpSpeed);
		void STATIC_BreakVector4(const struct FVector4& InVec, float* X, float* Y, float* Z, float* W);
		void STATIC_BreakVector2D(const struct FVector2D& InVec, float* X, float* Y);
		void STATIC_BreakVector(const struct FVector& InVec, float* X, float* Y, float* Z);
		void STATIC_BreakTransform(const struct FTransform& InTransform, struct FVector* Location, struct FRotator* Rotation, struct FVector* Scale);
		void STATIC_BreakTimespan2(const struct FTimespan& InTimespan, int32_t* Days, int32_t* Hours, int32_t* Minutes, int32_t* Seconds, int32_t* FractionNano);
		void STATIC_BreakTimespan(const struct FTimespan& InTimespan, int32_t* Days, int32_t* Hours, int32_t* Minutes, int32_t* Seconds, int32_t* Milliseconds);
		void STATIC_BreakRotIntoAxes(const struct FRotator& InRot, struct FVector* X, struct FVector* Y, struct FVector* Z);
		void STATIC_BreakRotator(const struct FRotator& InRot, float* Roll, float* Pitch, float* Yaw);
		void STATIC_BreakRandomStream(const struct FRandomStream& InRandomStream, int32_t* InitialSeed);
		void STATIC_BreakQualifiedFrameTime(const struct FQualifiedFrameTime& InFrameTime, struct FFrameNumber* Frame, struct FFrameRate* FrameRate, float* SubFrame);
		void STATIC_BreakFrameRate(const struct FFrameRate& InFrameRate, int32_t* Numerator, int32_t* Denominator);
		void STATIC_BreakDateTime(const struct FDateTime& InDateTime, int32_t* Year, int32_t* Month, int32_t* Day, int32_t* Hour, int32_t* Minute, int32_t* second, int32_t* Millisecond);
		void STATIC_BreakColor(const struct FLinearColor& InColor, float* R, float* G, float* B, float* A);
		bool STATIC_BooleanXOR(bool A, bool B);
		bool STATIC_BooleanOR(bool A, bool B);
		bool STATIC_BooleanNOR(bool A, bool B);
		bool STATIC_BooleanNAND(bool A, bool B);
		bool STATIC_BooleanAND(bool A, bool B);
		unsigned char STATIC_BMin(unsigned char A, unsigned char B);
		unsigned char STATIC_BMax(unsigned char A, unsigned char B);
		float STATIC_Atan2(float Y, float X);
		float STATIC_Atan(float A);
		float STATIC_Asin(float A);
		int32_t STATIC_And_IntInt(int32_t A, int32_t B);
		int64_t STATIC_And_Int64Int64(int64_t A, int64_t B);
		struct FVector STATIC_Add_VectorVector(const struct FVector& A, const struct FVector& B);
		struct FVector STATIC_Add_VectorInt(const struct FVector& A, int32_t B);
		struct FVector STATIC_Add_VectorFloat(const struct FVector& A, float B);
		struct FVector4 STATIC_Add_Vector4Vector4(const struct FVector4& A, const struct FVector4& B);
		struct FVector2D STATIC_Add_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B);
		struct FVector2D STATIC_Add_Vector2DFloat(const struct FVector2D& A, float B);
		struct FTimespan STATIC_Add_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);
		struct FQuat STATIC_Add_QuatQuat(const struct FQuat& A, const struct FQuat& B);
		struct FMatrix STATIC_Add_MatrixMatrix(const struct FMatrix& A, const struct FMatrix& B);
		struct FLinearColor STATIC_Add_LinearColorLinearColor(const struct FLinearColor& A, const struct FLinearColor& B);
		struct FIntPoint STATIC_Add_IntPointIntPoint(const struct FIntPoint& A, const struct FIntPoint& B);
		struct FIntPoint STATIC_Add_IntPointInt(const struct FIntPoint& A, int32_t B);
		int32_t STATIC_Add_IntInt(int32_t A, int32_t B);
		int64_t STATIC_Add_Int64Int64(int64_t A, int64_t B);
		float STATIC_Add_FloatFloat(float A, float B);
		struct FDateTime STATIC_Add_DateTimeTimespan(const struct FDateTime& A, const struct FTimespan& B);
		struct FDateTime STATIC_Add_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);
		unsigned char STATIC_Add_ByteByte(unsigned char A, unsigned char B);
		float STATIC_Acos(float A);
		int64_t STATIC_Abs_Int64(int64_t A);
		int32_t STATIC_Abs_Int(int32_t A);
		float STATIC_Abs(float A);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.KismetNodeHelperLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UKismetNodeHelperLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_MarkBit(int32_t* Data, int32_t Index);
		bool STATIC_HasUnmarkedBit(int32_t Data, int32_t NumBits);
		bool STATIC_HasMarkedBit(int32_t Data, int32_t NumBits);
		unsigned char STATIC_GetValidValue(class UEnum* Enum, unsigned char EnumeratorValue);
		int32_t STATIC_GetUnmarkedBit(int32_t Data, int32_t StartIdx, int32_t NumBits, bool bRandom);
		int32_t STATIC_GetRandomUnmarkedBit(int32_t Data, int32_t StartIdx, int32_t NumBits);
		int32_t STATIC_GetFirstUnmarkedBit(int32_t Data, int32_t StartIdx, int32_t NumBits);
		unsigned char STATIC_GetEnumeratorValueFromIndex(class UEnum* Enum, unsigned char EnumeratorIndex);
		class FString STATIC_GetEnumeratorUserFriendlyName(class UEnum* Enum, unsigned char EnumeratorValue);
		class FName STATIC_GetEnumeratorName(class UEnum* Enum, unsigned char EnumeratorValue);
		void STATIC_ClearBit(int32_t* Data, int32_t Index);
		void STATIC_ClearAllBits(int32_t* Data);
		bool STATIC_BitIsMarked(int32_t Data, int32_t Index);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.KismetRenderingLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UKismetRenderingLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_SetCastInsetShadowForAllAttachments(class UPrimitiveComponent* PrimitiveComponent, bool bCastInsetShadow, bool bLightAttachmentsAsGroup);
		class UTexture2D* STATIC_RenderTargetCreateStaticTexture2DEditorOnly(class UTextureRenderTarget2D* RenderTarget, const class FString& Name, ETextureCompressionSettings CompressionSettings, ETextureMipGenSettings MipSettings);
		void STATIC_ReleaseRenderTarget2D(class UTextureRenderTarget2D* TextureRenderTarget);
		struct FColor STATIC_ReadRenderTargetUV(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, float U, float V);
		struct FLinearColor STATIC_ReadRenderTargetRawUV(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, float U, float V);
		struct FLinearColor STATIC_ReadRenderTargetRawPixel(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, int32_t X, int32_t Y);
		struct FColor STATIC_ReadRenderTargetPixel(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, int32_t X, int32_t Y);
		struct FSkelMeshSkinWeightInfo STATIC_MakeSkinWeightInfo(int32_t Bone0, unsigned char Weight0, int32_t Bone1, unsigned char Weight1, int32_t Bone2, unsigned char Weight2, int32_t Bone3, unsigned char Weight3);
		class UTexture2D* STATIC_ImportFileAsTexture2D(class UObject* WorldContextObject, const class FString& Filename);
		class UTexture2D* STATIC_ImportBufferAsTexture2D(class UObject* WorldContextObject, TArray<unsigned char> Buffer);
		void STATIC_ExportTexture2D(class UObject* WorldContextObject, class UTexture2D* Texture, const class FString& FilePath, const class FString& Filename);
		void STATIC_ExportRenderTarget(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, const class FString& FilePath, const class FString& Filename);
		void STATIC_EndDrawCanvasToRenderTarget(class UObject* WorldContextObject, const struct FDrawToRenderTargetContext& Context);
		void STATIC_DrawMaterialToRenderTarget(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, class UMaterialInterface* Material);
		class UTextureRenderTargetVolume* STATIC_CreateRenderTargetVolume(class UObject* WorldContextObject, int32_t Width, int32_t Height, int32_t Depth, ETextureRenderTargetFormat Format, const struct FLinearColor& ClearColor, bool bAutoGenerateMipMaps);
		class UTextureRenderTarget2DArray* STATIC_CreateRenderTarget2DArray(class UObject* WorldContextObject, int32_t Width, int32_t Height, int32_t Slices, ETextureRenderTargetFormat Format, const struct FLinearColor& ClearColor, bool bAutoGenerateMipMaps);
		class UTextureRenderTarget2D* STATIC_CreateRenderTarget2D(class UObject* WorldContextObject, int32_t Width, int32_t Height, ETextureRenderTargetFormat Format, const struct FLinearColor& ClearColor, bool bAutoGenerateMipMaps);
		void STATIC_ConvertRenderTargetToTexture2DEditorOnly(class UObject* WorldContextObject, class UTextureRenderTarget2D* RenderTarget, class UTexture2D* Texture);
		void STATIC_ClearRenderTarget2D(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, const struct FLinearColor& ClearColor);
		void STATIC_BreakSkinWeightInfo(const struct FSkelMeshSkinWeightInfo& InWeight, int32_t* Bone0, unsigned char* Weight0, int32_t* Bone1, unsigned char* Weight1, int32_t* Bone2, unsigned char* Weight2, int32_t* Bone3, unsigned char* Weight3);
		void STATIC_BeginDrawCanvasToRenderTarget(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, class UCanvas** Canvas, struct FVector2D* Size, struct FDrawToRenderTargetContext* Context);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.KismetStringLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UKismetStringLibrary : public UBlueprintFunctionLibrary
	{
	public:
		class FString STATIC_TrimTrailing(const class FString& SourceString);
		class FString STATIC_Trim(const class FString& SourceString);
		class FString STATIC_ToUpper(const class FString& SourceString);
		class FString STATIC_ToLower(const class FString& SourceString);
		class FString STATIC_TimeSecondsToString(float InSeconds);
		bool STATIC_StartsWith(const class FString& SourceString, const class FString& InPrefix, ESearchCase SearchCase);
		bool STATIC_Split(const class FString& SourceString, const class FString& inStr, class FString* LeftS, class FString* RightS, ESearchCase SearchCase, ESearchDir SearchDir);
		class FString STATIC_RightPad(const class FString& SourceString, int32_t ChCount);
		class FString STATIC_RightChop(const class FString& SourceString, int32_t Count);
		class FString STATIC_Right(const class FString& SourceString, int32_t Count);
		class FString STATIC_Reverse(const class FString& SourceString);
		int32_t STATIC_ReplaceInline(class FString* SourceString, const class FString& SearchText, const class FString& ReplacementText, ESearchCase SearchCase);
		class FString STATIC_Replace(const class FString& SourceString, const class FString& From, const class FString& To, ESearchCase SearchCase);
		TArray<class FString> STATIC_ParseIntoArray(const class FString& SourceString, const class FString& Delimiter, bool CullEmptyStrings);
		bool STATIC_NotEqual_StrStr(const class FString& A, const class FString& B);
		bool STATIC_NotEqual_StriStri(const class FString& A, const class FString& B);
		class FString STATIC_Mid(const class FString& SourceString, int32_t Start, int32_t Count);
		bool STATIC_MatchesWildcard(const class FString& SourceString, const class FString& Wildcard, ESearchCase SearchCase);
		int32_t STATIC_Len(const class FString& S);
		class FString STATIC_LeftPad(const class FString& SourceString, int32_t ChCount);
		class FString STATIC_LeftChop(const class FString& SourceString, int32_t Count);
		class FString STATIC_Left(const class FString& SourceString, int32_t Count);
		class FString STATIC_JoinStringArray(TArray<class FString> SourceArray, const class FString& Separator);
		bool STATIC_IsNumeric(const class FString& SourceString);
		bool STATIC_IsEmpty(const class FString& inString);
		class FString STATIC_GetSubstring(const class FString& SourceString, int32_t startIndex, int32_t Length);
		int32_t STATIC_GetCharacterAsNumber(const class FString& SourceString, int32_t Index);
		TArray<class FString> STATIC_GetCharacterArrayFromString(const class FString& SourceString);
		int32_t STATIC_FindSubstring(const class FString& SearchIn, const class FString& Substring, bool bUseCase, bool bSearchFromEnd, int32_t startPosition);
		bool STATIC_EqualEqual_StrStr(const class FString& A, const class FString& B);
		bool STATIC_EqualEqual_StriStri(const class FString& A, const class FString& B);
		bool STATIC_EndsWith(const class FString& SourceString, const class FString& InSuffix, ESearchCase SearchCase);
		int32_t STATIC_CullArray(const class FString& SourceString, TArray<class FString>* inArray);
		class FString STATIC_Conv_VectorToString(const struct FVector& InVec);
		class FString STATIC_Conv_Vector2dToString(const struct FVector2D& InVec);
		class FString STATIC_Conv_TransformToString(const struct FTransform& InTrans);
		void STATIC_Conv_StringToVector2D(const class FString& inString, struct FVector2D* OutConvertedVector2D, bool* OutIsValid);
		void STATIC_Conv_StringToVector(const class FString& inString, struct FVector* OutConvertedVector, bool* OutIsValid);
		void STATIC_Conv_StringToRotator(const class FString& inString, struct FRotator* OutConvertedRotator, bool* OutIsValid);
		class FName STATIC_Conv_StringToName(const class FString& inString);
		int32_t STATIC_Conv_StringToInt(const class FString& inString);
		float STATIC_Conv_StringToFloat(const class FString& inString);
		void STATIC_Conv_StringToColor(const class FString& inString, struct FLinearColor* OutConvertedColor, bool* OutIsValid);
		class FString STATIC_Conv_RotatorToString(const struct FRotator& InRot);
		class FString STATIC_Conv_ObjectToString(class UObject* InObj);
		class FString STATIC_Conv_NameToString(const class FName& InName);
		class FString STATIC_Conv_MatrixToString(const struct FMatrix& InMatrix);
		class FString STATIC_Conv_IntVectorToString(const struct FIntVector& InIntVec);
		class FString STATIC_Conv_IntToString(int32_t inInt);
		class FString STATIC_Conv_IntPointToString(const struct FIntPoint& InIntPoint);
		class FString STATIC_Conv_FloatToString(float InFloat);
		class FString STATIC_Conv_ColorToString(const struct FLinearColor& InColor);
		class FString STATIC_Conv_ByteToString(unsigned char InByte);
		class FString STATIC_Conv_BoolToString(bool InBool);
		bool STATIC_Contains(const class FString& SearchIn, const class FString& Substring, bool bUseCase, bool bSearchFromEnd);
		class FString STATIC_Concat_StrStr(const class FString& A, const class FString& B);
		class FString STATIC_BuildString_Vector2d(const class FString& AppendTo, const class FString& Prefix, const struct FVector2D& InVector2D, const class FString& Suffix);
		class FString STATIC_BuildString_Vector(const class FString& AppendTo, const class FString& Prefix, const struct FVector& InVector, const class FString& Suffix);
		class FString STATIC_BuildString_Rotator(const class FString& AppendTo, const class FString& Prefix, const struct FRotator& InRot, const class FString& Suffix);
		class FString STATIC_BuildString_Object(const class FString& AppendTo, const class FString& Prefix, class UObject* InObj, const class FString& Suffix);
		class FString STATIC_BuildString_Name(const class FString& AppendTo, const class FString& Prefix, const class FName& InName, const class FString& Suffix);
		class FString STATIC_BuildString_IntVector(const class FString& AppendTo, const class FString& Prefix, const struct FIntVector& InIntVector, const class FString& Suffix);
		class FString STATIC_BuildString_Int(const class FString& AppendTo, const class FString& Prefix, int32_t inInt, const class FString& Suffix);
		class FString STATIC_BuildString_Float(const class FString& AppendTo, const class FString& Prefix, float InFloat, const class FString& Suffix);
		class FString STATIC_BuildString_Color(const class FString& AppendTo, const class FString& Prefix, const struct FLinearColor& InColor, const class FString& Suffix);
		class FString STATIC_BuildString_Bool(const class FString& AppendTo, const class FString& Prefix, bool InBool, const class FString& Suffix);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.KismetStringTableLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UKismetStringTableLibrary : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_IsRegisteredTableId(const class FName& TableId);
		bool STATIC_IsRegisteredTableEntry(const class FName& TableId, const class FString& Key);
		class FString STATIC_GetTableNamespace(const class FName& TableId);
		class FString STATIC_GetTableEntrySourceString(const class FName& TableId, const class FString& Key);
		class FString STATIC_GetTableEntryMetaData(const class FName& TableId, const class FString& Key, const class FName& MetaDataId);
		TArray<class FName> STATIC_GetRegisteredStringTables();
		TArray<class FName> STATIC_GetMetaDataIdsFromStringTableEntry(const class FName& TableId, const class FString& Key);
		TArray<class FString> STATIC_GetKeysFromStringTable(const class FName& TableId);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.KismetSystemLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UKismetSystemLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_UnregisterForRemoteNotifications();
		void STATIC_UnloadPrimaryAssetList(TArray<struct FPrimaryAssetId> PrimaryAssetIdList);
		void STATIC_UnloadPrimaryAsset(const struct FPrimaryAssetId& PrimaryAssetId);
		void STATIC_TransactObject(class UObject* Object);
		void STATIC_StackTrace();
		bool STATIC_SphereTraceSingleForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, TArray<EObjectTypeQuery> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_SphereTraceSingleByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, const class FName& ProfileName, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_SphereTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, ETraceTypeQuery TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_SphereTraceMultiForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, TArray<EObjectTypeQuery> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_SphereTraceMultiByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, const class FName& ProfileName, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_SphereTraceMulti(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, ETraceTypeQuery TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_SphereOverlapComponents(class UObject* WorldContextObject, const struct FVector& SpherePos, float SphereRadius, TArray<EObjectTypeQuery> ObjectTypes, class UClass* ComponentClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class UPrimitiveComponent*>* OutComponents);
		bool STATIC_SphereOverlapActors(class UObject* WorldContextObject, const struct FVector& SpherePos, float SphereRadius, TArray<EObjectTypeQuery> ObjectTypes, class UClass* ActorClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class AActor*>* OutActors);
		void STATIC_SnapshotObject(class UObject* Object);
		void STATIC_ShowPlatformSpecificLeaderboardScreen(const class FString& CategoryName);
		void STATIC_ShowPlatformSpecificAchievementsScreen(class APlayerController* SpecificPlayer);
		void STATIC_ShowInterstitialAd();
		void STATIC_ShowAdBanner(int32_t AdIdIndex, bool bShowOnBottomOfScreen);
		void STATIC_SetWindowTitle(const class FText& Title);
		void STATIC_SetVolumeButtonsHandledBySystem(bool bEnabled);
		void STATIC_SetVectorPropertyByName(class UObject* Object, const class FName& PropertyName, const struct FVector& value);
		void STATIC_SetUserActivity(const struct FUserActivity& UserActivity);
		void STATIC_SetTransformPropertyByName(class UObject* Object, const class FName& PropertyName, const struct FTransform& value);
		void STATIC_SetTextPropertyByName(class UObject* Object, const class FName& PropertyName, const class FText& value);
		void STATIC_SetSuppressViewportTransitionMessage(class UObject* WorldContextObject, bool bState);
		void STATIC_SetStructurePropertyByName(class UObject* Object, const class FName& PropertyName, const struct FGenericStruct& value);
		void STATIC_SetStringPropertyByName(class UObject* Object, const class FName& PropertyName, const class FString& value);
		void STATIC_SetSoftObjectPropertyByName(class UObject* Object, const class FName& PropertyName);
		void STATIC_SetSoftClassPropertyByName(class UObject* Object, const class FName& PropertyName);
		void STATIC_SetRotatorPropertyByName(class UObject* Object, const class FName& PropertyName, const struct FRotator& value);
		void STATIC_SetObjectPropertyByName(class UObject* Object, const class FName& PropertyName, class UObject* value);
		void STATIC_SetNamePropertyByName(class UObject* Object, const class FName& PropertyName, const class FName& value);
		void STATIC_SetLinearColorPropertyByName(class UObject* Object, const class FName& PropertyName, const struct FLinearColor& value);
		void STATIC_SetIntPropertyByName(class UObject* Object, const class FName& PropertyName, int32_t value);
		void STATIC_SetInterfacePropertyByName(class UObject* Object, const class FName& PropertyName);
		void STATIC_SetInt64PropertyByName(class UObject* Object, const class FName& PropertyName, int64_t value);
		void STATIC_SetGamepadsBlockDeviceFeedback(bool bBlock);
		void STATIC_SetFloatPropertyByName(class UObject* Object, const class FName& PropertyName, float value);
		void STATIC_SetFieldPathPropertyByName(class UObject* Object, const class FName& PropertyName);
		void STATIC_SetColorPropertyByName(class UObject* Object, const class FName& PropertyName, const struct FColor& value);
		void STATIC_SetCollisionProfileNameProperty(class UObject* Object, const class FName& PropertyName, const struct FCollisionProfileName& value);
		void STATIC_SetClassPropertyByName(class UObject* Object, const class FName& PropertyName, class UClass* value);
		void STATIC_SetBytePropertyByName(class UObject* Object, const class FName& PropertyName, unsigned char value);
		void STATIC_SetBoolPropertyByName(class UObject* Object, const class FName& PropertyName, bool value);
		void STATIC_RetriggerableDelay(class UObject* WorldContextObject, float Duration, const struct FLatentActionInfo& LatentInfo);
		void STATIC_ResetGamepadAssignmentToController(int32_t ControllerId);
		void STATIC_ResetGamepadAssignments();
		void STATIC_RegisterForRemoteNotifications();
		void STATIC_QuitGame(class UObject* WorldContextObject, class APlayerController* SpecificPlayer, EQuitPreference QuitPreference, bool bIgnorePlatformRestrictions);
		void STATIC_PrintWarning(const class FString& inString);
		void STATIC_PrintText(class UObject* WorldContextObject, const class FText& InText, bool bPrintToScreen, bool bPrintToLog, const struct FLinearColor& TextColor, float Duration, int32_t Key);
		void STATIC_PrintString(class UObject* WorldContextObject, const class FString& inString, bool bPrintToScreen, bool bPrintToLog, const struct FLinearColor& TextColor, float Duration, int32_t Key);
		bool STATIC_ParseParamValue(const class FString& inString, const class FString& InParam, class FString* OutValue);
		bool STATIC_ParseParam(const class FString& inString, const class FString& InParam);
		void STATIC_ParseCommandLine(const class FString& InCmdLine, TArray<class FString>* OutTokens, TArray<class FString>* OutSwitches, TMap<class FString, class FString>* OutParams);
		void OnAssetLoaded__DelegateSignature(class UObject* Loaded);
		void OnAssetClassLoaded__DelegateSignature(class UClass* Loaded);
		bool STATIC_NotEqual_SoftObjectReference();
		bool STATIC_NotEqual_SoftClassReference();
		bool STATIC_NotEqual_PrimaryAssetType(const struct FPrimaryAssetType& A, const struct FPrimaryAssetType& B);
		bool STATIC_NotEqual_PrimaryAssetId(const struct FPrimaryAssetId& A, const struct FPrimaryAssetId& B);
		class FString STATIC_NormalizeFilename(const class FString& InFilename);
		void STATIC_MoveComponentTo(class USceneComponent* Component, const struct FVector& TargetRelativeLocation, const struct FRotator& TargetRelativeRotation, bool bEaseOut, bool bEaseIn, float OverTime, bool bForceShortestRotationPath, EMoveComponentAction MoveAction, const struct FLatentActionInfo& LatentInfo);
		struct FSoftObjectPath STATIC_MakeSoftObjectPath(const class FString& PathString);
		struct FSoftClassPath STATIC_MakeSoftClassPath(const class FString& PathString);
		class FText STATIC_MakeLiteralText(const class FText& value);
		class FString STATIC_MakeLiteralString(const class FString& value);
		class FName STATIC_MakeLiteralName(const class FName& value);
		int32_t STATIC_MakeLiteralInt(int32_t value);
		float STATIC_MakeLiteralFloat(float value);
		unsigned char STATIC_MakeLiteralByte(unsigned char value);
		bool STATIC_MakeLiteralBool(bool value);
		void STATIC_LoadInterstitialAd(int32_t AdIdIndex);
		class UClass* STATIC_LoadClassAsset_Blocking();
		void STATIC_LoadAssetClass(class UObject* WorldContextObject, const class FScriptDelegate& OnLoaded, const struct FLatentActionInfo& LatentInfo);
		class UObject* STATIC_LoadAsset_Blocking();
		void STATIC_LoadAsset(class UObject* WorldContextObject, const class FScriptDelegate& OnLoaded, const struct FLatentActionInfo& LatentInfo);
		bool STATIC_LineTraceSingleForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, TArray<EObjectTypeQuery> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_LineTraceSingleByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const class FName& ProfileName, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_LineTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, ETraceTypeQuery TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_LineTraceMultiForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, TArray<EObjectTypeQuery> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_LineTraceMultiByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const class FName& ProfileName, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_LineTraceMulti(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, ETraceTypeQuery TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		void STATIC_LaunchURL(const class FString& URL);
		void STATIC_K2_UnPauseTimerHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);
		void STATIC_K2_UnPauseTimerDelegate(const class FScriptDelegate& Delegate);
		void STATIC_K2_UnPauseTimer(class UObject* Object, const class FString& FunctionName);
		bool STATIC_K2_TimerExistsHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);
		bool STATIC_K2_TimerExistsDelegate(const class FScriptDelegate& Delegate);
		bool STATIC_K2_TimerExists(class UObject* Object, const class FString& FunctionName);
		struct FTimerHandle STATIC_K2_SetTimerDelegate(const class FScriptDelegate& Delegate, float Time, bool bLooping, float InitialStartDelay, float InitialStartDelayVariance);
		struct FTimerHandle STATIC_K2_SetTimer(class UObject* Object, const class FString& FunctionName, float Time, bool bLooping, float InitialStartDelay, float InitialStartDelayVariance);
		void STATIC_K2_PauseTimerHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);
		void STATIC_K2_PauseTimerDelegate(const class FScriptDelegate& Delegate);
		void STATIC_K2_PauseTimer(class UObject* Object, const class FString& FunctionName);
		bool STATIC_K2_IsValidTimerHandle(const struct FTimerHandle& Handle);
		bool STATIC_K2_IsTimerPausedHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);
		bool STATIC_K2_IsTimerPausedDelegate(const class FScriptDelegate& Delegate);
		bool STATIC_K2_IsTimerPaused(class UObject* Object, const class FString& FunctionName);
		bool STATIC_K2_IsTimerActiveHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);
		bool STATIC_K2_IsTimerActiveDelegate(const class FScriptDelegate& Delegate);
		bool STATIC_K2_IsTimerActive(class UObject* Object, const class FString& FunctionName);
		struct FTimerHandle STATIC_K2_InvalidateTimerHandle(struct FTimerHandle* Handle);
		float STATIC_K2_GetTimerRemainingTimeHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);
		float STATIC_K2_GetTimerRemainingTimeDelegate(const class FScriptDelegate& Delegate);
		float STATIC_K2_GetTimerRemainingTime(class UObject* Object, const class FString& FunctionName);
		float STATIC_K2_GetTimerElapsedTimeHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);
		float STATIC_K2_GetTimerElapsedTimeDelegate(const class FScriptDelegate& Delegate);
		float STATIC_K2_GetTimerElapsedTime(class UObject* Object, const class FString& FunctionName);
		void STATIC_K2_ClearTimerHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);
		void STATIC_K2_ClearTimerDelegate(const class FScriptDelegate& Delegate);
		void STATIC_K2_ClearTimer(class UObject* Object, const class FString& FunctionName);
		void STATIC_K2_ClearAndInvalidateTimerHandle(class UObject* WorldContextObject, struct FTimerHandle* Handle);
		bool STATIC_IsValidSoftObjectReference();
		bool STATIC_IsValidSoftClassReference();
		bool STATIC_IsValidPrimaryAssetType(const struct FPrimaryAssetType& PrimaryAssetType);
		bool STATIC_IsValidPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId);
		bool STATIC_IsValidClass(class UClass* Class);
		bool STATIC_IsValid(class UObject* Object);
		bool STATIC_IsUnattended();
		bool STATIC_IsStandalone(class UObject* WorldContextObject);
		bool STATIC_IsSplitScreen(class UObject* WorldContextObject);
		bool STATIC_IsServer(class UObject* WorldContextObject);
		bool STATIC_IsScreensaverEnabled();
		bool STATIC_IsPackagedForDistribution();
		bool STATIC_IsLoggedIn(class APlayerController* SpecificPlayer);
		bool STATIC_IsInterstitialAdRequested();
		bool STATIC_IsInterstitialAdAvailable();
		bool STATIC_IsDedicatedServer(class UObject* WorldContextObject);
		bool STATIC_IsControllerAssignedToGamepad(int32_t ControllerId);
		void STATIC_HideAdBanner();
		bool STATIC_GetVolumeButtonsHandledBySystem();
		class FString STATIC_GetUniqueDeviceId();
		class FString STATIC_GetSystemPath(class UObject* Object);
		bool STATIC_GetSupportedFullscreenResolutions(TArray<struct FIntPoint>* Resolutions);
		void STATIC_GetSoftObjectReferenceFromPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId);
		void STATIC_GetSoftClassReferenceFromPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId);
		int32_t STATIC_GetRenderingMaterialQualityLevel();
		int32_t STATIC_GetRenderingDetailMode();
		class FString STATIC_GetProjectSavedDirectory();
		class FString STATIC_GetProjectDirectory();
		class FString STATIC_GetProjectContentDirectory();
		void STATIC_GetPrimaryAssetsWithBundleState(TArray<class FName> RequiredBundles, TArray<class FName> ExcludedBundles, TArray<struct FPrimaryAssetType> ValidTypes, bool bForceCurrentState, TArray<struct FPrimaryAssetId>* OutPrimaryAssetIdList);
		void STATIC_GetPrimaryAssetIdList(const struct FPrimaryAssetType& PrimaryAssetType, TArray<struct FPrimaryAssetId>* OutPrimaryAssetIdList);
		struct FPrimaryAssetId STATIC_GetPrimaryAssetIdFromSoftObjectReference();
		struct FPrimaryAssetId STATIC_GetPrimaryAssetIdFromSoftClassReference();
		struct FPrimaryAssetId STATIC_GetPrimaryAssetIdFromObject(class UObject* Object);
		struct FPrimaryAssetId STATIC_GetPrimaryAssetIdFromClass(class UClass* Class);
		TArray<class FString> STATIC_GetPreferredLanguages();
		class FString STATIC_GetPlatformUserName();
		class FString STATIC_GetPlatformUserDir();
		class FString STATIC_GetPathName(class UObject* Object);
		class UObject* STATIC_GetOuterObject(class UObject* Object);
		class FString STATIC_GetObjectName(class UObject* Object);
		class UObject* STATIC_GetObjectFromPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId);
		int32_t STATIC_GetMinYResolutionForUI();
		int32_t STATIC_GetMinYResolutionFor3DView();
		class FString STATIC_GetLocalCurrencySymbol();
		class FString STATIC_GetLocalCurrencyCode();
		float STATIC_GetGameTimeInSeconds(class UObject* WorldContextObject);
		class FString STATIC_GetGamepadControllerName(int32_t ControllerId);
		class UTexture2D* STATIC_GetGamepadButtonGlyph(const class FString& ButtonKey, int32_t ControllerIndex);
		class FString STATIC_GetGameName();
		class FString STATIC_GetGameBundleId();
		int64_t STATIC_GetFrameCount();
		class FString STATIC_GetEngineVersion();
		class FString STATIC_GetDisplayName(class UObject* Object);
		class FString STATIC_GetDeviceId();
		class FString STATIC_GetDefaultLocale();
		class FString STATIC_GetDefaultLanguage();
		bool STATIC_GetCurrentBundleState(const struct FPrimaryAssetId& PrimaryAssetId, bool bForceCurrentState, TArray<class FName>* OutBundles);
		bool STATIC_GetConvenientWindowedResolutions(TArray<struct FIntPoint>* Resolutions);
		int32_t STATIC_GetConsoleVariableIntValue(const class FString& VariableName);
		float STATIC_GetConsoleVariableFloatValue(const class FString& VariableName);
		bool STATIC_GetConsoleVariableBoolValue(const class FString& VariableName);
		void STATIC_GetComponentBounds(class USceneComponent* Component, struct FVector* Origin, struct FVector* BoxExtent, float* SphereRadius);
		class FString STATIC_GetCommandLine();
		class UClass* STATIC_GetClassFromPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId);
		class FString STATIC_GetClassDisplayName(class UClass* Class);
		int32_t STATIC_GetAdIDCount();
		void STATIC_GetActorListFromComponentList(TArray<class UPrimitiveComponent*> ComponentList, class UClass* ActorClassFilter, TArray<class AActor*>* OutActorList);
		void STATIC_GetActorBounds(class AActor* Actor, struct FVector* Origin, struct FVector* BoxExtent);
		void STATIC_ForceCloseAdBanner();
		void STATIC_FlushPersistentDebugLines(class UObject* WorldContextObject);
		void STATIC_FlushDebugStrings(class UObject* WorldContextObject);
		void STATIC_ExecuteConsoleCommand(class UObject* WorldContextObject, const class FString& Command, class APlayerController* SpecificPlayer);
		bool STATIC_EqualEqual_SoftObjectReference();
		bool STATIC_EqualEqual_SoftClassReference();
		bool STATIC_EqualEqual_PrimaryAssetType(const struct FPrimaryAssetType& A, const struct FPrimaryAssetType& B);
		bool STATIC_EqualEqual_PrimaryAssetId(const struct FPrimaryAssetId& A, const struct FPrimaryAssetId& B);
		int32_t STATIC_EndTransaction();
		void STATIC_DrawDebugString(class UObject* WorldContextObject, const struct FVector& TextLocation, const class FString& Text, class AActor* TestBaseActor, const struct FLinearColor& TextColor, float Duration);
		void STATIC_DrawDebugSphere(class UObject* WorldContextObject, const struct FVector& Center, float Radius, int32_t Segments, const struct FLinearColor& LineColor, float Duration, float Thickness);
		void STATIC_DrawDebugPoint(class UObject* WorldContextObject, const struct FVector& position, float Size, const struct FLinearColor& PointColor, float Duration);
		void STATIC_DrawDebugPlane(class UObject* WorldContextObject, const struct FPlane& PlaneCoordinates, const struct FVector& Location, float Size, const struct FLinearColor& PlaneColor, float Duration);
		void STATIC_DrawDebugLine(class UObject* WorldContextObject, const struct FVector& LineStart, const struct FVector& LineEnd, const struct FLinearColor& LineColor, float Duration, float Thickness);
		void STATIC_DrawDebugFrustum(class UObject* WorldContextObject, const struct FTransform& FrustumTransform, const struct FLinearColor& FrustumColor, float Duration, float Thickness);
		void STATIC_DrawDebugFloatHistoryTransform(class UObject* WorldContextObject, const struct FDebugFloatHistory& FloatHistory, const struct FTransform& DrawTransform, const struct FVector2D& DrawSize, const struct FLinearColor& DrawColor, float Duration);
		void STATIC_DrawDebugFloatHistoryLocation(class UObject* WorldContextObject, const struct FDebugFloatHistory& FloatHistory, const struct FVector& DrawLocation, const struct FVector2D& DrawSize, const struct FLinearColor& DrawColor, float Duration);
		void STATIC_DrawDebugCylinder(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, int32_t Segments, const struct FLinearColor& LineColor, float Duration, float Thickness);
		void STATIC_DrawDebugCoordinateSystem(class UObject* WorldContextObject, const struct FVector& AxisLoc, const struct FRotator& AxisRot, float Scale, float Duration, float Thickness);
		void STATIC_DrawDebugConeInDegrees(class UObject* WorldContextObject, const struct FVector& Origin, const struct FVector& Direction, float Length, float AngleWidth, float AngleHeight, int32_t NumSides, const struct FLinearColor& LineColor, float Duration, float Thickness);
		void STATIC_DrawDebugCone(class UObject* WorldContextObject, const struct FVector& Origin, const struct FVector& Direction, float Length, float AngleWidth, float AngleHeight, int32_t NumSides, const struct FLinearColor& LineColor, float Duration, float Thickness);
		void STATIC_DrawDebugCircle(class UObject* WorldContextObject, const struct FVector& Center, float Radius, int32_t NumSegments, const struct FLinearColor& LineColor, float Duration, float Thickness, const struct FVector& YAxis, const struct FVector& ZAxis, bool bDrawAxis);
		void STATIC_DrawDebugCapsule(class UObject* WorldContextObject, const struct FVector& Center, float HalfHeight, float Radius, const struct FRotator& Rotation, const struct FLinearColor& LineColor, float Duration, float Thickness);
		void STATIC_DrawDebugCamera(class ACameraActor* CameraActor, const struct FLinearColor& CameraColor, float Duration);
		void STATIC_DrawDebugBox(class UObject* WorldContextObject, const struct FVector& Center, const struct FVector& Extent, const struct FLinearColor& LineColor, const struct FRotator& Rotation, float Duration, float Thickness);
		void STATIC_DrawDebugArrow(class UObject* WorldContextObject, const struct FVector& LineStart, const struct FVector& LineEnd, float ArrowSize, const struct FLinearColor& LineColor, float Duration, float Thickness);
		bool STATIC_DoesImplementInterface(class UObject* TestObject, class UClass* Interface);
		void STATIC_Delay(class UObject* WorldContextObject, float Duration, const struct FLatentActionInfo& LatentInfo);
		void STATIC_CreateCopyForUndoBuffer(class UObject* ObjectToModify);
		class FString STATIC_ConvertToRelativePath(const class FString& Filename);
		class FString STATIC_ConvertToAbsolutePath(const class FString& Filename);
		void STATIC_Conv_SoftObjPathToSoftObjRef(const struct FSoftObjectPath& SoftObjectPath);
		class FString STATIC_Conv_SoftObjectReferenceToString();
		class UObject* STATIC_Conv_SoftObjectReferenceToObject();
		class FString STATIC_Conv_SoftClassReferenceToString();
		class UClass* STATIC_Conv_SoftClassReferenceToClass();
		void STATIC_Conv_SoftClassPathToSoftClassRef(const struct FSoftClassPath& SoftClassPath);
		class FString STATIC_Conv_PrimaryAssetTypeToString(const struct FPrimaryAssetType& PrimaryAssetType);
		class FString STATIC_Conv_PrimaryAssetIdToString(const struct FPrimaryAssetId& PrimaryAssetId);
		void STATIC_Conv_ObjectToSoftObjectReference(class UObject* Object);
		class UObject* STATIC_Conv_InterfaceToObject();
		void STATIC_Conv_ClassToSoftClassReference(class UClass* Class);
		void STATIC_ControlScreensaver(bool bAllowScreenSaver);
		bool STATIC_ComponentOverlapComponents(class UPrimitiveComponent* Component, const struct FTransform& ComponentTransform, TArray<EObjectTypeQuery> ObjectTypes, class UClass* ComponentClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class UPrimitiveComponent*>* OutComponents);
		bool STATIC_ComponentOverlapActors(class UPrimitiveComponent* Component, const struct FTransform& ComponentTransform, TArray<EObjectTypeQuery> ObjectTypes, class UClass* ActorClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class AActor*>* OutActors);
		void STATIC_CollectGarbage();
		bool STATIC_CapsuleTraceSingleForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, TArray<EObjectTypeQuery> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_CapsuleTraceSingleByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, const class FName& ProfileName, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_CapsuleTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, ETraceTypeQuery TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_CapsuleTraceMultiForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, TArray<EObjectTypeQuery> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_CapsuleTraceMultiByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, const class FName& ProfileName, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_CapsuleTraceMulti(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, ETraceTypeQuery TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_CapsuleOverlapComponents(class UObject* WorldContextObject, const struct FVector& CapsulePos, float Radius, float HalfHeight, TArray<EObjectTypeQuery> ObjectTypes, class UClass* ComponentClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class UPrimitiveComponent*>* OutComponents);
		bool STATIC_CapsuleOverlapActors(class UObject* WorldContextObject, const struct FVector& CapsulePos, float Radius, float HalfHeight, TArray<EObjectTypeQuery> ObjectTypes, class UClass* ActorClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class AActor*>* OutActors);
		bool STATIC_CanLaunchURL(const class FString& URL);
		void STATIC_CancelTransaction(int32_t Index);
		void STATIC_BreakSoftObjectPath(const struct FSoftObjectPath& InSoftObjectPath, class FString* PathString);
		void STATIC_BreakSoftClassPath(const struct FSoftClassPath& InSoftClassPath, class FString* PathString);
		bool STATIC_BoxTraceSingleForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, TArray<EObjectTypeQuery> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_BoxTraceSingleByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, const class FName& ProfileName, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_BoxTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, ETraceTypeQuery TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_BoxTraceMultiForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, TArray<EObjectTypeQuery> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_BoxTraceMultiByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, const class FName& ProfileName, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_BoxTraceMulti(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, ETraceTypeQuery TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
		bool STATIC_BoxOverlapComponents(class UObject* WorldContextObject, const struct FVector& BoxPos, const struct FVector& Extent, TArray<EObjectTypeQuery> ObjectTypes, class UClass* ComponentClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class UPrimitiveComponent*>* OutComponents);
		bool STATIC_BoxOverlapActors(class UObject* WorldContextObject, const struct FVector& BoxPos, const struct FVector& BoxExtent, TArray<EObjectTypeQuery> ObjectTypes, class UClass* ActorClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class AActor*>* OutActors);
		int32_t STATIC_BeginTransaction(const class FString& Context, const class FText& Description, class UObject* PrimaryObject);
		struct FDebugFloatHistory STATIC_AddFloatHistorySample(float value, const struct FDebugFloatHistory& FloatHistory);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.KismetTextLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UKismetTextLibrary : public UBlueprintFunctionLibrary
	{
	public:
		class FText STATIC_TextTrimTrailing(const class FText& InText);
		class FText STATIC_TextTrimPrecedingAndTrailing(const class FText& InText);
		class FText STATIC_TextTrimPreceding(const class FText& InText);
		class FText STATIC_TextToUpper(const class FText& InText);
		class FText STATIC_TextToLower(const class FText& InText);
		bool STATIC_TextIsTransient(const class FText& InText);
		bool STATIC_TextIsFromStringTable(const class FText& Text);
		bool STATIC_TextIsEmpty(const class FText& InText);
		bool STATIC_TextIsCultureInvariant(const class FText& InText);
		class FText STATIC_TextFromStringTable(const class FName& TableId, const class FString& Key);
		bool STATIC_StringTableIdAndKeyFromText(const class FText& Text, class FName* OutTableId, class FString* OutKey);
		class FText STATIC_PolyglotDataToText(const struct FPolyglotTextData& PolyglotData);
		bool STATIC_NotEqual_TextText(const class FText& A, const class FText& B);
		bool STATIC_NotEqual_IgnoreCase_TextText(const class FText& A, const class FText& B);
		void STATIC_IsPolyglotDataValid(const struct FPolyglotTextData& PolyglotData, bool* IsValid, class FText* ErrorMessage);
		class FText STATIC_GetEmptyText();
		class FText STATIC_Format(const class FText& InPattern, TArray<struct FFormatArgumentData> InArgs);
		bool STATIC_FindTextInLocalizationTable(const class FString& Namespace, const class FString& Key, class FText* OutText);
		bool STATIC_EqualEqual_TextText(const class FText& A, const class FText& B);
		bool STATIC_EqualEqual_IgnoreCase_TextText(const class FText& A, const class FText& B);
		class FText STATIC_Conv_VectorToText(const struct FVector& InVec);
		class FText STATIC_Conv_Vector2dToText(const struct FVector2D& InVec);
		class FText STATIC_Conv_TransformToText(const struct FTransform& InTrans);
		class FString STATIC_Conv_TextToString(const class FText& InText);
		class FText STATIC_Conv_StringToText(const class FString& inString);
		class FText STATIC_Conv_RotatorToText(const struct FRotator& InRot);
		class FText STATIC_Conv_ObjectToText(class UObject* InObj);
		class FText STATIC_Conv_NameToText(const class FName& InName);
		class FText STATIC_Conv_IntToText(int32_t value, bool bAlwaysSign, bool bUseGrouping, int32_t MinimumIntegralDigits, int32_t MaximumIntegralDigits);
		class FText STATIC_Conv_Int64ToText(int64_t value, bool bAlwaysSign, bool bUseGrouping, int32_t MinimumIntegralDigits, int32_t MaximumIntegralDigits);
		class FText STATIC_Conv_FloatToText(float value, ERoundingMode RoundingMode, bool bAlwaysSign, bool bUseGrouping, int32_t MinimumIntegralDigits, int32_t MaximumIntegralDigits, int32_t MinimumFractionalDigits, int32_t MaximumFractionalDigits);
		class FText STATIC_Conv_ColorToText(const struct FLinearColor& InColor);
		class FText STATIC_Conv_ByteToText(unsigned char value);
		class FText STATIC_Conv_BoolToText(bool InBool);
		class FText STATIC_AsTimeZoneTime_DateTime(const struct FDateTime& InDateTime, const class FString& InTimeZone);
		class FText STATIC_AsTimeZoneDateTime_DateTime(const struct FDateTime& InDateTime, const class FString& InTimeZone);
		class FText STATIC_AsTimeZoneDate_DateTime(const struct FDateTime& InDateTime, const class FString& InTimeZone);
		class FText STATIC_AsTimespan_Timespan(const struct FTimespan& InTimespan);
		class FText STATIC_AsTime_DateTime(const struct FDateTime& In);
		class FText STATIC_AsPercent_Float(float value, ERoundingMode RoundingMode, bool bAlwaysSign, bool bUseGrouping, int32_t MinimumIntegralDigits, int32_t MaximumIntegralDigits, int32_t MinimumFractionalDigits, int32_t MaximumFractionalDigits);
		class FText STATIC_AsDateTime_DateTime(const struct FDateTime& In);
		class FText STATIC_AsDate_DateTime(const struct FDateTime& InDateTime);
		class FText STATIC_AsCurrencyBase(int32_t BaseValue, const class FString& CurrencyCode);
		class FText STATIC_AsCurrency_Integer(int32_t value, ERoundingMode RoundingMode, bool bAlwaysSign, bool bUseGrouping, int32_t MinimumIntegralDigits, int32_t MaximumIntegralDigits, int32_t MinimumFractionalDigits, int32_t MaximumFractionalDigits, const class FString& CurrencyCode);
		class FText STATIC_AsCurrency_Float(float value, ERoundingMode RoundingMode, bool bAlwaysSign, bool bUseGrouping, int32_t MinimumIntegralDigits, int32_t MaximumIntegralDigits, int32_t MinimumFractionalDigits, int32_t MaximumFractionalDigits, const class FString& CurrencyCode);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Layer
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class ULayer : public UObject
	{
	public:
		class FName                                                LayerName;                                               // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsVisible : 1;                                          // 0x003C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0SYU[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FLayerActorStats>                            ActorStats;                                              // 0x0040(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LevelPartitionInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class ULevelPartitionInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Level
	 * Size -> 0x0270 (FullSize[0x02A0] - InheritedSize[0x0030])
	 */
	class ULevel : public UObject
	{
	public:
		unsigned char                                              UnknownData_7XXH[0x90];                                  // 0x0030(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWorld*                                              OwningWorld;                                             // 0x00C0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UModel*                                              Model;                                                   // 0x00C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UModelComponent*>                             ModelComponents;                                         // 0x00D0(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class ULevelActorContainer*                                ActorCluster;                                            // 0x00E0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumTextureStreamingUnbuiltComponents;                    // 0x00E8(0x0004) ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumTextureStreamingDirtyResources;                       // 0x00EC(0x0004) ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ALevelScriptActor*                                   LevelScriptActor;                                        // 0x00F0(0x0008) ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ANavigationObjectBase*                               NavListStart;                                            // 0x00F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ANavigationObjectBase*                               NavListEnd;                                              // 0x0100(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UNavigationDataChunk*>                        NavDataChunks;                                           // 0x0108(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      LightmapTotalSize;                                       // 0x0118(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShadowmapTotalSize;                                      // 0x011C(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVector>                                     StaticNavigableGeometry;                                 // 0x0120(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FGuid>                                       StreamingTextureGuids;                                   // 0x0130(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RLVL[0x98];                                  // 0x0140(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               LevelBuildDataId;                                        // 0x01D8(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMapBuildDataRegistry*                               MapBuildData;                                            // 0x01E8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FIntVector                                          LightBuildLevelOffset;                                   // 0x01F0(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsLightingScenario : 1;                                 // 0x01FC(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GU3U : 2;                                    // 0x01FC(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bTextureStreamingRotationChanged : 1;                    // 0x01FC(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bStaticComponentsRegisteredInStreamingManager : 1;       // 0x01FC(0x0001) BIT_FIELD Transient, DuplicateTransient, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsVisible : 1;                                          // 0x01FC(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3ZS5[0x63];                                  // 0x01FD(0x0063) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AWorldSettings*                                      WorldSettings;                                           // 0x0260(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_N9BK[0x8];                                   // 0x0268(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAssetUserData*>                              AssetUserData;                                           // 0x0270(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_O24T[0x10];                                  // 0x0280(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FReplicatedStaticActorDestructionInfo>       DestroyedReplicatedStaticActors;                         // 0x0290(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LevelActorContainer
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class ULevelActorContainer : public UObject
	{
	public:
		TArray<class AActor*>                                      Actors;                                                  // 0x0030(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LevelBounds
	 * Size -> 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
	 */
	class ALevelBounds : public AActor
	{
	public:
		class UBoxComponent*                                       BoxComponent;                                            // 0x0230(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoUpdateBounds;                                       // 0x0238(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E1R6[0x7];                                   // 0x0239(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LevelScriptBlueprint
	 * Size -> 0x0000 (FullSize[0x00A8] - InheritedSize[0x00A8])
	 */
	class ULevelScriptBlueprint : public UBlueprint
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LevelStreaming
	 * Size -> 0x0130 (FullSize[0x0160] - InheritedSize[0x0030])
	 */
	class ULevelStreaming : public UObject
	{
	public:
		unsigned char                                              WorldAsset[0x30];                                        // 0x0030(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
		class FName                                                PackageNameToLoad;                                       // 0x0060(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VSPA[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        LODPackageNames;                                         // 0x0070(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G2SY[0x10];                                  // 0x0080(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          LevelTransform;                                          // 0x0090(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    LevelLODIndex;                                           // 0x00C0(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    StreamingPriority;                                       // 0x00C4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_92DC[0x2];                                   // 0x00C8(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              UnknownData_L8DR : 3;                                    // 0x00CA(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bShouldBeVisible : 1;                                    // 0x00CA(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bShouldBeLoaded : 1;                                     // 0x00CA(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bLocked : 1;                                             // 0x00CA(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsStatic : 1;                                           // 0x00CA(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bClientManaged : 1;                                      // 0x00CA(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShouldBlockOnLoad : 1;                                  // 0x00CB(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShouldBlockOnUnload : 1;                                // 0x00CB(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableDistanceStreaming : 1;                           // 0x00CB(0x0001) BIT_FIELD BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDrawOnLevelStatusMap : 1;                               // 0x00CB(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        LevelColor;                                              // 0x00CC(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S1ON[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ALevelStreamingVolume*>                       EditorStreamingVolumes;                                  // 0x00E0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      MinTimeBetweenVolumeUnloadRequests;                      // 0x00F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3214[0x4];                                   // 0x00F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnLevelLoaded;                                           // 0x00F8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnLevelUnloaded;                                         // 0x0108(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnLevelShown;                                            // 0x0118(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnLevelHidden;                                           // 0x0128(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class ULevel*                                              LoadedLevel;                                             // 0x0138(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ULevel*                                              PendingUnloadLevel;                                      // 0x0140(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YP2X[0x18];                                  // 0x0148(0x0018) MISSED OFFSET (PADDING)

	public:
		bool ShouldBeLoaded();
		void SetShouldBeVisible(bool bInShouldBeVisible);
		void SetShouldBeLoaded(bool bInShouldBeLoaded);
		void SetPriority(int32_t NewPriority);
		void SetLevelLODIndex(int32_t LODIndex);
		void SetIsRequestingUnloadAndRemoval(bool bInIsRequestingUnloadAndRemoval);
		bool IsStreamingStatePending();
		bool IsLevelVisible();
		bool IsLevelLoaded();
		class FName GetWorldAssetPackageFName();
		class ULevel* GetLoadedLevel();
		class ALevelScriptActor* GetLevelScriptActor();
		bool GetIsRequestingUnloadAndRemoval();
		class ULevelStreaming* CreateInstance(const class FString& UniqueInstanceName);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LevelStreamingAlwaysLoaded
	 * Size -> 0x0000 (FullSize[0x0160] - InheritedSize[0x0160])
	 */
	class ULevelStreamingAlwaysLoaded : public ULevelStreaming
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LevelStreamingDynamic
	 * Size -> 0x0010 (FullSize[0x0170] - InheritedSize[0x0160])
	 */
	class ULevelStreamingDynamic : public ULevelStreaming
	{
	public:
		unsigned char                                              bInitiallyLoaded : 1;                                    // 0x0160(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInitiallyVisible : 1;                                   // 0x0160(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SX1Z[0xF];                                   // 0x0161(0x000F) MISSED OFFSET (PADDING)

	public:
		class ULevelStreamingDynamic* STATIC_LoadLevelInstanceBySoftObjectPtr(class UObject* WorldContextObject, const struct FVector& Location, const struct FRotator& Rotation, bool* bOutSuccess, const class FString& OptionalLevelNameOverride);
		class ULevelStreamingDynamic* STATIC_LoadLevelInstance(class UObject* WorldContextObject, const class FString& LevelName, const struct FVector& Location, const struct FRotator& Rotation, bool* bOutSuccess, const class FString& OptionalLevelNameOverride);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LevelStreamingPersistent
	 * Size -> 0x0000 (FullSize[0x0160] - InheritedSize[0x0160])
	 */
	class ULevelStreamingPersistent : public ULevelStreaming
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LevelStreamingVolume
	 * Size -> 0x0018 (FullSize[0x0280] - InheritedSize[0x0268])
	 */
	class ALevelStreamingVolume : public AVolume
	{
	public:
		TArray<class FName>                                        StreamingLevelNames;                                     // 0x0268(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		unsigned char                                              bEditorPreVisOnly : 1;                                   // 0x0278(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisabled : 1;                                           // 0x0278(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RKU1[0x3];                                   // 0x0279(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EStreamingVolumeUsage                                      StreamingUsage;                                          // 0x027C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2U6A[0x3];                                   // 0x027D(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LightmappedSurfaceCollection
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class ULightmappedSurfaceCollection : public UObject
	{
	public:
		class UModel*                                              SourceModel;                                             // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Surfaces;                                                // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LightMapTexture2D
	 * Size -> 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
	 */
	class ULightMapTexture2D : public UTexture2D
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LightMapVirtualTexture2D
	 * Size -> 0x0010 (FullSize[0x01D0] - InheritedSize[0x01C0])
	 */
	class ULightMapVirtualTexture2D : public UTexture2D
	{
	public:
		TArray<int8_t>                                             TypeToLayer;                                             // 0x01B8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1DXI[0x8];                                   // 0x01C8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LightmassCharacterIndirectDetailVolume
	 * Size -> 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
	 */
	class ALightmassCharacterIndirectDetailVolume : public AVolume
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LightmassImportanceVolume
	 * Size -> 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
	 */
	class ALightmassImportanceVolume : public AVolume
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LightmassPortal
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class ALightmassPortal : public AActor
	{
	public:
		class ULightmassPortalComponent*                           PortalComponent;                                         // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LightmassPortalComponent
	 * Size -> 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
	 */
	class ULightmassPortalComponent : public USceneComponent
	{
	public:
		class UBoxComponent*                                       PreviewBox;                                              // 0x0218(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LightmassPrimitiveSettingsObject
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class ULightmassPrimitiveSettingsObject : public UObject
	{
	public:
		struct FLightmassPrimitiveSettings                         LightmassSettings;                                       // 0x0030(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LineBatchComponent
	 * Size -> 0x0040 (FullSize[0x04C0] - InheritedSize[0x0480])
	 */
	class ULineBatchComponent : public UPrimitiveComponent
	{
	public:
		unsigned char                                              UnknownData_24Y9[0x40];                                  // 0x0480(0x0040) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LODActor
	 * Size -> 0x0090 (FullSize[0x02C0] - InheritedSize[0x0230])
	 */
	class ALODActor : public AActor
	{
	public:
		class UStaticMeshComponent*                                StaticMeshComponent;                                     // 0x0230(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<struct FHLODInstancingKey, class UInstancedStaticMeshComponent*> InstancedStaticMeshComponents;                           // 0x0238(0x0050) ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		class UHLODProxy*                                          Proxy;                                                   // 0x0288(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                Key;                                                     // 0x0290(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      LODDrawDistance;                                         // 0x029C(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    LODLevel;                                                // 0x02A0(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5MTE[0x4];                                   // 0x02A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      SubActors;                                               // 0x02A8(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		unsigned char                                              CachedNumHLODLevels;                                     // 0x02B8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6M3N[0x7];                                   // 0x02B9(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LODSyncComponent
	 * Size -> 0x0090 (FullSize[0x0148] - InheritedSize[0x00B8])
	 */
	class ULODSyncComponent : public UActorComponent
	{
	public:
		int32_t                                                    NumLODs;                                                 // 0x00B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ForcedLOD;                                               // 0x00BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FComponentSync>                              ComponentsToSync;                                        // 0x00C0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TMap<class FName, struct FLODMappingData>                  CustomLODMapping;                                        // 0x00D0(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    CurrentLOD;                                              // 0x0120(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    CurrentNumLODs;                                          // 0x0124(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UPrimitiveComponent*>                         DriveComponents;                                         // 0x0128(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class UPrimitiveComponent*>                         SubComponents;                                           // 0x0138(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		class FString GetLODSyncDebugText();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LODSyncInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class ULODSyncInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MapBuildDataRegistry
	 * Size -> 0x0210 (FullSize[0x0240] - InheritedSize[0x0030])
	 */
	class UMapBuildDataRegistry : public UObject
	{
	public:
		ELightingBuildQuality                                      LevelLightingQuality;                                    // 0x0030(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XF0F[0x20F];                                 // 0x0031(0x020F) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Material
	 * Size -> 0x0438 (FullSize[0x04C8] - InheritedSize[0x0090])
	 */
	class UMaterial : public UMaterialInterface
	{
	public:
		class UPhysicalMaterial*                                   PhysMaterial;                                            // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicalMaterialMask*                               PhysMaterialMask;                                        // 0x0098(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicalMaterial*                                   PhysicalMaterialMap[0x8];                                // 0x00A0(0x0040) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FScalarMaterialInput                                Metallic;                                                // 0x00E0(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FScalarMaterialInput                                Specular;                                                // 0x00FC(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FScalarMaterialInput                                Anisotropy;                                              // 0x0118(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FVectorMaterialInput                                Normal;                                                  // 0x0134(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FVectorMaterialInput                                Tangent;                                                 // 0x0150(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FColorMaterialInput                                 EmissiveColor;                                           // 0x016C(0x001C) NoDestructor, NativeAccessSpecifierPublic
		EMaterialDomain                                            MaterialDomain;                                          // 0x0188(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBlendMode                                                 BlendMode;                                               // 0x0189(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDecalBlendMode                                            DecalBlendMode;                                          // 0x018A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E7TV[0x1];                                   // 0x018B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CustomDecalBlendModeChannels;                            // 0x018C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMaterialDecalResponse                                     MaterialDecalResponse;                                   // 0x0190(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NF3Z[0x3];                                   // 0x0191(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bIsDenseGeometryBHVR : 1;                                // 0x0194(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WXZX[0x3];                                   // 0x0195(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EMaterialShadingModel                                      ShadingModel;                                            // 0x0198(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bCastDynamicShadowAsMasked : 1;                          // 0x0199(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OBT1[0x2];                                   // 0x019A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              CastMaskedMaterialShadow : 1;                            // 0x019C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BD71[0x3];                                   // 0x019D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMaterialShadingModelField                          ShadingModels;                                           // 0x01A0(0x0002) NoDestructor, AssetRegistrySearchable, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_XBZN[0x2];                                   // 0x01A2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OpacityMaskClipValue;                                    // 0x01A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVectorMaterialInput                                WorldPositionOffset;                                     // 0x01A8(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FScalarMaterialInput                                Refraction;                                              // 0x01C4(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FMaterialAttributesInput                            MaterialAttributes;                                      // 0x01E0(0x0020) NoDestructor, NativeAccessSpecifierPublic
		struct FScalarMaterialInput                                PixelDepthOffset;                                        // 0x0200(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FShadingModelMaterialInput                          ShadingModelFromMaterialExpression;                      // 0x021C(0x001C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableSeparateTranslucency : 1;                         // 0x0238(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableResponsiveAA : 1;                                 // 0x0238(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bScreenSpaceReflections : 1;                             // 0x0238(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bContactShadows : 1;                                     // 0x0238(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TwoSided : 1;                                            // 0x0238(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DitheredLODTransition : 1;                               // 0x0238(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DitherOpacityMask : 1;                                   // 0x0238(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAllowNegativeEmissiveColor : 1;                         // 0x0238(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETranslucencyLightingMode                                  TranslucencyLightingMode;                                // 0x0239(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableMobileSeparateTranslucency : 1;                   // 0x023A(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZEEH[0x1];                                   // 0x023B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NumCustomizedUVs;                                        // 0x023C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TranslucencyDirectionalLightingIntensity;                // 0x0240(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TranslucentShadowDensityScale;                           // 0x0244(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TranslucentSelfShadowDensityScale;                       // 0x0248(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TranslucentSelfShadowSecondDensityScale;                 // 0x024C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TranslucentSelfShadowSecondOpacity;                      // 0x0250(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TranslucentBackscatteringExponent;                       // 0x0254(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        TranslucentMultipleScatteringExtinction;                 // 0x0258(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TranslucentShadowStartOffset;                            // 0x0268(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableDepthTest : 1;                                   // 0x026C(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AU4P[0x3];                                   // 0x026D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bRenderFragmentOnce : 1;                                 // 0x0270(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NVAQ[0x3];                                   // 0x0271(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bWriteOnlyAlpha : 1;                                     // 0x0274(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bGenerateSphericalParticleNormals : 1;                   // 0x0274(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTangentSpaceNormal : 1;                                 // 0x0274(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseEmissiveForDynamicAreaLighting : 1;                  // 0x0274(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bBlockGI : 1;                                            // 0x0274(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedAsSpecialEngineMaterial : 1;                        // 0x0274(0x0001) BIT_FIELD DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithSkeletalMesh : 1;                               // 0x0274(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithEditorCompositing : 1;                          // 0x0274(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithParticleSprites : 1;                            // 0x0275(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithBeamTrails : 1;                                 // 0x0275(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithMeshParticles : 1;                              // 0x0275(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithNiagaraSprites : 1;                             // 0x0275(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithNiagaraRibbons : 1;                             // 0x0275(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithNiagaraMeshParticles : 1;                       // 0x0275(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithGeometryCache : 1;                              // 0x0275(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithStaticLighting : 1;                             // 0x0275(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithMorphTargets : 1;                               // 0x0276(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithSplineMeshes : 1;                               // 0x0276(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithInstancedStaticMeshes : 1;                      // 0x0276(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithGeometryCollections : 1;                        // 0x0276(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsesDistortion : 1;                                     // 0x0276(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithClothing : 1;                                   // 0x0276(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JOQ8[0x1];                                   // 0x0277(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bUsedWithWater : 1;                                      // 0x0278(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithHairStrands : 1;                                // 0x0278(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithLidarPointCloud : 1;                            // 0x0278(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsedWithVirtualHeightfieldMesh : 1;                     // 0x0278(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BYUU[0x3];                                   // 0x0279(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bUsedWithUI : 1;                                         // 0x027C(0x0001) BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAutomaticallySetUsageInEditor : 1;                      // 0x027C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFullyRough : 1;                                         // 0x027C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseFullPrecision : 1;                                   // 0x027C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseLightmapDirectionality : 1;                          // 0x027C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseAlphaToCoverage : 1;                                 // 0x027C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8L9T[0x3];                                   // 0x027D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bForwardRenderUsePreintegratedGFForSimpleIBL : 1;        // 0x0280(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QD4F[0x3];                                   // 0x0281(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bUseHQForwardReflections : 1;                            // 0x0284(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForwardBlendsSkyLightCubemaps : 1;                      // 0x0284(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsePlanarForwardReflections : 1;                        // 0x0284(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNormalCurvatureToRoughness : 1;                         // 0x0284(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMaterialTessellationMode                                  D3D11TessellationMode;                                   // 0x0285(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableCrackFreeDisplacement : 1;                        // 0x0286(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableAdaptiveTessellation : 1;                         // 0x0286(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AllowTranslucentCustomDepthWrites : 1;                   // 0x0286(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Wireframe : 1;                                           // 0x0286(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              WriteDepthToTranslucentMaterial : 1;                     // 0x0286(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMaterialShadingRate                                       ShadingRate;                                             // 0x0287(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCanMaskedBeAssumedOpaque : 1;                           // 0x0288(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsMasked : 1;                                           // 0x0288(0x0001) BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsPreviewMaterial : 1;                                  // 0x0288(0x0001) BIT_FIELD Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsFunctionPreviewMaterial : 1;                          // 0x0288(0x0001) BIT_FIELD Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseMaterialAttributes : 1;                              // 0x0288(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCastRayTracedShadows : 1;                               // 0x0288(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseTranslucencyVertexFog : 1;                           // 0x0288(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bApplyCloudFogging : 1;                                  // 0x0288(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsSky : 1;                                              // 0x0289(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IZ6J[0x2];                                   // 0x028A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bUseTranslucencyVolumetricFog : 1;                       // 0x028C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RG4U[0x3];                                   // 0x028D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bComputeFogPerPixel : 1;                                 // 0x0290(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOutputTranslucentVelocity : 1;                          // 0x0290(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAllowDevelopmentShaderCompile : 1;                      // 0x0290(0x0001) BIT_FIELD Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsMaterialEditorStatsMaterial : 1;                      // 0x0290(0x0001) BIT_FIELD Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBlendableLocation                                         BlendableLocation;                                       // 0x0291(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              BlendableOutputAlpha : 1;                                // 0x0292(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableStencilTest : 1;                                  // 0x0292(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMaterialStencilCompare                                    StencilCompare;                                          // 0x0293(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              StencilRefValue;                                         // 0x0294(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERefractionMode                                            RefractionMode;                                          // 0x0295(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J8V1[0x2];                                   // 0x0296(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BlendablePriority;                                       // 0x0298(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsBlendable : 1;                                        // 0x029C(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8R2W[0x3];                                   // 0x029D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   UsageFlagWarnings;                                       // 0x02A0(0x0004) ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RefractionDepthBias;                                     // 0x02A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               StateId;                                                 // 0x02A8(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDisplacement;                                         // 0x02B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J3T6[0x34];                                  // 0x02BC(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMaterialCachedExpressionData                       CachedExpressionData;                                    // 0x02F0(0x01D8) NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialBillboardComponent
	 * Size -> 0x0010 (FullSize[0x0490] - InheritedSize[0x0480])
	 */
	class UMaterialBillboardComponent : public UPrimitiveComponent
	{
	public:
		TArray<struct FMaterialSpriteElement>                      Elements;                                                // 0x0480(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		void SetElements(TArray<struct FMaterialSpriteElement> NewElements);
		void AddElement(class UMaterialInterface* Material, class UCurveFloat* DistanceToOpacityCurve, bool bSizeIsInScreenSpace, float BaseSizeX, float BaseSizeY, class UCurveFloat* DistanceToSizeCurve);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionAbs
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionAbs : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ISYO[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionActorPositionWS
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionActorPositionWS : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionAdd
	 * Size -> 0x0040 (FullSize[0x0088] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionAdd : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    A;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    B;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      ConstA;                                                  // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstB;                                                  // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionAntialiasedTextureMask
	 * Size -> 0x0008 (FullSize[0x00A0] - InheritedSize[0x0098])
	 */
	class UMaterialExpressionAntialiasedTextureMask : public UMaterialExpressionTextureSampleParameter2D
	{
	public:
		float                                                      Threshold;                                               // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETextureColorChannel                                       Channel;                                                 // 0x009C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VYNQ[0x3];                                   // 0x009D(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionAppendVector
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionAppendVector : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    A;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    B;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionArccosine
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionArccosine : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IPTI[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionArccosineFast
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionArccosineFast : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1WJN[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionArcsine
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionArcsine : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CPVT[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionArcsineFast
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionArcsineFast : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RBOV[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionArctangent
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionArctangent : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QZC5[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionArctangent2
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionArctangent2 : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Y;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    X;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionArctangent2Fast
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionArctangent2Fast : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Y;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    X;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionArctangentFast
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionArctangentFast : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4FBT[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionAtmosphericFogColor
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionAtmosphericFogColor : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    WorldPosition;                                           // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7O3X[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionAtmosphericLightColor
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionAtmosphericLightColor : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionAtmosphericLightVector
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionAtmosphericLightVector : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionBentNormalCustomOutput
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionBentNormalCustomOutput : public UMaterialExpressionCustomOutput
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V34Y[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionBlackBody
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionBlackBody : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    TEMP;                                                    // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NYZ6[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionBlendMaterialAttributes
	 * Size -> 0x0060 (FullSize[0x00A8] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionBlendMaterialAttributes : public UMaterialExpression
	{
	public:
		struct FMaterialAttributesInput                            A;                                                       // 0x0048(0x0020) NoDestructor, NativeAccessSpecifierPublic
		struct FMaterialAttributesInput                            B;                                                       // 0x0068(0x0020) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    alpha;                                                   // 0x0088(0x001C) NoDestructor, NativeAccessSpecifierPublic
		EMaterialAttributeBlend                                    PixelAttributeBlendType;                                 // 0x00A4(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMaterialAttributeBlend                                    VertexAttributeBlendType;                                // 0x00A5(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6HOR[0x2];                                   // 0x00A6(0x0002) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionBreakMaterialAttributes
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionBreakMaterialAttributes : public UMaterialExpression
	{
	public:
		struct FMaterialAttributesInput                            MaterialAttributes;                                      // 0x0048(0x0020) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionBumpOffset
	 * Size -> 0x0060 (FullSize[0x00A8] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionBumpOffset : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Coordinate;                                              // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Height;                                                  // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    HeightRatioInput;                                        // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      HeightRatio;                                             // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReferencePlane;                                          // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   ConstCoordinate;                                         // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionCameraPositionWS
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionCameraPositionWS : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionCameraVectorWS
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionCameraVectorWS : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionCeil
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionCeil : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9SNJ[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionParameter
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionParameter : public UMaterialExpression
	{
	public:
		class FName                                                ParameterName;                                           // 0x0048(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               ExpressionGUID;                                          // 0x0054(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VF3R[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionVectorParameter
	 * Size -> 0x0018 (FullSize[0x0080] - InheritedSize[0x0068])
	 */
	class UMaterialExpressionVectorParameter : public UMaterialExpressionParameter
	{
	public:
		struct FLinearColor                                        defaultValue;                                            // 0x0068(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseCustomPrimitiveData;                                 // 0x0078(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PrimitiveDataIndex;                                      // 0x0079(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C5R3[0x6];                                   // 0x007A(0x0006) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionChannelMaskParameter
	 * Size -> 0x0008 (FullSize[0x0088] - InheritedSize[0x0080])
	 */
	class UMaterialExpressionChannelMaskParameter : public UMaterialExpressionVectorParameter
	{
	public:
		EChannelMaskParameterColor                                 MaskChannel;                                             // 0x0080(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YZQE[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionClamp
	 * Size -> 0x0060 (FullSize[0x00A8] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionClamp : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Min;                                                     // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Max;                                                     // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		EClampMode                                                 ClampMode;                                               // 0x009C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UU5D[0x3];                                   // 0x009D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDefault;                                              // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDefault;                                              // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionClearCoatNormalCustomOutput
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionClearCoatNormalCustomOutput : public UMaterialExpressionCustomOutput
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PKOC[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionCloudSampleAttribute
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionCloudSampleAttribute : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionCollectionParameter
	 * Size -> 0x0028 (FullSize[0x0070] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionCollectionParameter : public UMaterialExpression
	{
	public:
		class UMaterialParameterCollection*                        Collection;                                              // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ParameterName;                                           // 0x0050(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               ParameterId;                                             // 0x005C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_657S[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionComment
	 * Size -> 0x0030 (FullSize[0x0078] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionComment : public UMaterialExpression
	{
	public:
		int32_t                                                    SizeX;                                                   // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SizeY;                                                   // 0x004C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Text;                                                    // 0x0050(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        CommentColor;                                            // 0x0060(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FontSize;                                                // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IILS[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionComponentMask
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionComponentMask : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              R : 1;                                                   // 0x0064(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              G : 1;                                                   // 0x0064(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              B : 1;                                                   // 0x0064(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              A : 1;                                                   // 0x0064(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1SMY[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionConstant
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionConstant : public UMaterialExpression
	{
	public:
		float                                                      R;                                                       // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LN1J[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionConstant2Vector
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionConstant2Vector : public UMaterialExpression
	{
	public:
		float                                                      R;                                                       // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      G;                                                       // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionConstant3Vector
	 * Size -> 0x0010 (FullSize[0x0058] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionConstant3Vector : public UMaterialExpression
	{
	public:
		struct FLinearColor                                        Constant;                                                // 0x0048(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionConstant4Vector
	 * Size -> 0x0010 (FullSize[0x0058] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionConstant4Vector : public UMaterialExpression
	{
	public:
		struct FLinearColor                                        Constant;                                                // 0x0048(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionConstantBiasScale
	 * Size -> 0x0028 (FullSize[0x0070] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionConstantBiasScale : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      Bias;                                                    // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S7UB[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionCosine
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionCosine : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      Period;                                                  // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionCrossProduct
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionCrossProduct : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    A;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    B;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionScalarParameter
	 * Size -> 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
	 */
	class UMaterialExpressionScalarParameter : public UMaterialExpressionParameter
	{
	public:
		float                                                      defaultValue;                                            // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseCustomPrimitiveData;                                 // 0x006C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PrimitiveDataIndex;                                      // 0x006D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TJTN[0x2];                                   // 0x006E(0x0002) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionCurveAtlasRowParameter
	 * Size -> 0x0030 (FullSize[0x00A0] - InheritedSize[0x0070])
	 */
	class UMaterialExpressionCurveAtlasRowParameter : public UMaterialExpressionScalarParameter
	{
	public:
		class UCurveLinearColor*                                   Curve;                                                   // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveLinearColorAtlas*                              Atlas;                                                   // 0x0078(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FExpressionInput                                    InputTime;                                               // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TYXZ[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionCustom
	 * Size -> 0x0068 (FullSize[0x00B0] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionCustom : public UMaterialExpression
	{
	public:
		class FString                                              Code;                                                    // 0x0048(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECustomMaterialOutputType                                  OutputType;                                              // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PJ1A[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Description;                                             // 0x0060(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCustomInput>                                Inputs;                                                  // 0x0070(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCustomOutput>                               AdditionalOutputs;                                       // 0x0080(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCustomDefine>                               AdditionalDefines;                                       // 0x0090(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      IncludeFilePaths;                                        // 0x00A0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDDX
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDDX : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    value;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q5O0[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDDY
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDDY : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    value;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NNRW[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDecalDerivative
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDecalDerivative : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDecalLifetimeOpacity
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDecalLifetimeOpacity : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDecalMipmapLevel
	 * Size -> 0x0028 (FullSize[0x0070] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDecalMipmapLevel : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    TextureSize;                                             // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      ConstWidth;                                              // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstHeight;                                             // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4Z85[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDeltaTime
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDeltaTime : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDepthFade
	 * Size -> 0x0040 (FullSize[0x0088] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDepthFade : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    InOpacity;                                               // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    FadeDistance;                                            // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      OpacityDefault;                                          // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FadeDistanceDefault;                                     // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDepthOfFieldFunction
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDepthOfFieldFunction : public UMaterialExpression
	{
	public:
		EDepthOfFieldFunctionValue                                 FunctionValue;                                           // 0x0048(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0KWX[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FExpressionInput                                    Depth;                                                   // 0x004C(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDeriveNormalZ
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDeriveNormalZ : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    InXY;                                                    // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GBRP[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDesaturation
	 * Size -> 0x0048 (FullSize[0x0090] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDesaturation : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Fraction;                                                // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FLinearColor                                        LuminanceFactors;                                        // 0x0080(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDistance
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDistance : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    A;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    B;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDistanceCullFade
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDistanceCullFade : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDistanceFieldGradient
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDistanceFieldGradient : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    position;                                                // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2YNO[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDistanceFieldsRenderingSwitch
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDistanceFieldsRenderingSwitch : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    No;                                                      // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Yes;                                                     // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDistanceToNearestSurface
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDistanceToNearestSurface : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    position;                                                // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_24VO[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDivide
	 * Size -> 0x0040 (FullSize[0x0088] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDivide : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    A;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    B;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      ConstA;                                                  // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstB;                                                  // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDotProduct
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDotProduct : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    A;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    B;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionDynamicParameter
	 * Size -> 0x0028 (FullSize[0x0070] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionDynamicParameter : public UMaterialExpression
	{
	public:
		TArray<class FString>                                      ParamNames;                                              // 0x0048(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
		struct FLinearColor                                        defaultValue;                                            // 0x0058(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   ParameterIndex;                                          // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6DX4[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionEyeAdaptation
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionEyeAdaptation : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionFeatureLevelSwitch
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionFeatureLevelSwitch : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Default;                                                 // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RI1S[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionFloor
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionFloor : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3DC7[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionFmod
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionFmod : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    A;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    B;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionFontSample
	 * Size -> 0x0010 (FullSize[0x0058] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionFontSample : public UMaterialExpression
	{
	public:
		class UFont*                                               Font;                                                    // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FontTexturePage;                                         // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7PDP[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionFontSampleParameter
	 * Size -> 0x0028 (FullSize[0x0080] - InheritedSize[0x0058])
	 */
	class UMaterialExpressionFontSampleParameter : public UMaterialExpressionFontSample
	{
	public:
		class FName                                                ParameterName;                                           // 0x0058(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               ExpressionGUID;                                          // 0x0064(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Group;                                                   // 0x0074(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionFrac
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionFrac : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ISCZ[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionFresnel
	 * Size -> 0x0060 (FullSize[0x00A8] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionFresnel : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    ExponentIn;                                              // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      Exponent;                                                // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FExpressionInput                                    BaseReflectFractionIn;                                   // 0x0068(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      BaseReflectFraction;                                     // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Normal;                                                  // 0x0088(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QLP2[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionFunctionInput
	 * Size -> 0x0098 (FullSize[0x00E0] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionFunctionInput : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Preview;                                                 // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		class FName                                                InputName;                                               // 0x0064(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0070(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               ID;                                                      // 0x0080(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFunctionInputType                                         inputType;                                               // 0x0090(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X9Z6[0xF];                                   // 0x0091(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector4                                            PreviewValue;                                            // 0x00A0(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsePreviewValueAsDefault : 1;                           // 0x00B0(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MODV[0x3];                                   // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SortPriority;                                            // 0x00B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCompilingFunctionPreview : 1;                           // 0x00B8(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0O2P[0x27];                                  // 0x00B9(0x0027) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionFunctionOutput
	 * Size -> 0x0058 (FullSize[0x00A0] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionFunctionOutput : public UMaterialExpression
	{
	public:
		class FName                                                OutputName;                                              // 0x0048(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LDR7[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Description;                                             // 0x0058(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortPriority;                                            // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FExpressionInput                                    A;                                                       // 0x006C(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bLastPreviewed : 1;                                      // 0x0088(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N1IM[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               ID;                                                      // 0x008C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GLNM[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionGetMaterialAttributes
	 * Size -> 0x0030 (FullSize[0x0078] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionGetMaterialAttributes : public UMaterialExpression
	{
	public:
		struct FMaterialAttributesInput                            MaterialAttributes;                                      // 0x0048(0x0020) NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FGuid>                                       AttributeGetTypes;                                       // 0x0068(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionGIReplace
	 * Size -> 0x0058 (FullSize[0x00A0] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionGIReplace : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Default;                                                 // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    StaticIndirect;                                          // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    DynamicIndirect;                                         // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PG71[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionHairAttributes
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionHairAttributes : public UMaterialExpression
	{
	public:
		unsigned char                                              bUseTangentSpace : 1;                                    // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JLG3[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionHairColor
	 * Size -> 0x0058 (FullSize[0x00A0] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionHairColor : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Melanin;                                                 // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Redness;                                                 // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    DyeColor;                                                // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_414C[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionIf
	 * Size -> 0x0098 (FullSize[0x00E0] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionIf : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    A;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    B;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    AGreaterThanB;                                           // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    AEqualsB;                                                // 0x009C(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    ALessThanB;                                              // 0x00B8(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      EqualsThreshold;                                         // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstB;                                                  // 0x00D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstAEqualsB;                                           // 0x00DC(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionInverseLinearInterpolate
	 * Size -> 0x0068 (FullSize[0x00B0] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionInverseLinearInterpolate : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    A;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    B;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    value;                                                   // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      ConstA;                                                  // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstB;                                                  // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstValue;                                              // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClampResult;                                            // 0x00A8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0HRL[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionLightmapUVs
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionLightmapUVs : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionLightmassReplace
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionLightmassReplace : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Realtime;                                                // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Lightmass;                                               // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionLightVector
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionLightVector : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionLinearInterpolate
	 * Size -> 0x0060 (FullSize[0x00A8] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionLinearInterpolate : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    A;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    B;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    alpha;                                                   // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      ConstA;                                                  // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstB;                                                  // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstAlpha;                                              // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionLogarithm10
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionLogarithm10 : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    X;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R45A[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionLogarithm2
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionLogarithm2 : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    X;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RJ1N[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionMakeMaterialAttributes
	 * Size -> 0x0310 (FullSize[0x0358] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionMakeMaterialAttributes : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    BaseColor;                                               // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Metallic;                                                // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Specular;                                                // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Roughness;                                               // 0x009C(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Anisotropy;                                              // 0x00B8(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    EmissiveColor;                                           // 0x00D4(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Opacity;                                                 // 0x00F0(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    OpacityMask;                                             // 0x010C(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Normal;                                                  // 0x0128(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Tangent;                                                 // 0x0144(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    WorldPositionOffset;                                     // 0x0160(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    WorldDisplacement;                                       // 0x017C(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    TessellationMultiplier;                                  // 0x0198(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    SubsurfaceColor;                                         // 0x01B4(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    ClearCoat;                                               // 0x01D0(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    ClearCoatRoughness;                                      // 0x01EC(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    AmbientOcclusion;                                        // 0x0208(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Refraction;                                              // 0x0224(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    CustomizedUVs[0x8];                                      // 0x0240(0x00E0) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    PixelDepthOffset;                                        // 0x0320(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    ShadingModel;                                            // 0x033C(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionMapARPassthroughCameraUV
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionMapARPassthroughCameraUV : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Coordinates;                                             // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5UUF[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionMaterialAttributeLayers
	 * Size -> 0x00B8 (FullSize[0x0100] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionMaterialAttributeLayers : public UMaterialExpression
	{
	public:
		class FName                                                ParameterName;                                           // 0x0048(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               ExpressionGUID;                                          // 0x0054(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMaterialAttributesInput                            Input;                                                   // 0x0064(0x0020) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X30F[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMaterialLayersFunctions                            DefaultLayers;                                           // 0x0088(0x0040) Edit, NativeAccessSpecifierPublic
		TArray<class UMaterialExpressionMaterialFunctionCall*>     LayerCallers;                                            // 0x00C8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		int32_t                                                    NumActiveLayerCallers;                                   // 0x00D8(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K24A[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMaterialExpressionMaterialFunctionCall*>     BlendCallers;                                            // 0x00E0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		int32_t                                                    NumActiveBlendCallers;                                   // 0x00F0(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLayerGraphBuilt;                                      // 0x00F4(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SCD8[0xB];                                   // 0x00F5(0x000B) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionMaterialFunctionCall
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionMaterialFunctionCall : public UMaterialExpression
	{
	public:
		class UMaterialFunctionInterface*                          MaterialFunction;                                        // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMaterialParameterInfo                              FunctionParameterInfo;                                   // 0x0050(0x0014) Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9MII[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionMaterialLayerOutput
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UMaterialExpressionMaterialLayerOutput : public UMaterialExpressionFunctionOutput
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionMaterialProxyReplace
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionMaterialProxyReplace : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Realtime;                                                // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    MaterialProxy;                                           // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionMax
	 * Size -> 0x0040 (FullSize[0x0088] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionMax : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    A;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    B;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      ConstA;                                                  // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstB;                                                  // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionMin
	 * Size -> 0x0040 (FullSize[0x0088] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionMin : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    A;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    B;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      ConstA;                                                  // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstB;                                                  // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionMultiply
	 * Size -> 0x0040 (FullSize[0x0088] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionMultiply : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    A;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    B;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      ConstA;                                                  // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstB;                                                  // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionRerouteBase
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionRerouteBase : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionNamedRerouteBase
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionNamedRerouteBase : public UMaterialExpressionRerouteBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionNamedRerouteDeclaration
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionNamedRerouteDeclaration : public UMaterialExpressionNamedRerouteBase
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		class FName                                                Name;                                                    // 0x0064(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               VariableGuid;                                            // 0x0070(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionNamedRerouteUsage
	 * Size -> 0x0018 (FullSize[0x0060] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionNamedRerouteUsage : public UMaterialExpressionNamedRerouteBase
	{
	public:
		class UMaterialExpressionNamedRerouteDeclaration*          Declaration;                                             // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               DeclarationGuid;                                         // 0x0050(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionNoise
	 * Size -> 0x0060 (FullSize[0x00A8] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionNoise : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    position;                                                // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    FilterWidth;                                             // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENoiseFunction                                             NoiseFunction;                                           // 0x0088(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XLSS[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bTurbulence : 1;                                         // 0x008C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OBLM[0x3];                                   // 0x008D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Levels;                                                  // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OutputMin;                                               // 0x0094(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OutputMax;                                               // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LevelScale;                                              // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTiling : 1;                                             // 0x00A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QQ5S[0x3];                                   // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   RepeatSize;                                              // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionNormalize
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionNormalize : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    VectorInput;                                             // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8KMG[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionObjectBounds
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionObjectBounds : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionObjectOrientation
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionObjectOrientation : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionObjectPositionWS
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionObjectPositionWS : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionObjectRadius
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionObjectRadius : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionOneMinus
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionOneMinus : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W6OX[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionPanner
	 * Size -> 0x0068 (FullSize[0x00B0] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionPanner : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Coordinate;                                              // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Time;                                                    // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Speed;                                                   // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      SpeedX;                                                  // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedY;                                                  // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   ConstCoordinate;                                         // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFractionalPart;                                         // 0x00A8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VAMF[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionParticleColor
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionParticleColor : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionParticleDirection
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionParticleDirection : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionParticleMacroUV
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionParticleMacroUV : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionParticleMotionBlurFade
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionParticleMotionBlurFade : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionParticlePositionWS
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionParticlePositionWS : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionParticleRadius
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionParticleRadius : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionParticleRandom
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionParticleRandom : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionParticleRelativeTime
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionParticleRelativeTime : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionParticleSize
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionParticleSize : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionParticleSpeed
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionParticleSpeed : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionParticleSubUV
	 * Size -> 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
	 */
	class UMaterialExpressionParticleSubUV : public UMaterialExpressionTextureSample
	{
	public:
		unsigned char                                              bBlend : 1;                                              // 0x0070(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1A0G[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionParticleSubUVProperties
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionParticleSubUVProperties : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionPerInstanceCustomData
	 * Size -> 0x0028 (FullSize[0x0070] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionPerInstanceCustomData : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    defaultValue;                                            // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      ConstDefaultValue;                                       // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   DataIndex;                                               // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TAT0[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionPerInstanceFadeAmount
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionPerInstanceFadeAmount : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionPerInstanceRandom
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionPerInstanceRandom : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionPixelDepth
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionPixelDepth : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionPixelNormalWS
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionPixelNormalWS : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionPower
	 * Size -> 0x0040 (FullSize[0x0088] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionPower : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Base;                                                    // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Exponent;                                                // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      ConstExponent;                                           // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1H71[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionPrecomputedAOMask
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionPrecomputedAOMask : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionPreSkinnedLocalBounds
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionPreSkinnedLocalBounds : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionPreSkinnedNormal
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionPreSkinnedNormal : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionPreSkinnedPosition
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionPreSkinnedPosition : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionPreviousFrameSwitch
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionPreviousFrameSwitch : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    CurrentFrame;                                            // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    PreviousFrame;                                           // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionQualitySwitch
	 * Size -> 0x0090 (FullSize[0x00D8] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionQualitySwitch : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Default;                                                 // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Inputs[0x4];                                             // 0x0064(0x0070) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L63Z[0x4];                                   // 0x00D4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionRayTracingQualitySwitch
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionRayTracingQualitySwitch : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Normal;                                                  // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    RayTraced;                                               // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionReflectionCapturePassSwitch
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionReflectionCapturePassSwitch : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Default;                                                 // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Reflection;                                              // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionReflectionVectorWS
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionReflectionVectorWS : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    CustomWorldNormal;                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bNormalizeCustomWorldNormal : 1;                         // 0x0064(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BHZW[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionReroute
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionReroute : public UMaterialExpressionRerouteBase
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HV0S[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionRotateAboutAxis
	 * Size -> 0x0078 (FullSize[0x00C0] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionRotateAboutAxis : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    NormalizedRotationAxis;                                  // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    RotationAngle;                                           // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    PivotPoint;                                              // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    position;                                                // 0x009C(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      Period;                                                  // 0x00B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GN1U[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionRotator
	 * Size -> 0x0048 (FullSize[0x0090] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionRotator : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Coordinate;                                              // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Time;                                                    // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      CenterX;                                                 // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CenterY;                                                 // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Speed;                                                   // 0x0088(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   ConstCoordinate;                                         // 0x008C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionRound
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionRound : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4L5T[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionRuntimeVirtualTextureOutput
	 * Size -> 0x00C8 (FullSize[0x0110] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionRuntimeVirtualTextureOutput : public UMaterialExpressionCustomOutput
	{
	public:
		struct FExpressionInput                                    BaseColor;                                               // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Specular;                                                // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Roughness;                                               // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Normal;                                                  // 0x009C(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    WorldHeight;                                             // 0x00B8(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Opacity;                                                 // 0x00D4(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Mask;                                                    // 0x00F0(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QKJ7[0x4];                                   // 0x010C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionRuntimeVirtualTextureReplace
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionRuntimeVirtualTextureReplace : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Default;                                                 // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    VirtualTextureOutput;                                    // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionRuntimeVirtualTextureSample
	 * Size -> 0x0068 (FullSize[0x00B0] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionRuntimeVirtualTextureSample : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Coordinates;                                             // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    WorldPosition;                                           // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    MipValue;                                                // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2ZHZ[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URuntimeVirtualTexture*                              VirtualTexture;                                          // 0x00A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERuntimeVirtualTextureMaterialType                         MaterialType;                                            // 0x00A8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSinglePhysicalSpace;                                    // 0x00A9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAdaptive;                                               // 0x00AA(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERuntimeVirtualTextureMipValueMode                         MipValueMode;                                            // 0x00AB(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERuntimeVirtualTextureTextureAddressMode                   TextureAddressMode;                                      // 0x00AC(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TEIZ[0x3];                                   // 0x00AD(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionRuntimeVirtualTextureSampleParameter
	 * Size -> 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
	 */
	class UMaterialExpressionRuntimeVirtualTextureSampleParameter : public UMaterialExpressionRuntimeVirtualTextureSample
	{
	public:
		class FName                                                ParameterName;                                           // 0x00B0(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               ExpressionGUID;                                          // 0x00BC(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Group;                                                   // 0x00CC(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSamplePhysicsVectorField
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSamplePhysicsVectorField : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    WorldPosition;                                           // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		EFieldVectorType                                           FieldTarget;                                             // 0x0064(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EBOM[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSamplePhysicsScalarField
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSamplePhysicsScalarField : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    WorldPosition;                                           // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		EFieldScalarType                                           FieldTarget;                                             // 0x0064(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6A87[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSamplePhysicsIntegerField
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSamplePhysicsIntegerField : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    WorldPosition;                                           // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		EFieldIntegerType                                          FieldTarget;                                             // 0x0064(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SVQE[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSaturate
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSaturate : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B033[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSceneColor
	 * Size -> 0x0048 (FullSize[0x0090] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSceneColor : public UMaterialExpression
	{
	public:
		EMaterialSceneAttributeInputMode                           InputMode;                                               // 0x0048(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_67D2[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FExpressionInput                                    Input;                                                   // 0x004C(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    OffsetFraction;                                          // 0x0068(0x001C) Deprecated, NoDestructor, NativeAccessSpecifierPublic
		struct FVector2D                                           ConstInput;                                              // 0x0084(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4IVS[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSceneDepth
	 * Size -> 0x0048 (FullSize[0x0090] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSceneDepth : public UMaterialExpression
	{
	public:
		EMaterialSceneAttributeInputMode                           InputMode;                                               // 0x0048(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XL35[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FExpressionInput                                    Input;                                                   // 0x004C(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Coordinates;                                             // 0x0068(0x001C) Deprecated, NoDestructor, NativeAccessSpecifierPublic
		struct FVector2D                                           ConstInput;                                              // 0x0084(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VUUJ[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSceneDepthWithoutWater
	 * Size -> 0x0030 (FullSize[0x0078] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSceneDepthWithoutWater : public UMaterialExpression
	{
	public:
		EMaterialSceneAttributeInputMode                           InputMode;                                               // 0x0048(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V054[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FExpressionInput                                    Input;                                                   // 0x004C(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FVector2D                                           ConstInput;                                              // 0x0068(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FallbackDepth;                                           // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZCSN[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSceneTexelSize
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSceneTexelSize : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSceneTexture
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSceneTexture : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Coordinates;                                             // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		ESceneTextureId                                            SceneTextureId;                                          // 0x0064(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFiltered;                                               // 0x0065(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9129[0x2];                                   // 0x0066(0x0002) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionScreenPosition
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionScreenPosition : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSetMaterialAttributes
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSetMaterialAttributes : public UMaterialExpression
	{
	public:
		TArray<struct FExpressionInput>                            Inputs;                                                  // 0x0048(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FGuid>                                       AttributeSetTypes;                                       // 0x0058(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionShaderStageSwitch
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionShaderStageSwitch : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    PixelShader;                                             // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    VertexShader;                                            // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionShadingModel
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionShadingModel : public UMaterialExpression
	{
	public:
		EMaterialShadingModel                                      ShadingModel;                                            // 0x0048(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B5OR[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionShadingPathSwitch
	 * Size -> 0x0070 (FullSize[0x00B8] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionShadingPathSwitch : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Default;                                                 // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Inputs[0x3];                                             // 0x0064(0x0054) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionShadowReplace
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionShadowReplace : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Default;                                                 // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Shadow;                                                  // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSign
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSign : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_27OW[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSine
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSine : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      Period;                                                  // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSingleLayerWaterMaterialOutput
	 * Size -> 0x0070 (FullSize[0x00B8] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSingleLayerWaterMaterialOutput : public UMaterialExpressionCustomOutput
	{
	public:
		struct FExpressionInput                                    ScatteringCoefficients;                                  // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    AbsorptionCoefficients;                                  // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    PhaseG;                                                  // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    ColorScaleBehindWater;                                   // 0x009C(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSkinningVertexOffsets
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSkinningVertexOffsets : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSkyAtmosphereLightDirection
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSkyAtmosphereLightDirection : public UMaterialExpression
	{
	public:
		int32_t                                                    LightIndex;                                              // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y6O1[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSkyAtmosphereLightIlluminance
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSkyAtmosphereLightIlluminance : public UMaterialExpression
	{
	public:
		int32_t                                                    LightIndex;                                              // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FExpressionInput                                    WorldPosition;                                           // 0x004C(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSkyAtmosphereLightDiskLuminance
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSkyAtmosphereLightDiskLuminance : public UMaterialExpression
	{
	public:
		int32_t                                                    LightIndex;                                              // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z05J[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSkyAtmosphereAerialPerspective
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSkyAtmosphereAerialPerspective : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    WorldPosition;                                           // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CF2T[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSkyAtmosphereDistantLightScatteredLuminance : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSkyAtmosphereViewLuminance
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSkyAtmosphereViewLuminance : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSmoothStep
	 * Size -> 0x0060 (FullSize[0x00A8] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSmoothStep : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Min;                                                     // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Max;                                                     // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    value;                                                   // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      ConstMin;                                                // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstMax;                                                // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstValue;                                              // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSobol
	 * Size -> 0x0060 (FullSize[0x00A8] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSobol : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Cell;                                                    // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Index;                                                   // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Seed;                                                    // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		uint32_t                                                   ConstIndex;                                              // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ConstSeed;                                               // 0x00A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSpeedTree
	 * Size -> 0x0080 (FullSize[0x00C8] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSpeedTree : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    GeometryInput;                                           // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    WindInput;                                               // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    LODInput;                                                // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    ExtraBendWS;                                             // 0x009C(0x001C) NoDestructor, NativeAccessSpecifierPublic
		ESpeedTreeGeometryType                                     GeometryType;                                            // 0x00B8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpeedTreeWindType                                         WindType;                                                // 0x00B9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpeedTreeLODType                                          LODType;                                                 // 0x00BA(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FL6W[0x1];                                   // 0x00BB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BillboardThreshold;                                      // 0x00BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAccurateWindVelocities;                                 // 0x00C0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IU0U[0x7];                                   // 0x00C1(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSphereMask
	 * Size -> 0x0078 (FullSize[0x00C0] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSphereMask : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    A;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    B;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Radius;                                                  // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Hardness;                                                // 0x009C(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      AttenuationRadius;                                       // 0x00B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HardnessPercent;                                         // 0x00BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSphericalParticleOpacity
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSphericalParticleOpacity : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Density;                                                 // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      ConstantDensity;                                         // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSquareRoot
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSquareRoot : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q1RE[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionStaticBool
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionStaticBool : public UMaterialExpression
	{
	public:
		unsigned char                                              value : 1;                                               // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DA4B[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionStaticBoolParameter
	 * Size -> 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
	 */
	class UMaterialExpressionStaticBoolParameter : public UMaterialExpressionParameter
	{
	public:
		unsigned char                                              defaultValue : 1;                                        // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_38MG[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionStaticComponentMaskParameter
	 * Size -> 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
	 */
	class UMaterialExpressionStaticComponentMaskParameter : public UMaterialExpressionParameter
	{
	public:
		unsigned char                                              DefaultR : 1;                                            // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DefaultG : 1;                                            // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DefaultB : 1;                                            // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DefaultA : 1;                                            // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G5A6[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionStaticSwitch
	 * Size -> 0x0058 (FullSize[0x00A0] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionStaticSwitch : public UMaterialExpression
	{
	public:
		unsigned char                                              defaultValue : 1;                                        // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HCR0[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FExpressionInput                                    A;                                                       // 0x004C(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    B;                                                       // 0x0068(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    value;                                                   // 0x0084(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionStaticSwitchParameter
	 * Size -> 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
	 */
	class UMaterialExpressionStaticSwitchParameter : public UMaterialExpressionStaticBoolParameter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionStep
	 * Size -> 0x0040 (FullSize[0x0088] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionStep : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Y;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    X;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      ConstY;                                                  // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstX;                                                  // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionSubtract
	 * Size -> 0x0040 (FullSize[0x0088] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionSubtract : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    A;                                                       // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    B;                                                       // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      ConstA;                                                  // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstB;                                                  // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTangent
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionTangent : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      Period;                                                  // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTangentOutput
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionTangentOutput : public UMaterialExpressionCustomOutput
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GNTY[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTemporalSobol
	 * Size -> 0x0048 (FullSize[0x0090] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionTemporalSobol : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Index;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Seed;                                                    // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		uint32_t                                                   ConstIndex;                                              // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ConstSeed;                                               // 0x0084(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EPXX[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTextureCoordinate
	 * Size -> 0x0010 (FullSize[0x0058] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionTextureCoordinate : public UMaterialExpression
	{
	public:
		int32_t                                                    CoordinateIndex;                                         // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UTiling;                                                 // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VTiling;                                                 // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnMirrorU : 1;                                           // 0x0054(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnMirrorV : 1;                                           // 0x0054(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7NKV[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTextureObject
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UMaterialExpressionTextureObject : public UMaterialExpressionTextureBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTextureObjectParameter
	 * Size -> 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
	 */
	class UMaterialExpressionTextureObjectParameter : public UMaterialExpressionTextureSampleParameter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTextureProperty
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionTextureProperty : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    TextureObject;                                           // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		EMaterialExposedTextureProperty                            Property;                                                // 0x0064(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K2SJ[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTextureSampleParameter2DArray
	 * Size -> 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
	 */
	class UMaterialExpressionTextureSampleParameter2DArray : public UMaterialExpressionTextureSampleParameter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTextureSampleParameterCube
	 * Size -> 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
	 */
	class UMaterialExpressionTextureSampleParameterCube : public UMaterialExpressionTextureSampleParameter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTextureSampleParameterSubUV
	 * Size -> 0x0008 (FullSize[0x00A0] - InheritedSize[0x0098])
	 */
	class UMaterialExpressionTextureSampleParameterSubUV : public UMaterialExpressionTextureSampleParameter2D
	{
	public:
		unsigned char                                              bBlend : 1;                                              // 0x0098(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YBYA[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTextureSampleParameterVolume
	 * Size -> 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
	 */
	class UMaterialExpressionTextureSampleParameterVolume : public UMaterialExpressionTextureSampleParameter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionThinTranslucentMaterialOutput
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionThinTranslucentMaterialOutput : public UMaterialExpressionCustomOutput
	{
	public:
		struct FExpressionInput                                    TransmittanceColor;                                      // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VRLD[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTime
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionTime : public UMaterialExpression
	{
	public:
		unsigned char                                              bIgnorePause : 1;                                        // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Period : 1;                                    // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VGCM[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Period;                                                  // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTransform
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionTransform : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		EMaterialVectorCoordTransformSource                        TransformSourceType;                                     // 0x0064(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMaterialVectorCoordTransform                              TransformType;                                           // 0x0065(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0BOB[0x2];                                   // 0x0066(0x0002) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTransformPosition
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionTransformPosition : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		EMaterialPositionTransformSource                           TransformSourceType;                                     // 0x0064(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMaterialPositionTransformSource                           TransformType;                                           // 0x0065(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BMNY[0x2];                                   // 0x0066(0x0002) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTruncate
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionTruncate : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H5KW[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionTwoSidedSign
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionTwoSidedSign : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionVectorNoise
	 * Size -> 0x0030 (FullSize[0x0078] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionVectorNoise : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    position;                                                // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		EVectorNoiseFunction                                       NoiseFunction;                                           // 0x0064(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F0ZC[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Quality;                                                 // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTiling : 1;                                             // 0x006C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H9S3[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   TileSize;                                                // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PQDK[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionVertexColor
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionVertexColor : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionVertexInterpolator
	 * Size -> 0x0028 (FullSize[0x0070] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionVertexInterpolator : public UMaterialExpressionCustomOutput
	{
	public:
		struct FExpressionInput                                    Input;                                                   // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NMRF[0xC];                                   // 0x0064(0x000C) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionVertexNormalWS
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionVertexNormalWS : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionVertexTangentWS
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionVertexTangentWS : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionViewProperty
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionViewProperty : public UMaterialExpression
	{
	public:
		EMaterialExposedViewProperty                               Property;                                                // 0x0048(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OAW6[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionViewSize
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionViewSize : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionVirtualTextureFeatureSwitch
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionVirtualTextureFeatureSwitch : public UMaterialExpression
	{
	public:
		struct FExpressionInput                                    No;                                                      // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    Yes;                                                     // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionVolumetricAdvancedMaterialInput
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionVolumetricAdvancedMaterialInput : public UMaterialExpression
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionVolumetricAdvancedMaterialOutput
	 * Size -> 0x00E8 (FullSize[0x0130] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionVolumetricAdvancedMaterialOutput : public UMaterialExpressionCustomOutput
	{
	public:
		struct FExpressionInput                                    PhaseG;                                                  // 0x0048(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    PhaseG2;                                                 // 0x0064(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    PhaseBlend;                                              // 0x0080(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    MultiScatteringContribution;                             // 0x009C(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    MultiScatteringOcclusion;                                // 0x00B8(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    MultiScatteringEccentricity;                             // 0x00D4(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FExpressionInput                                    ConservativeDensity;                                     // 0x00F0(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      ConstPhaseG;                                             // 0x010C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstPhaseG2;                                            // 0x0110(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstPhaseBlend;                                         // 0x0114(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PerSamplePhaseEvaluation;                                // 0x0118(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9FSG[0x3];                                   // 0x0119(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   MultiScatteringApproximationOctaveCount;                 // 0x011C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstMultiScatteringContribution;                        // 0x0120(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstMultiScatteringOcclusion;                           // 0x0124(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstMultiScatteringEccentricity;                        // 0x0128(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGroundContribution;                                     // 0x012C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGrayScaleMaterial;                                      // 0x012D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRayMarchVolumeShadow;                                   // 0x012E(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GGBZ[0x1];                                   // 0x012F(0x0001) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialExpressionWorldPosition
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	class UMaterialExpressionWorldPosition : public UMaterialExpression
	{
	public:
		EWorldPositionIncludedOffsets                              WorldPositionShaderOffset;                               // 0x0048(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9NM2[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialFunctionInterface
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UMaterialFunctionInterface : public UObject
	{
	public:
		struct FGuid                                               StateId;                                                 // 0x0030(0x0010) ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMaterialFunctionUsage                                     MaterialFunctionUsage;                                   // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_3DE5[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialFunction
	 * Size -> 0x0018 (FullSize[0x0060] - InheritedSize[0x0048])
	 */
	class UMaterialFunction : public UMaterialFunctionInterface
	{
	public:
		class FString                                              Description;                                             // 0x0048(0x0010) Edit, ZeroConstructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bExposeToLibrary : 1;                                    // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPrefixParameterNames : 1;                               // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_05E8[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialFunctionInstance
	 * Size -> 0x0080 (FullSize[0x00C8] - InheritedSize[0x0048])
	 */
	class UMaterialFunctionInstance : public UMaterialFunctionInterface
	{
	public:
		class UMaterialFunctionInterface*                          Parent;                                                  // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialFunctionInterface*                          Base;                                                    // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FScalarParameterValue>                       ScalarParameterValues;                                   // 0x0058(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FVectorParameterValue>                       VectorParameterValues;                                   // 0x0068(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTextureParameterValue>                      TextureParameterValues;                                  // 0x0078(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FFontParameterValue>                         FontParameterValues;                                     // 0x0088(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FStaticSwitchParameter>                      StaticSwitchParameterValues;                             // 0x0098(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FStaticComponentMaskParameter>               StaticComponentMaskParameterValues;                      // 0x00A8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FRuntimeVirtualTextureParameterValue>        RuntimeVirtualTextureParameterValues;                    // 0x00B8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialFunctionMaterialLayer
	 * Size -> 0x0000 (FullSize[0x0060] - InheritedSize[0x0060])
	 */
	class UMaterialFunctionMaterialLayer : public UMaterialFunction
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialFunctionMaterialLayerInstance
	 * Size -> 0x0000 (FullSize[0x00C8] - InheritedSize[0x00C8])
	 */
	class UMaterialFunctionMaterialLayerInstance : public UMaterialFunctionInstance
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialFunctionMaterialLayerBlend
	 * Size -> 0x0000 (FullSize[0x0060] - InheritedSize[0x0060])
	 */
	class UMaterialFunctionMaterialLayerBlend : public UMaterialFunction
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialFunctionMaterialLayerBlendInstance
	 * Size -> 0x0000 (FullSize[0x00C8] - InheritedSize[0x00C8])
	 */
	class UMaterialFunctionMaterialLayerBlendInstance : public UMaterialFunctionInstance
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialInstanceActor
	 * Size -> 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
	 */
	class AMaterialInstanceActor : public AActor
	{
	public:
		TArray<class AActor*>                                      TargetActors;                                            // 0x0230(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialInstanceDynamic
	 * Size -> 0x0050 (FullSize[0x0368] - InheritedSize[0x0318])
	 */
	class UMaterialInstanceDynamic : public UMaterialInstance
	{
	public:
		unsigned char                                              UnknownData_HC3C[0x50];                                  // 0x0318(0x0050) MISSED OFFSET (PADDING)

	public:
		void SetVectorParameterValueByInfo(const struct FMaterialParameterInfo& ParameterInfo, const struct FLinearColor& value);
		void SetVectorParameterValue(const class FName& ParameterName, const struct FLinearColor& value);
		void SetTextureParameterValueByInfo(const struct FMaterialParameterInfo& ParameterInfo, class UTexture* value);
		void SetTextureParameterValue(const class FName& ParameterName, class UTexture* value);
		void SetScalarParameterValueByInfo(const struct FMaterialParameterInfo& ParameterInfo, float value);
		void SetScalarParameterValue(const class FName& ParameterName, float value);
		void K2_InterpolateMaterialInstanceParams(class UMaterialInstance* SourceA, class UMaterialInstance* SourceB, float alpha);
		struct FLinearColor K2_GetVectorParameterValueByInfo(const struct FMaterialParameterInfo& ParameterInfo);
		struct FLinearColor K2_GetVectorParameterValue(const class FName& ParameterName);
		class UTexture* K2_GetTextureParameterValueByInfo(const struct FMaterialParameterInfo& ParameterInfo);
		class UTexture* K2_GetTextureParameterValue(const class FName& ParameterName);
		float K2_GetScalarParameterValueByInfo(const struct FMaterialParameterInfo& ParameterInfo);
		float K2_GetScalarParameterValue(const class FName& ParameterName);
		void K2_CopyMaterialInstanceParameters(class UMaterialInterface* Source, bool bQuickParametersOnly);
		void CopyParameterOverrides(class UMaterialInstance* MaterialInstance);
		void CopyInterpParameters(class UMaterialInstance* Source);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialParameterCollection
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	class UMaterialParameterCollection : public UObject
	{
	public:
		struct FGuid                                               StateId;                                                 // 0x0030(0x0010) ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCollectionScalarParameter>                  ScalarParameters;                                        // 0x0040(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCollectionVectorParameter>                  VectorParameters;                                        // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DXG7[0x18];                                  // 0x0060(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MaterialParameterCollectionInstance
	 * Size -> 0x00F8 (FullSize[0x0128] - InheritedSize[0x0030])
	 */
	class UMaterialParameterCollectionInstance : public UObject
	{
	public:
		unsigned char                                              UnknownData_X1RR[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialParameterCollection*                        Collection;                                              // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_J3FV[0xE8];                                  // 0x0040(0x00E8) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MatineeActor
	 * Size -> 0x00B0 (FullSize[0x02E0] - InheritedSize[0x0230])
	 */
	class AMatineeActor : public AActor
	{
	public:
		class UInterpData*                                         MatineeData;                                             // 0x0230(0x0008) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MatineeControllerName;                                   // 0x0238(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayRate;                                                // 0x0244(0x0004) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPlayOnLevelLoad : 1;                                    // 0x0248(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceStartPos : 1;                                      // 0x0248(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_37YN[0x3];                                   // 0x0249(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ForceStartPosition;                                      // 0x024C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLooping : 1;                                            // 0x0250(0x0001) BIT_FIELD Edit, BlueprintVisible, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRewindOnPlay : 1;                                       // 0x0250(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNoResetOnRewind : 1;                                    // 0x0250(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRewindIfAlreadyPlaying : 1;                             // 0x0250(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableRadioFilter : 1;                                 // 0x0250(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bClientSideOnly : 1;                                     // 0x0250(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSkipUpdateIfNotVisible : 1;                             // 0x0250(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsSkippable : 1;                                        // 0x0250(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NZ0Z[0x3];                                   // 0x0251(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PreferredSplitScreenNum;                                 // 0x0254(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableMovementInput : 1;                               // 0x0258(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableLookAtInput : 1;                                 // 0x0258(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHidePlayer : 1;                                         // 0x0258(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHideHud : 1;                                            // 0x0258(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_POZV[0x7];                                   // 0x0259(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FInterpGroupActorInfo>                       GroupActorInfos;                                         // 0x0260(0x0010) Net, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bShouldShowGore : 1;                                     // 0x0270(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6WA3[0x7];                                   // 0x0271(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UInterpGroupInst*>                            GroupInst;                                               // 0x0278(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		TArray<struct FCameraCutInfo>                              CameraCuts;                                              // 0x0288(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              bIsPlaying : 1;                                          // 0x0298(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, Net, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bReversePlayback : 1;                                    // 0x0298(0x0001) BIT_FIELD Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPaused : 1;                                             // 0x0298(0x0001) BIT_FIELD Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPendingStop : 1;                                        // 0x0298(0x0001) BIT_FIELD Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5DT0[0x3];                                   // 0x0299(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InterpPosition;                                          // 0x029C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D0OF[0x4];                                   // 0x02A0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ReplicationForceIsPlaying;                               // 0x02A4(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QNTG[0x3];                                   // 0x02A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPlay;                                                  // 0x02A8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnStop;                                                  // 0x02B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPause;                                                 // 0x02C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XKC3[0x8];                                   // 0x02D8(0x0008) MISSED OFFSET (PADDING)

	public:
		void Stop();
		void SetPosition(float NewPosition, bool bJump);
		void SetLoopingState(bool bNewLooping);
		void Reverse();
		void Play();
		void Pause();
		void EnableGroupByName(const class FString& GroupName, bool bEnable);
		void ChangePlaybackDirection();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MatineeActorCameraAnim
	 * Size -> 0x0008 (FullSize[0x02E8] - InheritedSize[0x02E0])
	 */
	class AMatineeActorCameraAnim : public AMatineeActor
	{
	public:
		class UCameraAnim*                                         CameraAnim;                                              // 0x02E0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MatineeAnimInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UMatineeAnimInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MatineeInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UMatineeInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MeshMergeCullingVolume
	 * Size -> 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
	 */
	class AMeshMergeCullingVolume : public AVolume
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MeshSimplificationSettings
	 * Size -> 0x0010 (FullSize[0x0058] - InheritedSize[0x0048])
	 */
	class UMeshSimplificationSettings : public UDeveloperSettings
	{
	public:
		class FName                                                MeshReductionModuleName;                                 // 0x0048(0x000C) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WGOC[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MeshVertexPainterKismetLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UMeshVertexPainterKismetLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_RemovePaintedVertices(class UStaticMeshComponent* StaticMeshComponent);
		void STATIC_PaintVerticesSingleColor(class UStaticMeshComponent* StaticMeshComponent, const struct FLinearColor& FillColor, bool bConvertToSRGB);
		void STATIC_PaintVerticesLerpAlongAxis(class UStaticMeshComponent* StaticMeshComponent, const struct FLinearColor& StartColor, const struct FLinearColor& EndColor, EVertexPaintAxis Axis, bool bConvertToSRGB);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MicroTransactionBase
	 * Size -> 0x0030 (FullSize[0x0070] - InheritedSize[0x0040])
	 */
	class UMicroTransactionBase : public UPlatformInterfaceBase
	{
	public:
		TArray<struct FPurchaseInfo>                               AvailableProducts;                                       // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              LastError;                                               // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LastErrorSolution;                                       // 0x0060(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ModelComponent
	 * Size -> 0x0040 (FullSize[0x04C0] - InheritedSize[0x0480])
	 */
	class UModelComponent : public UPrimitiveComponent
	{
	public:
		unsigned char                                              UnknownData_8Q56[0x18];                                  // 0x0480(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBodySetup*                                          ModelBodySetup;                                          // 0x0498(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BHCU[0x20];                                  // 0x04A0(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.MorphTarget
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UMorphTarget : public UObject
	{
	public:
		class USkeletalMesh*                                       BaseSkelMesh;                                            // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VAZG[0x10];                                  // 0x0038(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NavAgentInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UNavAgentInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NavCollisionBase
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	class UNavCollisionBase : public UObject
	{
	public:
		unsigned char                                              bIsDynamicObstacle : 1;                                  // 0x0030(0x0001) BIT_FIELD Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KM2N[0x47];                                  // 0x0031(0x0047) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NavEdgeProviderInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UNavEdgeProviderInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NavigationDataChunk
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UNavigationDataChunk : public UObject
	{
	public:
		class FName                                                NavigationDataName;                                      // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OLUQ[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NavigationDataInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UNavigationDataInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NavigationSystemBase
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UNavigationSystemBase : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NavigationSystemConfig
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	class UNavigationSystemConfig : public UObject
	{
	public:
		struct FSoftClassPath                                      NavigationSystemClass;                                   // 0x0030(0x0020) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FNavAgentSelector                                   SupportedAgentsMask;                                     // 0x0050(0x0004) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                DefaultAgentName;                                        // 0x0054(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsOverriden : 1;                                        // 0x0060(0x0001) BIT_FIELD Edit, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_FFGR[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NullNavSysConfig
	 * Size -> 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
	 */
	class UNullNavSysConfig : public UNavigationSystemConfig
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NavLinkDefinition
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class UNavLinkDefinition : public UObject
	{
	public:
		TArray<struct FNavigationLink>                             Links;                                                   // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FNavigationSegmentLink>                      SegmentLinks;                                            // 0x0040(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SEYL[0x8];                                   // 0x0050(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NavPathObserverInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UNavPathObserverInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NavRelevantInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UNavRelevantInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SimulatedClientNetConnection
	 * Size -> 0x0000 (FullSize[0x1BC8] - InheritedSize[0x1BC8])
	 */
	class USimulatedClientNetConnection : public UNetConnection
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NetPushModelHelpers
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UNetPushModelHelpers : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_MarkPropertyDirtyFromRepIndex(class UObject* Object, int32_t RepIndex, const class FName& PropertyName);
		void STATIC_MarkPropertyDirty(class UObject* Object, const class FName& PropertyName);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NetworkPredictionInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UNetworkPredictionInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NetworkSettings
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UNetworkSettings : public UDeveloperSettings
	{
	public:
		unsigned char                                              bVerifyPeer : 1;                                         // 0x0048(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableMultiplayerWorldOriginRebasing : 1;               // 0x0048(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T1KC[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxRepArraySize;                                         // 0x004C(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxRepArrayMemory;                                       // 0x0050(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J5JC[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FNetworkEmulationProfileDescription>         NetworkEmulationProfiles;                                // 0x0058(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NodeMappingContainer
	 * Size -> 0x0150 (FullSize[0x0180] - InheritedSize[0x0030])
	 */
	class UNodeMappingContainer : public UObject
	{
	public:
		TMap<class FName, struct FNodeItem>                        SourceItems;                                             // 0x0030(0x0050) Edit, EditConst, NativeAccessSpecifierPrivate
		TMap<class FName, struct FNodeItem>                        TargetItems;                                             // 0x0080(0x0050) Edit, EditConst, NativeAccessSpecifierPrivate
		TMap<class FName, class FName>                             SourceToTarget;                                          // 0x00D0(0x0050) Edit, NativeAccessSpecifierPrivate
		unsigned char                                              SourceAsset[0x30];                                       // 0x0120(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              TargetAsset[0x30];                                       // 0x0150(0x0030) UNKNOWN PROPERTY: SoftObjectProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.NodeMappingProviderInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UNodeMappingProviderInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Note
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class ANote : public AActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ObjectLibrary
	 * Size -> 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
	 */
	class UObjectLibrary : public UObject
	{
	public:
		class UClass*                                              ObjectBaseClass;                                         // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasBlueprintClasses;                                    // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PZ6R[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UObject*>                                     Objects;                                                 // 0x0040(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<TWeakObjectPtr<class UObject>>                      WeakObjects;                                             // 0x0050(0x0010) ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected
		bool                                                       bUseWeakReferences;                                      // 0x0060(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsFullyLoaded;                                          // 0x0061(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_22QY[0x4E];                                  // 0x0062(0x004E) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ObjectReferencer
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UObjectReferencer : public UObject
	{
	public:
		TArray<class UObject*>                                     ReferencedObjects;                                       // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ObjectTraceWorldSubsystem
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UObjectTraceWorldSubsystem : public UWorldSubsystem
	{
	public:
		unsigned char                                              UnknownData_HZIN[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PackageMapClient
	 * Size -> 0x0328 (FullSize[0x0410] - InheritedSize[0x00E8])
	 */
	class UPackageMapClient : public UPackageMap
	{
	public:
		unsigned char                                              UnknownData_OC3Y[0x328];                                 // 0x00E8(0x0328) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PainCausingVolume
	 * Size -> 0x0028 (FullSize[0x02A0] - InheritedSize[0x0278])
	 */
	class APainCausingVolume : public APhysicsVolume
	{
	public:
		unsigned char                                              bPainCausing : 1;                                        // 0x0278(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7AWR[0x3];                                   // 0x0279(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DamagePerSec;                                            // 0x027C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DamageType;                                              // 0x0280(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PainInterval;                                            // 0x0288(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEntryPain : 1;                                          // 0x028C(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              BACKUP_bPainCausing : 1;                                 // 0x028C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O9A9[0x3];                                   // 0x028D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AController*                                         DamageInstigator;                                        // 0x0290(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PZJI[0x8];                                   // 0x0298(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleEmitter
	 * Size -> 0x01A0 (FullSize[0x01D0] - InheritedSize[0x0030])
	 */
	class UParticleEmitter : public UObject
	{
	public:
		class FName                                                EmitterName;                                             // 0x0030(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubUVDataOffset;                                         // 0x003C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEmitterRenderMode                                         EmitterRenderMode;                                       // 0x0040(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EParticleSignificanceLevel                                 SignificanceLevel;                                       // 0x0041(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QJYS[0x1];                                   // 0x0042(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bUseLegacySpawningBehavior : 1;                          // 0x0043(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D2SX : 3;                                    // 0x0043(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              ConvertedModules : 1;                                    // 0x0043(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsSoloing : 1;                                          // 0x0043(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCookedOut : 1;                                          // 0x0043(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisabledLODsKeepEmitterAlive : 1;                       // 0x0043(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableWhenInsignficant : 1;                            // 0x0044(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_711M[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UParticleLODLevel*>                           LODLevels;                                               // 0x0048(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		int32_t                                                    PeakActiveParticles;                                     // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InitialAllocationCount;                                  // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      QualityLevelSpawnRateScale;                              // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   DetailModeBitMask;                                       // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BHVRDetailModeBitMask;                                   // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WB92[0x164];                                 // 0x006C(0x0164) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleEventManager
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class AParticleEventManager : public AActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleLODLevel
	 * Size -> 0x0090 (FullSize[0x00C0] - InheritedSize[0x0030])
	 */
	class UParticleLODLevel : public UObject
	{
	public:
		int32_t                                                    Level;                                                   // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnabled : 1;                                            // 0x0034(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_70CR[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleModuleRequired*                             RequiredModule;                                          // 0x0038(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UParticleModule*>                             Modules;                                                 // 0x0040(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UParticleModuleTypeDataBase*                         TypeDataModule;                                          // 0x0050(0x0008) ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleModuleSpawn*                                SpawnModule;                                             // 0x0058(0x0008) ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleModuleEventGenerator*                       EventGenerator;                                          // 0x0060(0x0008) ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UParticleModuleSpawnBase*>                    SpawningModules;                                         // 0x0068(0x0010) ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic
		TArray<class UParticleModule*>                             SpawnModules;                                            // 0x0078(0x0010) ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic
		TArray<class UParticleModule*>                             UpdateModules;                                           // 0x0088(0x0010) ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic
		TArray<class UParticleModuleOrbit*>                        OrbitModules;                                            // 0x0098(0x0010) ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic
		TArray<class UParticleModuleEventReceiverBase*>            EventReceiverModules;                                    // 0x00A8(0x0010) ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic
		unsigned char                                              ConvertedModules : 1;                                    // 0x00B8(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PVVR[0x3];                                   // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PeakActiveParticles;                                     // 0x00BC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleSystem
	 * Size -> 0x00E0 (FullSize[0x0118] - InheritedSize[0x0038])
	 */
	class UParticleSystem : public UFXSystemAsset
	{
	public:
		float                                                      UpdateTime_FPS;                                          // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpdateTime_Delta;                                        // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WarmupTime;                                              // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WarmupTickRate;                                          // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UParticleEmitter*>                            Emitters;                                                // 0x0048(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            PreviewComponent;                                        // 0x0058(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInterpCurveEdSetup*                                 CurveEdSetup;                                            // 0x0060(0x0008) ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LODDistanceCheckTime;                                    // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MacroUVRadius;                                           // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              LODDistances;                                            // 0x0070(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FParticleSystemLOD>                          LODSettings;                                             // 0x0080(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FBox                                                FixedRelativeBoundingBox;                                // 0x0090(0x001C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      SecondsBeforeInactive;                                   // 0x00AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Delay;                                                   // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DelayLow;                                                // 0x00B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOrientZAxisTowardCamera : 1;                            // 0x00B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseFixedRelativeBoundingBox : 1;                        // 0x00B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShouldResetPeakCounts : 1;                              // 0x00B8(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHasPhysics : 1;                                         // 0x00B8(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseRealtimeThumbnail : 1;                               // 0x00B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ThumbnailImageOutOfDate : 1;                             // 0x00B8(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_25Z0 : 2;                                    // 0x00B8(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bUseDelayRange : 1;                                      // 0x00B9(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAllowManagedTicking : 1;                                // 0x00B9(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAutoDeactivate : 1;                                     // 0x00B9(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRegenerateLODDuplicate : 1;                             // 0x00B9(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EParticleSystemUpdateMode                                  SystemUpdateMode;                                        // 0x00BA(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EParticleSystemLODMethod                                   LODMethod;                                               // 0x00BB(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EParticleSystemInsignificanceReaction                      InsignificantReaction;                                   // 0x00BC(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EParticleSystemOcclusionBoundsMethod                       OcclusionBoundsMethod;                                   // 0x00BD(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VWNM[0x1];                                   // 0x00BE(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EParticleSignificanceLevel                                 MaxSignificanceLevel;                                    // 0x00BF(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   MinTimeBetweenTicks;                                     // 0x00C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InsignificanceDelay;                                     // 0x00C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MacroUVPosition;                                         // 0x00C8(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBox                                                CustomOcclusionBounds;                                   // 0x00D4(0x001C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FLODSoloTrack>                               SoloTracking;                                            // 0x00F0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		TArray<struct FNamedEmitterMaterial>                       NamedMaterialSlots;                                      // 0x0100(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FNS7[0x8];                                   // 0x0110(0x0008) MISSED OFFSET (PADDING)

	public:
		bool ContainsEmitterType(class UClass* TypeData);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModule
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UParticleModule : public UObject
	{
	public:
		unsigned char                                              bSpawnModule : 1;                                        // 0x0030(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUpdateModule : 1;                                       // 0x0030(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFinalUpdateModule : 1;                                  // 0x0030(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUpdateForGPUEmitter : 1;                                // 0x0030(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCurvesAsColor : 1;                                      // 0x0030(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              b3DDrawMode : 1;                                         // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupported3DDrawMode : 1;                                // 0x0030(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnabled : 1;                                            // 0x0030(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEditable : 1;                                           // 0x0031(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              LODDuplicate : 1;                                        // 0x0031(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupportsRandomSeed : 1;                                 // 0x0031(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRequiresLoopingNotification : 1;                        // 0x0031(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              LODValidity;                                             // 0x0032(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MBNC[0x5];                                   // 0x0033(0x0005) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleAccelerationBase
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UParticleModuleAccelerationBase : public UParticleModule
	{
	public:
		unsigned char                                              bAlwaysInWorldSpace : 1;                                 // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3ZXO[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleAcceleration
	 * Size -> 0x0050 (FullSize[0x0090] - InheritedSize[0x0040])
	 */
	class UParticleModuleAcceleration : public UParticleModuleAccelerationBase
	{
	public:
		struct FRawDistributionVector                              Acceleration;                                            // 0x0040(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bApplyOwnerScale : 1;                                    // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R3H8[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleAccelerationConstant
	 * Size -> 0x0010 (FullSize[0x0050] - InheritedSize[0x0040])
	 */
	class UParticleModuleAccelerationConstant : public UParticleModuleAccelerationBase
	{
	public:
		struct FVector                                             Acceleration;                                            // 0x0040(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K9LR[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleAccelerationDrag
	 * Size -> 0x0038 (FullSize[0x0078] - InheritedSize[0x0040])
	 */
	class UParticleModuleAccelerationDrag : public UParticleModuleAccelerationBase
	{
	public:
		class UDistributionFloat*                                  DragCoefficient;                                         // 0x0040(0x0008) ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               DragCoefficientRaw;                                      // 0x0048(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleAccelerationDragScaleOverLife
	 * Size -> 0x0038 (FullSize[0x0078] - InheritedSize[0x0040])
	 */
	class UParticleModuleAccelerationDragScaleOverLife : public UParticleModuleAccelerationBase
	{
	public:
		class UDistributionFloat*                                  DragScale;                                               // 0x0040(0x0008) ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               DragScaleRaw;                                            // 0x0048(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleAccelerationOverLifetime
	 * Size -> 0x0048 (FullSize[0x0088] - InheritedSize[0x0040])
	 */
	class UParticleModuleAccelerationOverLifetime : public UParticleModuleAccelerationBase
	{
	public:
		struct FRawDistributionVector                              AccelOverLife;                                           // 0x0040(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleAttractorBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleAttractorBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleAttractorLine
	 * Size -> 0x0078 (FullSize[0x00B0] - InheritedSize[0x0038])
	 */
	class UParticleModuleAttractorLine : public UParticleModuleAttractorBase
	{
	public:
		struct FVector                                             EndPoint0;                                               // 0x0038(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             EndPoint1;                                               // 0x0044(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               Range;                                                   // 0x0050(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               Strength;                                                // 0x0080(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleAttractorParticle
	 * Size -> 0x0088 (FullSize[0x00C0] - InheritedSize[0x0038])
	 */
	class UParticleModuleAttractorParticle : public UParticleModuleAttractorBase
	{
	public:
		class FName                                                EmitterName;                                             // 0x0038(0x000C) Edit, ExportObject, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7C35[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionFloat                               Range;                                                   // 0x0048(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bStrengthByDistance : 1;                                 // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FQ83[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionFloat                               Strength;                                                // 0x0080(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bAffectBaseVelocity : 1;                                 // 0x00B0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U4J7[0x3];                                   // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EAttractorParticleSelectionMethod                          SelectionMethod;                                         // 0x00B4(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B473[0x3];                                   // 0x00B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bRenewSource : 1;                                        // 0x00B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInheritSourceVel : 1;                                   // 0x00B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q4BR[0x3];                                   // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    LastSelIndex;                                            // 0x00BC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleAttractorPoint
	 * Size -> 0x00B0 (FullSize[0x00E8] - InheritedSize[0x0038])
	 */
	class UParticleModuleAttractorPoint : public UParticleModuleAttractorBase
	{
	public:
		struct FRawDistributionVector                              position;                                                // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               Range;                                                   // 0x0080(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               Strength;                                                // 0x00B0(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              StrengthByDistance : 1;                                  // 0x00E0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAffectBaseVelocity : 1;                                 // 0x00E0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideVelocity : 1;                                   // 0x00E0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseWorldSpacePosition : 1;                              // 0x00E0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Positive_X : 1;                                          // 0x00E0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Positive_Y : 1;                                          // 0x00E0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Positive_Z : 1;                                          // 0x00E0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Negative_X : 1;                                          // 0x00E0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Negative_Y : 1;                                          // 0x00E1(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Negative_Z : 1;                                          // 0x00E1(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HER8[0x6];                                   // 0x00E2(0x0006) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleAttractorPointGravity
	 * Size -> 0x0048 (FullSize[0x0080] - InheritedSize[0x0038])
	 */
	class UParticleModuleAttractorPointGravity : public UParticleModuleAttractorBase
	{
	public:
		struct FVector                                             position;                                                // 0x0038(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDistributionFloat*                                  Strength;                                                // 0x0048(0x0008) ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               StrengthRaw;                                             // 0x0050(0x0030) Edit, NoClear, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleBeamBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleBeamBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleBeamModifier
	 * Size -> 0x00D8 (FullSize[0x0110] - InheritedSize[0x0038])
	 */
	class UParticleModuleBeamModifier : public UParticleModuleBeamBase
	{
	public:
		EBeamModifierType                                          modifierType;                                            // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D843[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBeamModifierOptions                                PositionOptions;                                         // 0x003C(0x0004) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FRawDistributionVector                              position;                                                // 0x0040(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FBeamModifierOptions                                TangentOptions;                                          // 0x0088(0x0004) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RHP3[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionVector                              Tangent;                                                 // 0x0090(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bAbsoluteTangent : 1;                                    // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AXXM[0x3];                                   // 0x00D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBeamModifierOptions                                StrengthOptions;                                         // 0x00DC(0x0004) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               Strength;                                                // 0x00E0(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleBeamNoise
	 * Size -> 0x0160 (FullSize[0x0198] - InheritedSize[0x0038])
	 */
	class UParticleModuleBeamNoise : public UParticleModuleBeamBase
	{
	public:
		unsigned char                                              bLowFreq_Enabled : 1;                                    // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K27W[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Frequency;                                               // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Frequency_LowRange;                                      // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WI0K[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionVector                              NoiseRange;                                              // 0x0048(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               NoiseRangeScale;                                         // 0x0090(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bNRScaleEmitterTime : 1;                                 // 0x00C0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0HDE[0x7];                                   // 0x00C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionVector                              NoiseSpeed;                                              // 0x00C8(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bSmooth : 1;                                             // 0x0110(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XBXG[0x3];                                   // 0x0111(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NoiseLockRadius;                                         // 0x0114(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNoiseLock : 1;                                          // 0x0118(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOscillate : 1;                                          // 0x0118(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0M57[0x3];                                   // 0x0119(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NoiseLockTime;                                           // 0x011C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NoiseTension;                                            // 0x0120(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseNoiseTangents : 1;                                   // 0x0124(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SFQ1[0x3];                                   // 0x0125(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionFloat                               NoiseTangentStrength;                                    // 0x0128(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		int32_t                                                    NoiseTessellation;                                       // 0x0158(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTargetNoise : 1;                                        // 0x015C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RJP9[0x3];                                   // 0x015D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FrequencyDistance;                                       // 0x0160(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bApplyNoiseScale : 1;                                    // 0x0164(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QVS4[0x3];                                   // 0x0165(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionFloat                               NoiseScale;                                              // 0x0168(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleBeamSource
	 * Size -> 0x00F0 (FullSize[0x0128] - InheritedSize[0x0038])
	 */
	class UParticleModuleBeamSource : public UParticleModuleBeamBase
	{
	public:
		EBeam2SourceTargetMethod                                   SourceMethod;                                            // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_00QQ[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SourceName;                                              // 0x003C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSourceAbsolute : 1;                                     // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OB6E[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionVector                              Source;                                                  // 0x0050(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bLockSource : 1;                                         // 0x0098(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BBII[0x3];                                   // 0x0099(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EBeam2SourceTargetTangentMethod                            SourceTangentMethod;                                     // 0x009C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G00H[0x3];                                   // 0x009D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionVector                              SourceTangent;                                           // 0x00A0(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bLockSourceTangent : 1;                                  // 0x00E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7A52[0x7];                                   // 0x00E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionFloat                               SourceStrength;                                          // 0x00F0(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bLockSourceStength : 1;                                  // 0x0120(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9BWK[0x7];                                   // 0x0121(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleBeamTarget
	 * Size -> 0x00F0 (FullSize[0x0128] - InheritedSize[0x0038])
	 */
	class UParticleModuleBeamTarget : public UParticleModuleBeamBase
	{
	public:
		EBeam2SourceTargetMethod                                   TargetMethod;                                            // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0YR8[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                TargetName;                                              // 0x003C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRawDistributionVector                              Target;                                                  // 0x0048(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bTargetAbsolute : 1;                                     // 0x0090(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLockTarget : 1;                                         // 0x0090(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O69J[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EBeam2SourceTargetTangentMethod                            TargetTangentMethod;                                     // 0x0094(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P3FT[0x3];                                   // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionVector                              TargetTangent;                                           // 0x0098(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bLockTargetTangent : 1;                                  // 0x00E0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U6HX[0x7];                                   // 0x00E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionFloat                               TargetStrength;                                          // 0x00E8(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bLockTargetStength : 1;                                  // 0x0118(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8BE0[0x3];                                   // 0x0119(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LockRadius;                                              // 0x011C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_82H0[0x8];                                   // 0x0120(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleCameraBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleCameraBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleCameraOffset
	 * Size -> 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
	 */
	class UParticleModuleCameraOffset : public UParticleModuleCameraBase
	{
	public:
		struct FRawDistributionFloat                               CameraOffset;                                            // 0x0038(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bSpawnTimeOnly : 1;                                      // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XZ4X[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EParticleCameraOffsetUpdateMethod                          UpdateMethod;                                            // 0x006C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D055[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleCollisionBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleCollisionBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleCollision
	 * Size -> 0x0160 (FullSize[0x0198] - InheritedSize[0x0038])
	 */
	class UParticleModuleCollision : public UParticleModuleCollisionBase
	{
	public:
		struct FRawDistributionVector                              DampingFactor;                                           // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionVector                              DampingFactorRotation;                                   // 0x0080(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               MaxCollisions;                                           // 0x00C8(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		EParticleCollisionComplete                                 CollisionCompletionOption;                               // 0x00F8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0BWW[0x7];                                   // 0x00F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EObjectTypeQuery>                                   CollisionTypes;                                          // 0x0100(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PTMX[0x8];                                   // 0x0110(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bApplyPhysics : 1;                                       // 0x0118(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreTriggerVolumes : 1;                               // 0x0118(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W7SL[0x7];                                   // 0x0119(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionFloat                               ParticleMass;                                            // 0x0120(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		float                                                      DirScalar;                                               // 0x0150(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPawnsDoNotDecrementCount : 1;                           // 0x0154(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOnlyVerticalNormalsDecrementCount : 1;                  // 0x0154(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8V96[0x3];                                   // 0x0155(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      VerticalFudgeFactor;                                     // 0x0158(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V0LH[0x4];                                   // 0x015C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionFloat                               DelayAmount;                                             // 0x0160(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bDropDetail : 1;                                         // 0x0190(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCollideOnlyIfVisible : 1;                               // 0x0190(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreSourceActor : 1;                                  // 0x0190(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7NIZ[0x3];                                   // 0x0191(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxCollisionDistance;                                    // 0x0194(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleCollisionGPU
	 * Size -> 0x0078 (FullSize[0x00B0] - InheritedSize[0x0038])
	 */
	class UParticleModuleCollisionGPU : public UParticleModuleCollisionBase
	{
	public:
		struct FRawDistributionFloat                               Resilience;                                              // 0x0038(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               ResilienceScaleOverLife;                                 // 0x0068(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		float                                                      Friction;                                                // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RandomSpread;                                            // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RandomDistribution;                                      // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RadiusScale;                                             // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RadiusBias;                                              // 0x00A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EParticleCollisionResponse                                 response;                                                // 0x00AC(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EParticleCollisionMode                                     CollisionMode;                                           // 0x00AD(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RXHW[0x2];                                   // 0x00AE(0x0002) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleColorBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleColorBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleColor
	 * Size -> 0x0080 (FullSize[0x00B8] - InheritedSize[0x0038])
	 */
	class UParticleModuleColor : public UParticleModuleColorBase
	{
	public:
		struct FRawDistributionVector                              StartColor;                                              // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               StartAlpha;                                              // 0x0080(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bClampAlpha : 1;                                         // 0x00B0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P9F0[0x7];                                   // 0x00B1(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleColor_Seeded
	 * Size -> 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
	 */
	class UParticleModuleColor_Seeded : public UParticleModuleColor
	{
	public:
		struct FParticleRandomSeedInfo                             RandomSeedInfo;                                          // 0x00B8(0x0020) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleColorOverLife
	 * Size -> 0x0080 (FullSize[0x00B8] - InheritedSize[0x0038])
	 */
	class UParticleModuleColorOverLife : public UParticleModuleColorBase
	{
	public:
		struct FRawDistributionVector                              ColorOverLife;                                           // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               AlphaOverLife;                                           // 0x0080(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bClampAlpha : 1;                                         // 0x00B0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S037[0x7];                                   // 0x00B1(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleColorScaleOverLife
	 * Size -> 0x0080 (FullSize[0x00B8] - InheritedSize[0x0038])
	 */
	class UParticleModuleColorScaleOverLife : public UParticleModuleColorBase
	{
	public:
		struct FRawDistributionVector                              ColorScaleOverLife;                                      // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               AlphaScaleOverLife;                                      // 0x0080(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bEmitterTime : 1;                                        // 0x00B0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I4DS[0x7];                                   // 0x00B1(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleEventBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleEventBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleEventGenerator
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UParticleModuleEventGenerator : public UParticleModuleEventBase
	{
	public:
		TArray<struct FParticleEvent_GenerateInfo>                 Events;                                                  // 0x0038(0x0010) Edit, ExportObject, ZeroConstructor, NoClear, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleEventReceiverBase
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UParticleModuleEventReceiverBase : public UParticleModuleEventBase
	{
	public:
		EParticleEventType                                         EventGeneratorType;                                      // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SY4O[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                EventName;                                               // 0x003C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleEventReceiverKillParticles
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	class UParticleModuleEventReceiverKillParticles : public UParticleModuleEventReceiverBase
	{
	public:
		unsigned char                                              bStopSpawning : 1;                                       // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VOHE[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleEventReceiverSpawn
	 * Size -> 0x0098 (FullSize[0x00E0] - InheritedSize[0x0048])
	 */
	class UParticleModuleEventReceiverSpawn : public UParticleModuleEventReceiverBase
	{
	public:
		struct FRawDistributionFloat                               SpawnCount;                                              // 0x0048(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bUseParticleTime : 1;                                    // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsePSysLocation : 1;                                    // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInheritVelocity : 1;                                    // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WUSR[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionVector                              InheritVelocityScale;                                    // 0x0080(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UPhysicalMaterial*>                           PhysicalMaterials;                                       // 0x00C8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bBanPhysicalMaterials : 1;                               // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QQR3[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleEventSendToGame
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UParticleModuleEventSendToGame : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleKillBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleKillBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleKillBox
	 * Size -> 0x0098 (FullSize[0x00D0] - InheritedSize[0x0038])
	 */
	class UParticleModuleKillBox : public UParticleModuleKillBase
	{
	public:
		struct FRawDistributionVector                              LowerLeftCorner;                                         // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionVector                              UpperRightCorner;                                        // 0x0080(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bAbsolute : 1;                                           // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bKillInside : 1;                                         // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAxisAlignedAndFixedSize : 1;                            // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N6KV[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleKillHeight
	 * Size -> 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
	 */
	class UParticleModuleKillHeight : public UParticleModuleKillBase
	{
	public:
		struct FRawDistributionFloat                               Height;                                                  // 0x0038(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bAbsolute : 1;                                           // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFloor : 1;                                              // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bApplyPSysScale : 1;                                     // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YSRC[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLifetimeBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleLifetimeBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLifetime
	 * Size -> 0x0030 (FullSize[0x0068] - InheritedSize[0x0038])
	 */
	class UParticleModuleLifetime : public UParticleModuleLifetimeBase
	{
	public:
		struct FRawDistributionFloat                               lifetime;                                                // 0x0038(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLifetime_Seeded
	 * Size -> 0x0020 (FullSize[0x0088] - InheritedSize[0x0068])
	 */
	class UParticleModuleLifetime_Seeded : public UParticleModuleLifetime
	{
	public:
		struct FParticleRandomSeedInfo                             RandomSeedInfo;                                          // 0x0068(0x0020) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLightBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleLightBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLight
	 * Size -> 0x00F0 (FullSize[0x0128] - InheritedSize[0x0038])
	 */
	class UParticleModuleLight : public UParticleModuleLightBase
	{
	public:
		bool                                                       bUseInverseSquaredFalloff;                               // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAffectsTranslucency;                                    // 0x0039(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPreviewLightRadius;                                     // 0x003A(0x0001) Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QNB3[0x1];                                   // 0x003B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpawnFraction;                                           // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRawDistributionVector                              ColorScaleOverLife;                                      // 0x0040(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               BrightnessOverLife;                                      // 0x0088(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               RadiusScale;                                             // 0x00B8(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               LightExponent;                                           // 0x00E8(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FLightingChannels                                   LightingChannels;                                        // 0x0118(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PP64[0x3];                                   // 0x0119(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      VolumetricScatteringIntensity;                           // 0x011C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHighQualityLights;                                      // 0x0120(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShadowCastingLights;                                    // 0x0121(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JICM[0x6];                                   // 0x0122(0x0006) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLight_Seeded
	 * Size -> 0x0020 (FullSize[0x0148] - InheritedSize[0x0128])
	 */
	class UParticleModuleLight_Seeded : public UParticleModuleLight
	{
	public:
		struct FParticleRandomSeedInfo                             RandomSeedInfo;                                          // 0x0128(0x0020) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocationBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleLocationBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocation
	 * Size -> 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
	 */
	class UParticleModuleLocation : public UParticleModuleLocationBase
	{
	public:
		struct FRawDistributionVector                              StartLocation;                                           // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		float                                                      DistributeOverNPoints;                                   // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistributeThreshold;                                     // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocation_Seeded
	 * Size -> 0x0020 (FullSize[0x00A8] - InheritedSize[0x0088])
	 */
	class UParticleModuleLocation_Seeded : public UParticleModuleLocation
	{
	public:
		struct FParticleRandomSeedInfo                             RandomSeedInfo;                                          // 0x0088(0x0020) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocationBoneSocket
	 * Size -> 0x0040 (FullSize[0x0078] - InheritedSize[0x0038])
	 */
	class UParticleModuleLocationBoneSocket : public UParticleModuleLocationBase
	{
	public:
		ELocationBoneSocketSource                                  SourceType;                                              // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T4A8[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             UniversalOffset;                                         // 0x003C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FLocationBoneSocketInfo>                     SourceLocations;                                         // 0x0048(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		ELocationBoneSocketSelectionMethod                         SelectionMethod;                                         // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XVKZ[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bUpdatePositionEachFrame : 1;                            // 0x005C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOrientMeshEmitters : 1;                                 // 0x005C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInheritBoneVelocity : 1;                                // 0x005C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K0ZT[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InheritVelocityScale;                                    // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SkelMeshActorParamName;                                  // 0x0064(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumPreSelectedIndices;                                   // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RJZ7[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocationDirect
	 * Size -> 0x0120 (FullSize[0x0158] - InheritedSize[0x0038])
	 */
	class UParticleModuleLocationDirect : public UParticleModuleLocationBase
	{
	public:
		struct FRawDistributionVector                              Location;                                                // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionVector                              LocationOffset;                                          // 0x0080(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionVector                              ScaleFactor;                                             // 0x00C8(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionVector                              Direction;                                               // 0x0110(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocationEmitter
	 * Size -> 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
	 */
	class UParticleModuleLocationEmitter : public UParticleModuleLocationBase
	{
	public:
		class FName                                                EmitterName;                                             // 0x0038(0x000C) Edit, ExportObject, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELocationEmitterSelectionMethod                            SelectionMethod;                                         // 0x0044(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WCQ5[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              InheritSourceVelocity : 1;                               // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XF8O[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InheritSourceVelocityScale;                              // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInheritSourceRotation : 1;                              // 0x0050(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FYJ1[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InheritSourceRotationScale;                              // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocationEmitterDirect
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UParticleModuleLocationEmitterDirect : public UParticleModuleLocationBase
	{
	public:
		class FName                                                EmitterName;                                             // 0x0038(0x000C) Edit, ExportObject, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CYAQ[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocationPrimitiveBase
	 * Size -> 0x0080 (FullSize[0x00B8] - InheritedSize[0x0038])
	 */
	class UParticleModuleLocationPrimitiveBase : public UParticleModuleLocationBase
	{
	public:
		unsigned char                                              Positive_X : 1;                                          // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Positive_Y : 1;                                          // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Positive_Z : 1;                                          // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Negative_X : 1;                                          // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Negative_Y : 1;                                          // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Negative_Z : 1;                                          // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SurfaceOnly : 1;                                         // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Velocity : 1;                                            // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TRZK[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionFloat                               VelocityScale;                                           // 0x0040(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionVector                              StartLocation;                                           // 0x0070(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocationPrimitiveCylinder
	 * Size -> 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
	 */
	class UParticleModuleLocationPrimitiveCylinder : public UParticleModuleLocationPrimitiveBase
	{
	public:
		unsigned char                                              RadialVelocity : 1;                                      // 0x00B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S9XP[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionFloat                               StartRadius;                                             // 0x00C0(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               StartHeight;                                             // 0x00F0(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		ECylinderHeightAxis                                        HeightAxis;                                              // 0x0120(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_USKW[0x7];                                   // 0x0121(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocationPrimitiveCylinder_Seeded
	 * Size -> 0x0020 (FullSize[0x0148] - InheritedSize[0x0128])
	 */
	class UParticleModuleLocationPrimitiveCylinder_Seeded : public UParticleModuleLocationPrimitiveCylinder
	{
	public:
		struct FParticleRandomSeedInfo                             RandomSeedInfo;                                          // 0x0128(0x0020) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocationPrimitiveSphere
	 * Size -> 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
	 */
	class UParticleModuleLocationPrimitiveSphere : public UParticleModuleLocationPrimitiveBase
	{
	public:
		struct FRawDistributionFloat                               StartRadius;                                             // 0x00B8(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocationPrimitiveSphere_Seeded
	 * Size -> 0x0020 (FullSize[0x0108] - InheritedSize[0x00E8])
	 */
	class UParticleModuleLocationPrimitiveSphere_Seeded : public UParticleModuleLocationPrimitiveSphere
	{
	public:
		struct FParticleRandomSeedInfo                             RandomSeedInfo;                                          // 0x00E8(0x0020) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocationPrimitiveTriangle
	 * Size -> 0x00D8 (FullSize[0x0110] - InheritedSize[0x0038])
	 */
	class UParticleModuleLocationPrimitiveTriangle : public UParticleModuleLocationBase
	{
	public:
		struct FRawDistributionVector                              StartOffset;                                             // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               Height;                                                  // 0x0080(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               Angle;                                                   // 0x00B0(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               Thickness;                                               // 0x00E0(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocationSkelVertSurface
	 * Size -> 0x0068 (FullSize[0x00A0] - InheritedSize[0x0038])
	 */
	class UParticleModuleLocationSkelVertSurface : public UParticleModuleLocationBase
	{
	public:
		ELocationSkelVertSurfaceSource                             SourceType;                                              // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F0X2[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             UniversalOffset;                                         // 0x003C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUpdatePositionEachFrame : 1;                            // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOrientMeshEmitters : 1;                                 // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInheritBoneVelocity : 1;                                // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JVN7[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InheritVelocityScale;                                    // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SkelMeshActorParamName;                                  // 0x0050(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q9D4[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        ValidAssociatedBones;                                    // 0x0060(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bEnforceNormalCheck : 1;                                 // 0x0070(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GHGR[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             NormalToCompare;                                         // 0x0074(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NormalCheckToleranceDegrees;                             // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NormalCheckTolerance;                                    // 0x0084(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            ValidMaterialIndices;                                    // 0x0088(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bInheritVertexColor : 1;                                 // 0x0098(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInheritUV : 1;                                          // 0x0098(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_68C6[0x3];                                   // 0x0099(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   InheritUVChannel;                                        // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocationStaticVertSurface
	 * Size -> 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
	 */
	class UParticleModuleLocationStaticVertSurface : public UParticleModuleLocationBase
	{
	public:
		ELocationStaticVertSurfaceSource                           SourceType;                                              // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WMYP[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             UniversalOffset;                                         // 0x003C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUpdatePositionEachFrame : 1;                            // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOrientMeshEmitters : 1;                                 // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2RIY[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                StaticMeshActorParamName;                                // 0x004C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnforceNormalCheck : 1;                                 // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DHXQ[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             NormalToCompare;                                         // 0x005C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NormalCheckToleranceDegrees;                             // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NormalCheckTolerance;                                    // 0x006C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            ValidMaterialIndices;                                    // 0x0070(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bInheritVertexColor : 1;                                 // 0x0080(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInheritUV : 1;                                          // 0x0080(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HKKY[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   InheritUVChannel;                                        // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocationWorldOffset
	 * Size -> 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
	 */
	class UParticleModuleLocationWorldOffset : public UParticleModuleLocation
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleLocationWorldOffset_Seeded
	 * Size -> 0x0020 (FullSize[0x00A8] - InheritedSize[0x0088])
	 */
	class UParticleModuleLocationWorldOffset_Seeded : public UParticleModuleLocationWorldOffset
	{
	public:
		struct FParticleRandomSeedInfo                             RandomSeedInfo;                                          // 0x0088(0x0020) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleMaterialBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleMaterialBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleMeshMaterial
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UParticleModuleMeshMaterial : public UParticleModuleMaterialBase
	{
	public:
		TArray<class UMaterialInterface*>                          MeshMaterials;                                           // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleRotationBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleRotationBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleMeshRotation
	 * Size -> 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
	 */
	class UParticleModuleMeshRotation : public UParticleModuleRotationBase
	{
	public:
		struct FRawDistributionVector                              StartRotation;                                           // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bInheritParent : 1;                                      // 0x0080(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HNZR[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleMeshRotation_Seeded
	 * Size -> 0x0020 (FullSize[0x00A8] - InheritedSize[0x0088])
	 */
	class UParticleModuleMeshRotation_Seeded : public UParticleModuleMeshRotation
	{
	public:
		struct FParticleRandomSeedInfo                             RandomSeedInfo;                                          // 0x0088(0x0020) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleRotationRateBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleRotationRateBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleMeshRotationRate
	 * Size -> 0x0048 (FullSize[0x0080] - InheritedSize[0x0038])
	 */
	class UParticleModuleMeshRotationRate : public UParticleModuleRotationRateBase
	{
	public:
		struct FRawDistributionVector                              StartRotationRate;                                       // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleMeshRotationRate_Seeded
	 * Size -> 0x0020 (FullSize[0x00A0] - InheritedSize[0x0080])
	 */
	class UParticleModuleMeshRotationRate_Seeded : public UParticleModuleMeshRotationRate
	{
	public:
		struct FParticleRandomSeedInfo                             RandomSeedInfo;                                          // 0x0080(0x0020) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleMeshRotationRateMultiplyLife
	 * Size -> 0x0048 (FullSize[0x0080] - InheritedSize[0x0038])
	 */
	class UParticleModuleMeshRotationRateMultiplyLife : public UParticleModuleRotationRateBase
	{
	public:
		struct FRawDistributionVector                              LifeMultiplier;                                          // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleMeshRotationRateOverLife
	 * Size -> 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
	 */
	class UParticleModuleMeshRotationRateOverLife : public UParticleModuleRotationRateBase
	{
	public:
		struct FRawDistributionVector                              RotRate;                                                 // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bScaleRotRate : 1;                                       // 0x0080(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_424O[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleOrbitBase
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UParticleModuleOrbitBase : public UParticleModule
	{
	public:
		unsigned char                                              bUseEmitterTime : 1;                                     // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_26A0[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleOrbit
	 * Size -> 0x00F8 (FullSize[0x0138] - InheritedSize[0x0040])
	 */
	class UParticleModuleOrbit : public UParticleModuleOrbitBase
	{
	public:
		EOrbitChainMode                                            ChainMode;                                               // 0x0040(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U1VN[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionVector                              OffsetAmount;                                            // 0x0048(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FOrbitOptions                                       OffsetOptions;                                           // 0x0090(0x0004) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PRD7[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionVector                              RotationAmount;                                          // 0x0098(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FOrbitOptions                                       RotationOptions;                                         // 0x00E0(0x0004) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SNDY[0x4];                                   // 0x00E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionVector                              RotationRateAmount;                                      // 0x00E8(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FOrbitOptions                                       RotationRateOptions;                                     // 0x0130(0x0004) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OEAL[0x4];                                   // 0x0134(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleOrientationBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleOrientationBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleOrientationAxisLock
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UParticleModuleOrientationAxisLock : public UParticleModuleOrientationBase
	{
	public:
		EParticleAxisLock                                          LockAxisFlags;                                           // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5XQV[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleParameterBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleParameterBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleParameterDynamic
	 * Size -> 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
	 */
	class UParticleModuleParameterDynamic : public UParticleModuleParameterBase
	{
	public:
		TArray<struct FEmitterDynamicParameter>                    DynamicParams;                                           // 0x0038(0x0010) Edit, EditFixedSize, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		int32_t                                                    UpdateFlags;                                             // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsesVelocity : 1;                                       // 0x004C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AXBP[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleParameterDynamic_Seeded
	 * Size -> 0x0020 (FullSize[0x0070] - InheritedSize[0x0050])
	 */
	class UParticleModuleParameterDynamic_Seeded : public UParticleModuleParameterDynamic
	{
	public:
		struct FParticleRandomSeedInfo                             RandomSeedInfo;                                          // 0x0050(0x0020) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModulePivotOffset
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UParticleModulePivotOffset : public UParticleModuleLocationBase
	{
	public:
		struct FVector2D                                           PivotOffset;                                             // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleRequired
	 * Size -> 0x0110 (FullSize[0x0148] - InheritedSize[0x0038])
	 */
	class UParticleModuleRequired : public UParticleModule
	{
	public:
		class UMaterialInterface*                                  Material;                                                // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinFacingCameraBlendDistance;                            // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxFacingCameraBlendDistance;                            // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             EmitterOrigin;                                           // 0x0048(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            EmitterRotation;                                         // 0x0054(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		EParticleScreenAlignment                                   ScreenAlignment;                                         // 0x0060(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseLocalSpace : 1;                                      // 0x0061(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bKillOnDeactivate : 1;                                   // 0x0061(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bKillOnCompleted : 1;                                    // 0x0061(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EParticleSortMode                                          SortMode;                                                // 0x0062(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseLegacyEmitterTime : 1;                               // 0x0063(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRemoveHMDRoll : 1;                                      // 0x0063(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEmitterDurationUseRange : 1;                            // 0x0063(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EmitterDuration;                                         // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               SpawnRate;                                               // 0x0068(0x0030) ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FParticleBurst>                              BurstList;                                               // 0x0098(0x0010) ExportObject, ZeroConstructor, NoClear, NativeAccessSpecifierPublic
		float                                                      EmitterDelay;                                            // 0x00A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EmitterDelayLow;                                         // 0x00AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDelayFirstLoopOnly : 1;                                 // 0x00B0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EParticleSubUVInterpMethod                                 InterpolationMethod;                                     // 0x00B1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bScaleUV : 1;                                            // 0x00B2(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEmitterDelayUseRange : 1;                               // 0x00B2(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EParticleBurstMethod                                       ParticleBurstMethod;                                     // 0x00B3(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideSystemMacroUV : 1;                              // 0x00B4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseMaxDrawCount : 1;                                    // 0x00B4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOpacitySourceMode                                         OpacitySourceMode;                                       // 0x00B5(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEmitterNormalsMode                                        EmitterNormalsMode;                                      // 0x00B6(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOrbitModuleAffectsVelocityAlignment : 1;                // 0x00B7(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubImages_Horizontal;                                    // 0x00B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubImages_Vertical;                                      // 0x00BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RandomImageTime;                                         // 0x00C0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RandomImageChanges;                                      // 0x00C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MacroUVPosition;                                         // 0x00C8(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MacroUVRadius;                                           // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EParticleUVFlipMode                                        UVFlippingMode;                                          // 0x00D8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESubUVBoundingVertexCount                                  BoundingMode;                                            // 0x00D9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDurationRecalcEachLoop : 1;                             // 0x00DA(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W8DZ[0x1];                                   // 0x00DB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             NormalsSphereCenter;                                     // 0x00DC(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AlphaThreshold;                                          // 0x00E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EmitterLoops;                                            // 0x00EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          CutoutTexture;                                           // 0x00F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxDrawCount;                                            // 0x00F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EmitterDurationLow;                                      // 0x00FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             NormalsCylinderDirection;                                // 0x0100(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OA7V[0x4];                                   // 0x010C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        NamedMaterialOverrides;                                  // 0x0110(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_037C[0x28];                                  // 0x0120(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleRotation
	 * Size -> 0x0030 (FullSize[0x0068] - InheritedSize[0x0038])
	 */
	class UParticleModuleRotation : public UParticleModuleRotationBase
	{
	public:
		struct FRawDistributionFloat                               StartRotation;                                           // 0x0038(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleRotation_Seeded
	 * Size -> 0x0020 (FullSize[0x0088] - InheritedSize[0x0068])
	 */
	class UParticleModuleRotation_Seeded : public UParticleModuleRotation
	{
	public:
		struct FParticleRandomSeedInfo                             RandomSeedInfo;                                          // 0x0068(0x0020) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleRotationOverLifetime
	 * Size -> 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
	 */
	class UParticleModuleRotationOverLifetime : public UParticleModuleRotationBase
	{
	public:
		struct FRawDistributionFloat                               RotationOverLife;                                        // 0x0038(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              Scale : 1;                                               // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LXSN[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleRotationRate
	 * Size -> 0x0030 (FullSize[0x0068] - InheritedSize[0x0038])
	 */
	class UParticleModuleRotationRate : public UParticleModuleRotationRateBase
	{
	public:
		struct FRawDistributionFloat                               StartRotationRate;                                       // 0x0038(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleRotationRate_Seeded
	 * Size -> 0x0020 (FullSize[0x0088] - InheritedSize[0x0068])
	 */
	class UParticleModuleRotationRate_Seeded : public UParticleModuleRotationRate
	{
	public:
		struct FParticleRandomSeedInfo                             RandomSeedInfo;                                          // 0x0068(0x0020) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleRotationRateMultiplyLife
	 * Size -> 0x0030 (FullSize[0x0068] - InheritedSize[0x0038])
	 */
	class UParticleModuleRotationRateMultiplyLife : public UParticleModuleRotationRateBase
	{
	public:
		struct FRawDistributionFloat                               LifeMultiplier;                                          // 0x0038(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleSizeBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleSizeBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleSize
	 * Size -> 0x0048 (FullSize[0x0080] - InheritedSize[0x0038])
	 */
	class UParticleModuleSize : public UParticleModuleSizeBase
	{
	public:
		struct FRawDistributionVector                              StartSize;                                               // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleSize_Seeded
	 * Size -> 0x0020 (FullSize[0x00A0] - InheritedSize[0x0080])
	 */
	class UParticleModuleSize_Seeded : public UParticleModuleSize
	{
	public:
		struct FParticleRandomSeedInfo                             RandomSeedInfo;                                          // 0x0080(0x0020) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleSizeMultiplyLife
	 * Size -> 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
	 */
	class UParticleModuleSizeMultiplyLife : public UParticleModuleSizeBase
	{
	public:
		struct FRawDistributionVector                              LifeMultiplier;                                          // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              MultiplyX : 1;                                           // 0x0080(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MultiplyY : 1;                                           // 0x0080(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MultiplyZ : 1;                                           // 0x0080(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZLK8[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleSizeScale
	 * Size -> 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
	 */
	class UParticleModuleSizeScale : public UParticleModuleSizeBase
	{
	public:
		struct FRawDistributionVector                              SizeScale;                                               // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              EnableX : 1;                                             // 0x0080(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              EnableY : 1;                                             // 0x0080(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              EnableZ : 1;                                             // 0x0080(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_656A[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleSizeScaleBySpeed
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UParticleModuleSizeScaleBySpeed : public UParticleModuleSizeBase
	{
	public:
		struct FVector2D                                           SpeedScale;                                              // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           MaxScale;                                                // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleSourceMovement
	 * Size -> 0x0048 (FullSize[0x0080] - InheritedSize[0x0038])
	 */
	class UParticleModuleSourceMovement : public UParticleModuleLocationBase
	{
	public:
		struct FRawDistributionVector                              SourceMovementScale;                                     // 0x0038(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleSpawnBase
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UParticleModuleSpawnBase : public UParticleModule
	{
	public:
		unsigned char                                              bProcessSpawnRate : 1;                                   // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bProcessBurstList : 1;                                   // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZNUW[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleSpawn
	 * Size -> 0x00B0 (FullSize[0x00F0] - InheritedSize[0x0040])
	 */
	class UParticleModuleSpawn : public UParticleModuleSpawnBase
	{
	public:
		struct FRawDistributionFloat                               Rate;                                                    // 0x0040(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               RateScale;                                               // 0x0070(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		EParticleBurstMethod                                       ParticleBurstMethod;                                     // 0x00A0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E0ZE[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FParticleBurst>                              BurstList;                                               // 0x00A8(0x0010) Edit, ExportObject, ZeroConstructor, NoClear, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               BurstScale;                                              // 0x00B8(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bApplyGlobalSpawnRateScale : 1;                          // 0x00E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SLRH[0x7];                                   // 0x00E9(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleSpawnPerUnit
	 * Size -> 0x0040 (FullSize[0x0080] - InheritedSize[0x0040])
	 */
	class UParticleModuleSpawnPerUnit : public UParticleModuleSpawnBase
	{
	public:
		float                                                      UnitScalar;                                              // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MovementTolerance;                                       // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               SpawnPerUnit;                                            // 0x0048(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		float                                                      MaxFrameDistance;                                        // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreSpawnRateWhenMoving : 1;                          // 0x007C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreMovementAlongX : 1;                               // 0x007C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreMovementAlongY : 1;                               // 0x007C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreMovementAlongZ : 1;                               // 0x007C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PHIP[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleSubUVBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleSubUVBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleSubUV
	 * Size -> 0x0040 (FullSize[0x0078] - InheritedSize[0x0038])
	 */
	class UParticleModuleSubUV : public UParticleModuleSubUVBase
	{
	public:
		class USubUVAnimation*                                     Animation;                                               // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               SubImageIndex;                                           // 0x0040(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bUseRealTime : 1;                                        // 0x0070(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7N5K[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleSubUVMovie
	 * Size -> 0x0040 (FullSize[0x00B8] - InheritedSize[0x0078])
	 */
	class UParticleModuleSubUVMovie : public UParticleModuleSubUV
	{
	public:
		unsigned char                                              bUseEmitterTime : 1;                                     // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RYE4[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionFloat                               FrameRate;                                               // 0x0080(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		int32_t                                                    StartingFrame;                                           // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LTYC[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleTrailBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleTrailBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleTrailSource
	 * Size -> 0x0060 (FullSize[0x0098] - InheritedSize[0x0038])
	 */
	class UParticleModuleTrailSource : public UParticleModuleTrailBase
	{
	public:
		ETrail2SourceMethod                                        SourceMethod;                                            // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MTOC[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SourceName;                                              // 0x003C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               SourceStrength;                                          // 0x0048(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              bLockSourceStength : 1;                                  // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YIMW[0x3];                                   // 0x0079(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SourceOffsetCount;                                       // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVector>                                     SourceOffsetDefaults;                                    // 0x0080(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
		EParticleSourceSelectionMethod                             SelectionMethod;                                         // 0x0090(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5RRP[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bInheritRotation : 1;                                    // 0x0094(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WD96[0x3];                                   // 0x0095(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleTypeDataBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleTypeDataBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleTypeDataAnimTrail
	 * Size -> 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
	 */
	class UParticleModuleTypeDataAnimTrail : public UParticleModuleTypeDataBase
	{
	public:
		unsigned char                                              bDeadTrailsOnDeactivate : 1;                             // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnablePreviousTangentRecalculation : 1;                 // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTangentRecalculationEveryFrame : 1;                     // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KDCI[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TilingDistance;                                          // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceTessellationStepSize;                            // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TangentTessellationStepSize;                             // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WidthTessellationStepSize;                               // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IMVM[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleTypeDataBeam2
	 * Size -> 0x0120 (FullSize[0x0158] - InheritedSize[0x0038])
	 */
	class UParticleModuleTypeDataBeam2 : public UParticleModuleTypeDataBase
	{
	public:
		EBeam2Method                                               BeamMethod;                                              // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HR52[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TextureTile;                                             // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TextureTileDistance;                                     // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Sheets;                                                  // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxBeamCount;                                            // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Speed;                                                   // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InterpolationPoints;                                     // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAlwaysOn : 1;                                           // 0x0054(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DYMD[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UpVectorStepSize;                                        // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BranchParentName;                                        // 0x005C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               Distance;                                                // 0x0068(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		EBeamTaperMethod                                           TaperMethod;                                             // 0x0098(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IVYC[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionFloat                               TaperFactor;                                             // 0x00A0(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               TaperScale;                                              // 0x00D0(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              RenderGeometry : 1;                                      // 0x0100(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RenderDirectLine : 1;                                    // 0x0100(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RenderLines : 1;                                         // 0x0100(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RenderTessellation : 1;                                  // 0x0100(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UNPF[0x57];                                  // 0x0101(0x0057) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleTypeDataGpu
	 * Size -> 0x03F8 (FullSize[0x0430] - InheritedSize[0x0038])
	 */
	class UParticleModuleTypeDataGpu : public UParticleModuleTypeDataBase
	{
	public:
		unsigned char                                              UnknownData_WKP7[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGPUSpriteEmitterInfo                               EmitterInfo;                                             // 0x0040(0x0280) ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGPUSpriteResourceData                              ResourceData;                                            // 0x02C0(0x0160) NativeAccessSpecifierPublic
		float                                                      CameraMotionBlurAmount;                                  // 0x0420(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bClearExistingParticlesOnInit : 1;                       // 0x0424(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6W0Q[0xB];                                   // 0x0425(0x000B) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleTypeDataMesh
	 * Size -> 0x0068 (FullSize[0x00A0] - InheritedSize[0x0038])
	 */
	class UParticleModuleTypeDataMesh : public UParticleModuleTypeDataBase
	{
	public:
		class UStaticMesh*                                         Mesh;                                                    // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F30I[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LODSizeScale;                                            // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseStaticMeshLODs : 1;                                  // 0x004C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CastShadows : 1;                                         // 0x004C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DoCollisions : 1;                                        // 0x004C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMeshScreenAlignment                                       MeshAlignment;                                           // 0x004D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideMaterial : 1;                                   // 0x004E(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideDefaultMotionBlurSettings : 1;                  // 0x004E(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableMotionBlur : 1;                                   // 0x004E(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NN3O[0x1];                                   // 0x004F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRawDistributionVector                              RollPitchYawRange;                                       // 0x0050(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		EParticleAxisLock                                          AxisLockOption;                                          // 0x0098(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCameraFacing : 1;                                       // 0x0099(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMeshCameraFacingUpAxis                                    CameraFacingUpAxisOption;                                // 0x009A(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMeshCameraFacingOptions                                   CameraFacingOption;                                      // 0x009B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bApplyParticleRotationAsSpin : 1;                        // 0x009C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFaceCameraDirectionRatherThanPosition : 1;              // 0x009C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCollisionsConsiderPartilceSize : 1;                     // 0x009C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1U9V[0x3];                                   // 0x009D(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleTypeDataRibbon
	 * Size -> 0x0030 (FullSize[0x0068] - InheritedSize[0x0038])
	 */
	class UParticleModuleTypeDataRibbon : public UParticleModuleTypeDataBase
	{
	public:
		int32_t                                                    MaxTessellationBetweenParticles;                         // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SheetsPerTrail;                                          // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxTrailCount;                                           // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxParticleInTrailCount;                                 // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDeadTrailsOnDeactivate : 1;                             // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDeadTrailsOnSourceLoss : 1;                             // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bClipSourceSegement : 1;                                 // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnablePreviousTangentRecalculation : 1;                 // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTangentRecalculationEveryFrame : 1;                     // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSpawnInitialParticle : 1;                               // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O14K[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ETrailsRenderAxisOption                                    RenderAxis;                                              // 0x004C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JXNV[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TangentSpawningScalar;                                   // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRenderGeometry : 1;                                     // 0x0054(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRenderSpawnPoints : 1;                                  // 0x0054(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRenderTangents : 1;                                     // 0x0054(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRenderTessellation : 1;                                 // 0x0054(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1A8P[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TilingDistance;                                          // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceTessellationStepSize;                            // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableTangentDiffInterpScale : 1;                       // 0x0060(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VN99[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TangentTessellationScalar;                               // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleVectorFieldBase
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UParticleModuleVectorFieldBase : public UParticleModule
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleVectorFieldGlobal
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UParticleModuleVectorFieldGlobal : public UParticleModuleVectorFieldBase
	{
	public:
		unsigned char                                              bOverrideGlobalVectorFieldTightness : 1;                 // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K8F3[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GlobalVectorFieldScale;                                  // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlobalVectorFieldTightness;                              // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FYPM[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleVectorFieldLocal
	 * Size -> 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
	 */
	class UParticleModuleVectorFieldLocal : public UParticleModuleVectorFieldBase
	{
	public:
		class UVectorField*                                        VectorField;                                             // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             RelativeTranslation;                                     // 0x0040(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RelativeRotation;                                        // 0x004C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             RelativeScale3D;                                         // 0x0058(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Intensity;                                               // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Tightness;                                               // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreComponentTransform : 1;                           // 0x006C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTileX : 1;                                              // 0x006C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTileY : 1;                                              // 0x006C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTileZ : 1;                                              // 0x006C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseFixDT : 1;                                           // 0x006C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NHZF[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleVectorFieldRotation
	 * Size -> 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
	 */
	class UParticleModuleVectorFieldRotation : public UParticleModuleVectorFieldBase
	{
	public:
		struct FVector                                             MinInitialRotation;                                      // 0x0038(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MaxInitialRotation;                                      // 0x0044(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleVectorFieldRotationRate
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UParticleModuleVectorFieldRotationRate : public UParticleModuleVectorFieldBase
	{
	public:
		struct FVector                                             RotationRate;                                            // 0x0038(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q11E[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleVectorFieldScale
	 * Size -> 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
	 */
	class UParticleModuleVectorFieldScale : public UParticleModuleVectorFieldBase
	{
	public:
		class UDistributionFloat*                                  VectorFieldScale;                                        // 0x0038(0x0008) ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               VectorFieldScaleRaw;                                     // 0x0040(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleVectorFieldScaleOverLife
	 * Size -> 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
	 */
	class UParticleModuleVectorFieldScaleOverLife : public UParticleModuleVectorFieldBase
	{
	public:
		class UDistributionFloat*                                  VectorFieldScaleOverLife;                                // 0x0038(0x0008) ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               VectorFieldScaleOverLifeRaw;                             // 0x0040(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleVelocityBase
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UParticleModuleVelocityBase : public UParticleModule
	{
	public:
		unsigned char                                              bInWorldSpace : 1;                                       // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bApplyOwnerScale : 1;                                    // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KUTU[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleVelocity
	 * Size -> 0x0078 (FullSize[0x00B8] - InheritedSize[0x0040])
	 */
	class UParticleModuleVelocity : public UParticleModuleVelocityBase
	{
	public:
		struct FRawDistributionVector                              StartVelocity;                                           // 0x0040(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               StartVelocityRadial;                                     // 0x0088(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleVelocity_Seeded
	 * Size -> 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
	 */
	class UParticleModuleVelocity_Seeded : public UParticleModuleVelocity
	{
	public:
		struct FParticleRandomSeedInfo                             RandomSeedInfo;                                          // 0x00B8(0x0020) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleVelocityCone
	 * Size -> 0x0070 (FullSize[0x00B0] - InheritedSize[0x0040])
	 */
	class UParticleModuleVelocityCone : public UParticleModuleVelocityBase
	{
	public:
		struct FRawDistributionFloat                               Angle;                                                   // 0x0040(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRawDistributionFloat                               Velocity;                                                // 0x0070(0x0030) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FVector                                             Direction;                                               // 0x00A0(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V75U[0x4];                                   // 0x00AC(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleVelocityInheritParent
	 * Size -> 0x0048 (FullSize[0x0088] - InheritedSize[0x0040])
	 */
	class UParticleModuleVelocityInheritParent : public UParticleModuleVelocityBase
	{
	public:
		struct FRawDistributionVector                              Scale;                                                   // 0x0040(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleModuleVelocityOverLifetime
	 * Size -> 0x0050 (FullSize[0x0090] - InheritedSize[0x0040])
	 */
	class UParticleModuleVelocityOverLifetime : public UParticleModuleVelocityBase
	{
	public:
		struct FRawDistributionVector                              VelOverLife;                                             // 0x0040(0x0048) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              Absolute : 1;                                            // 0x0088(0x0001) BIT_FIELD Edit, ExportObject, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K5Z5[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleSpriteEmitter
	 * Size -> 0x0000 (FullSize[0x01D0] - InheritedSize[0x01D0])
	 */
	class UParticleSpriteEmitter : public UParticleEmitter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ParticleSystemReplay
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UParticleSystemReplay : public UObject
	{
	public:
		int32_t                                                    ClipIDNumber;                                            // 0x0030(0x0004) Edit, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JJAR[0x14];                                  // 0x0034(0x0014) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PathFollowingAgentInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UPathFollowingAgentInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PawnNoiseEmitterComponent
	 * Size -> 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
	 */
	class UPawnNoiseEmitterComponent : public UActorComponent
	{
	public:
		unsigned char                                              bAIPerceptionSystemCompatibilityMode : 1;                // 0x00B8(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_0KZU[0x3];                                   // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             LastRemoteNoisePosition;                                 // 0x00BC(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NoiseLifetime;                                           // 0x00C8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastRemoteNoiseVolume;                                   // 0x00CC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      LastRemoteNoiseTime;                                     // 0x00D0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      LastLocalNoiseVolume;                                    // 0x00D4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      LastLocalNoiseTime;                                      // 0x00D8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_5FH6[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (PADDING)

	public:
		void MakeNoise(class AActor* NoiseMaker, float Loudness, const struct FVector& NoiseLocation);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PhysicalAnimationComponent
	 * Size -> 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
	 */
	class UPhysicalAnimationComponent : public UActorComponent
	{
	public:
		float                                                      StrengthMultiplyer;                                      // 0x00B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TWVK[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeletalMeshComponent*                              SkeletalMeshComponent;                                   // 0x00C0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_INZV[0x30];                                  // 0x00C8(0x0030) MISSED OFFSET (PADDING)

	public:
		void SetStrengthMultiplyer(float InStrengthMultiplyer);
		void SetSkeletalMeshComponent(class USkeletalMeshComponent* InSkeletalMeshComponent);
		struct FTransform GetBodyTargetTransform(const class FName& BodyName);
		void ApplyPhysicalAnimationSettingsBelow(const class FName& BodyName, const struct FPhysicalAnimationData& PhysicalAnimationData, bool bIncludeSelf);
		void ApplyPhysicalAnimationSettings(const class FName& BodyName, const struct FPhysicalAnimationData& PhysicalAnimationData);
		void ApplyPhysicalAnimationProfileBelow(const class FName& BodyName, const class FName& ProfileName, bool bIncludeSelf, bool bClearNotFound);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PhysicalMaterialMask
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UPhysicalMaterialMask : public UObject
	{
	public:
		int32_t                                                    UVChannelIndex;                                          // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETextureAddress                                            AddressX;                                                // 0x0034(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETextureAddress                                            AddressY;                                                // 0x0035(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QMQL[0x2];                                   // 0x0036(0x0002) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PhysicsAsset
	 * Size -> 0x0110 (FullSize[0x0140] - InheritedSize[0x0030])
	 */
	class UPhysicsAsset : public UObject
	{
	public:
		unsigned char                                              UnknownData_VT10[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            BoundsBodies;                                            // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class USkeletalBodySetup*>                          SkeletalBodySetups;                                      // 0x0048(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UPhysicsConstraintTemplate*>                  ConstraintSetup;                                         // 0x0058(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FSolverIterations                                   SolverIterations;                                        // 0x0068(0x001C) Edit, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic
		EPhysicsAssetSolverType                                    SolverType;                                              // 0x0084(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNotForDedicatedServer : 1;                              // 0x0085(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MOCA[0xA2];                                  // 0x0086(0x00A2) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UThumbnailInfo*                                      ThumbnailInfo;                                           // 0x0128(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UBodySetup*>                                  BodySetup;                                               // 0x0130(0x0010) ExportObject, ZeroConstructor, Deprecated, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SkeletalBodySetup
	 * Size -> 0x0018 (FullSize[0x02C8] - InheritedSize[0x02B0])
	 */
	class USkeletalBodySetup : public UBodySetup
	{
	public:
		bool                                                       bSkipScaleFromAnimation;                                 // 0x02B0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QETJ[0x7];                                   // 0x02B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPhysicalAnimationProfile>                   PhysicalAnimationData;                                   // 0x02B8(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PhysicsCollisionHandler
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UPhysicsCollisionHandler : public UObject
	{
	public:
		float                                                      ImpactThreshold;                                         // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ImpactReFireDelay;                                       // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundBase*                                          DefaultImpactSound;                                      // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastImpactSoundTime;                                     // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D1TM[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.RigidBodyBase
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class ARigidBodyBase : public AActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PhysicsConstraintActor
	 * Size -> 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
	 */
	class APhysicsConstraintActor : public ARigidBodyBase
	{
	public:
		class UPhysicsConstraintComponent*                         ConstraintComp;                                          // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AActor*                                              ConstraintActor1;                                        // 0x0238(0x0008) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              ConstraintActor2;                                        // 0x0240(0x0008) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableCollision : 1;                                   // 0x0248(0x0001) BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X9LL[0x7];                                   // 0x0249(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PhysicsConstraintComponent
	 * Size -> 0x0230 (FullSize[0x0450] - InheritedSize[0x0220])
	 */
	class UPhysicsConstraintComponent : public USceneComponent
	{
	public:
		class AActor*                                              ConstraintActor1;                                        // 0x0218(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConstrainComponentPropName                         ComponentName1;                                          // 0x0220(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TC3N[0x4];                                   // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              ConstraintActor2;                                        // 0x0230(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConstrainComponentPropName                         ComponentName2;                                          // 0x0238(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KAHH[0x14];                                  // 0x0244(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPhysicsConstraintTemplate*                          ConstraintSetup;                                         // 0x0258(0x0008) ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnConstraintBroken;                                      // 0x0260(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FConstraintInstance                                 ConstraintInstance;                                      // 0x0270(0x01D8) Edit, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BTDR[0x8];                                   // 0x0448(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetOrientationDriveTwistAndSwing(bool bEnableTwistDrive, bool bEnableSwingDrive);
		void SetOrientationDriveSLERP(bool bEnableSLERP);
		void SetLinearZLimit(ELinearConstraintMotion ConstraintType, float LimitSize);
		void SetLinearYLimit(ELinearConstraintMotion ConstraintType, float LimitSize);
		void SetLinearXLimit(ELinearConstraintMotion ConstraintType, float LimitSize);
		void SetLinearVelocityTarget(const struct FVector& InVelTarget);
		void SetLinearVelocityDrive(bool bEnableDriveX, bool bEnableDriveY, bool bEnableDriveZ);
		void SetLinearPositionTarget(const struct FVector& InPosTarget);
		void SetLinearPositionDrive(bool bEnableDriveX, bool bEnableDriveY, bool bEnableDriveZ);
		void SetLinearPlasticity(bool bLinearPlasticity, float LinearPlasticityThreshold);
		void SetLinearDriveParams(float PositionStrength, float VelocityStrength, float InForceLimit);
		void SetLinearBreakable(bool bLinearBreakable, float LinearBreakThreshold);
		void SetDisableCollision(bool bDisableCollision);
		void SetConstraintReferencePosition(EConstraintFrame Frame, const struct FVector& RefPosition);
		void SetConstraintReferenceOrientation(EConstraintFrame Frame, const struct FVector& PriAxis, const struct FVector& SecAxis);
		void SetConstraintReferenceFrame(EConstraintFrame Frame, const struct FTransform& RefFrame);
		void SetConstrainedComponents(class UPrimitiveComponent* Component1, const class FName& BoneName1, class UPrimitiveComponent* Component2, const class FName& BoneName2);
		void SetAngularVelocityTarget(const struct FVector& InVelTarget);
		void SetAngularVelocityDriveTwistAndSwing(bool bEnableTwistDrive, bool bEnableSwingDrive);
		void SetAngularVelocityDriveSLERP(bool bEnableSLERP);
		void SetAngularVelocityDrive(bool bEnableSwingDrive, bool bEnableTwistDrive);
		void SetAngularTwistLimit(EAngularConstraintMotion ConstraintType, float TwistLimitAngle);
		void SetAngularSwing2Limit(EAngularConstraintMotion MotionType, float Swing2LimitAngle);
		void SetAngularSwing1Limit(EAngularConstraintMotion MotionType, float Swing1LimitAngle);
		void SetAngularPlasticity(bool bAngularPlasticity, float AngularPlasticityThreshold);
		void SetAngularOrientationTarget(const struct FRotator& InPosTarget);
		void SetAngularOrientationDrive(bool bEnableSwingDrive, bool bEnableTwistDrive);
		void SetAngularDriveParams(float PositionStrength, float VelocityStrength, float InForceLimit);
		void SetAngularDriveMode(EAngularDriveMode DriveMode);
		void SetAngularBreakable(bool bAngularBreakable, float AngularBreakThreshold);
		bool IsBroken();
		float GetCurrentTwist();
		float GetCurrentSwing2();
		float GetCurrentSwing1();
		void GetConstraintForce(struct FVector* OutLinearForce, struct FVector* OutAngularForce);
		void BreakConstraint();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PhysicsConstraintTemplate
	 * Size -> 0x0300 (FullSize[0x0330] - InheritedSize[0x0030])
	 */
	class UPhysicsConstraintTemplate : public UObject
	{
	public:
		struct FConstraintInstance                                 DefaultInstance;                                         // 0x0030(0x01D8) Edit, NativeAccessSpecifierPublic
		TArray<struct FPhysicsConstraintProfileHandle>             ProfileHandles;                                          // 0x0208(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FConstraintProfileProperties                        DefaultProfile;                                          // 0x0218(0x0114) Transient, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9ZM3[0x4];                                   // 0x032C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PhysicsFieldComponent
	 * Size -> 0x0070 (FullSize[0x0290] - InheritedSize[0x0220])
	 */
	class UPhysicsFieldComponent : public USceneComponent
	{
	public:
		unsigned char                                              UnknownData_038Q[0x70];                                  // 0x0220(0x0070) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PhysicsHandleComponent
	 * Size -> 0x00A8 (FullSize[0x0160] - InheritedSize[0x00B8])
	 */
	class UPhysicsHandleComponent : public UActorComponent
	{
	public:
		class UPrimitiveComponent*                                 GrabbedComponent;                                        // 0x00B8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BPSM[0xC];                                   // 0x00C0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              UnknownData_HSCF : 1;                                    // 0x00CC(0x0001) BIT_FIELD (PADDING)
		unsigned char                                              bSoftAngularConstraint : 1;                              // 0x00CC(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSoftLinearConstraint : 1;                               // 0x00CC(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInterpolateTarget : 1;                                  // 0x00CC(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IT8C[0x3];                                   // 0x00CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LinearDamping;                                           // 0x00D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LinearStiffness;                                         // 0x00D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AngularDamping;                                          // 0x00D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AngularStiffness;                                        // 0x00DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6ZZA[0x60];                                  // 0x00E0(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InterpolationSpeed;                                      // 0x0140(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RS6M[0x1C];                                  // 0x0144(0x001C) MISSED OFFSET (PADDING)

	public:
		void SetTargetRotation(const struct FRotator& NewRotation);
		void SetTargetLocationAndRotation(const struct FVector& NewLocation, const struct FRotator& NewRotation);
		void SetTargetLocation(const struct FVector& NewLocation);
		void SetLinearStiffness(float NewLinearStiffness);
		void SetLinearDamping(float NewLinearDamping);
		void SetInterpolationSpeed(float NewInterpolationSpeed);
		void SetAngularStiffness(float NewAngularStiffness);
		void SetAngularDamping(float NewAngularDamping);
		void ReleaseComponent();
		void GrabComponentAtLocationWithRotation(class UPrimitiveComponent* Component, const class FName& InBoneName, const struct FVector& Location, const struct FRotator& Rotation);
		void GrabComponentAtLocation(class UPrimitiveComponent* Component, const class FName& InBoneName, const struct FVector& GrabLocation);
		void GrabComponent(class UPrimitiveComponent* Component, const class FName& InBoneName, const struct FVector& GrabLocation, bool bConstrainRotation);
		void GetTargetLocationAndRotation(struct FVector* targetLocation, struct FRotator* TargetRotation);
		class UPrimitiveComponent* GetGrabbedComponent();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PhysicsSettings
	 * Size -> 0x00C0 (FullSize[0x01B0] - InheritedSize[0x00F0])
	 */
	class UPhysicsSettings : public UPhysicsSettingsCore
	{
	public:
		struct FRigidBodyErrorCorrection                           PhysicErrorCorrection;                                   // 0x00F0(0x0034) Edit, Config, NoDestructor, NativeAccessSpecifierPublic
		ESettingsLockedAxis                                        LockedAxis;                                              // 0x0124(0x0001) ZeroConstructor, Config, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESettingsDOF                                               DefaultDegreesOfFreedom;                                 // 0x0125(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSuppressFaceRemapTable;                                 // 0x0126(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSupportUVFromHitResults;                                // 0x0127(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableActiveActors;                                    // 0x0128(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableKinematicStaticPairs;                            // 0x0129(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableKinematicKinematicPairs;                         // 0x012A(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableCCD;                                             // 0x012B(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableEnhancedDeterminism;                              // 0x012C(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z6MG[0x3];                                   // 0x012D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AnimPhysicsMinDeltaTime;                                 // 0x0130(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSimulateAnimPhysicsAfterReset;                          // 0x0134(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LKT2[0x3];                                   // 0x0135(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxPhysicsDeltaTime;                                     // 0x0138(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSubstepping;                                            // 0x013C(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSubsteppingAsync;                                       // 0x013D(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MFHQ[0x2];                                   // 0x013E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxSubstepDeltaTime;                                     // 0x0140(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxSubsteps;                                             // 0x0144(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SyncSceneSmoothingFactor;                                // 0x0148(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialAverageFrameRate;                                 // 0x014C(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PhysXTreeRebuildRate;                                    // 0x0150(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A0C4[0x4];                                   // 0x0154(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPhysicalSurfaceName>                        PhysicalSurfaces;                                        // 0x0158(0x0010) Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic
		struct FBroadphaseSettings                                 DefaultBroadphaseSettings;                               // 0x0168(0x0040) Edit, Config, NoDestructor, NativeAccessSpecifierPublic
		float                                                      MinDeltaVelocityForHitEvents;                            // 0x01A8(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FChaosPhysicsSettings                               ChaosSettings;                                           // 0x01AC(0x0003) Edit, Config, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BO0G[0x1];                                   // 0x01AF(0x0001) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PhysicsSpringComponent
	 * Size -> 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
	 */
	class UPhysicsSpringComponent : public USceneComponent
	{
	public:
		float                                                      SpringDamping;                                           // 0x021C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpringLengthAtRest;                                      // 0x0220(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpringRadius;                                            // 0x0224(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECollisionChannel                                          SpringChannel;                                           // 0x0228(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreSelf;                                             // 0x0229(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UVMX[0x2];                                   // 0x022A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpringCompression;                                       // 0x022C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X1BL[0x10];                                  // 0x0230(0x0010) MISSED OFFSET (PADDING)

	public:
		struct FVector GetSpringRestingPoint();
		struct FVector GetSpringDirection();
		struct FVector GetSpringCurrentEndPoint();
		float GetNormalizedCompressionScalar();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PhysicsThruster
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class APhysicsThruster : public ARigidBodyBase
	{
	public:
		class UPhysicsThrusterComponent*                           ThrusterComponent;                                       // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PhysicsThrusterComponent
	 * Size -> 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
	 */
	class UPhysicsThrusterComponent : public USceneComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SceneCapture
	 * Size -> 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
	 */
	class ASceneCapture : public AActor
	{
	public:
		class UStaticMeshComponent*                                MeshComp;                                                // 0x0230(0x0008) ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USceneComponent*                                     SceneComponent;                                          // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PlanarReflection
	 * Size -> 0x0010 (FullSize[0x0250] - InheritedSize[0x0240])
	 */
	class APlanarReflection : public ASceneCapture
	{
	public:
		class UPlanarReflectionComponent*                          PlanarReflectionComponent;                               // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bShowPreviewPlane;                                       // 0x0248(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WSA7[0x7];                                   // 0x0249(0x0007) MISSED OFFSET (PADDING)

	public:
		void OnInterpToggle(bool bEnable);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SceneCaptureComponent
	 * Size -> 0x00B0 (FullSize[0x02D0] - InheritedSize[0x0220])
	 */
	class USceneCaptureComponent : public USceneComponent
	{
	public:
		TArray<TWeakObjectPtr<class UPrimitiveComponent>>          HiddenComponents;                                        // 0x0220(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      HiddenActors;                                            // 0x0230(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic
		TArray<TWeakObjectPtr<class UPrimitiveComponent>>          ShowOnlyComponents;                                      // 0x0240(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      ShowOnlyActors;                                          // 0x0250(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic
		float                                                      LODDistanceFactor;                                       // 0x0260(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxViewDistanceOverride;                                 // 0x0264(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CaptureSortPriority;                                     // 0x0268(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseRayTracingIfEnabled;                                 // 0x026C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreCullDistanceVolumes;                              // 0x026D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_531N[0x2];                                   // 0x026E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FEngineShowFlagsSetting>                     ShowFlagSettings;                                        // 0x0270(0x0010) Edit, BlueprintVisible, ZeroConstructor, Interp, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GVJ0[0x30];                                  // 0x0280(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ProfilingEventName;                                      // 0x02B0(0x0010) Edit, BlueprintVisible, ZeroConstructor, Interp, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DE2S[0x10];                                  // 0x02C0(0x0010) MISSED OFFSET (PADDING)

	public:
		void ShowOnlyComponent(class UPrimitiveComponent* InComponent);
		void ShowOnlyActorComponents(class AActor* InActor, bool bIncludeFromChildActors);
		void SetCaptureSortPriority(int32_t NewCaptureSortPriority);
		void RemoveShowOnlyComponent(class UPrimitiveComponent* InComponent);
		void RemoveShowOnlyActorComponents(class AActor* InActor, bool bIncludeFromChildActors);
		void HideComponent(class UPrimitiveComponent* InComponent);
		void HideActorComponents(class AActor* InActor, bool bIncludeFromChildActors);
		void ClearShowOnlyComponents();
		void ClearHiddenComponents();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PlanarReflectionComponent
	 * Size -> 0x00F0 (FullSize[0x03C0] - InheritedSize[0x02D0])
	 */
	class UPlanarReflectionComponent : public USceneCaptureComponent
	{
	public:
		class UBoxComponent*                                       PreviewBox;                                              // 0x02D0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NormalDistortionStrength;                                // 0x02D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PrefilterRoughness;                                      // 0x02DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PrefilterRoughnessDistance;                              // 0x02E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScreenPercentage;                                        // 0x02E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExtraFOV;                                                // 0x02E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceFromPlaneFadeStart;                              // 0x02EC(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceFromPlaneFadeEnd;                                // 0x02F0(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceFromPlaneFadeoutStart;                           // 0x02F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceFromPlaneFadeoutEnd;                             // 0x02F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AngleFromPlaneFadeStart;                                 // 0x02FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AngleFromPlaneFadeEnd;                                   // 0x0300(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowPreviewPlane;                                       // 0x0304(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRenderSceneTwoSided;                                    // 0x0305(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MRCR[0xBA];                                  // 0x0306(0x00BA) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PlaneReflectionCapture
	 * Size -> 0x0000 (FullSize[0x0238] - InheritedSize[0x0238])
	 */
	class APlaneReflectionCapture : public AReflectionCapture
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PlaneReflectionCaptureComponent
	 * Size -> 0x0020 (FullSize[0x02E0] - InheritedSize[0x02C0])
	 */
	class UPlaneReflectionCaptureComponent : public UReflectionCaptureComponent
	{
	public:
		float                                                      InfluenceRadiusScale;                                    // 0x02C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V57L[0x4];                                   // 0x02C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDrawSphereComponent*                                PreviewInfluenceRadius;                                  // 0x02C8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                       PreviewCaptureBox;                                       // 0x02D0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_541V[0x8];                                   // 0x02D8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PlatformEventsComponent
	 * Size -> 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
	 */
	class UPlatformEventsComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             PlatformChangedToLaptopModeDelegate;                     // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             PlatformChangedToTabletModeDelegate;                     // 0x00C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		bool SupportsConvertibleLaptops();
		void PlatformEventDelegate__DelegateSignature();
		bool IsInTabletMode();
		bool IsInLaptopMode();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PlatformInterfaceWebResponse
	 * Size -> 0x0088 (FullSize[0x00B8] - InheritedSize[0x0030])
	 */
	class UPlatformInterfaceWebResponse : public UObject
	{
	public:
		class FString                                              OriginalURL;                                             // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ResponseCode;                                            // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Tag;                                                     // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StringResponse;                                          // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<unsigned char>                                      BinaryResponse;                                          // 0x0058(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YT7Z[0x50];                                  // 0x0068(0x0050) MISSED OFFSET (PADDING)

	public:
		int32_t GetNumHeaders();
		class FString GetHeaderValue(const class FString& HeaderName);
		void GetHeader(int32_t HeaderIndex, class FString* Header, class FString* value);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PlayerInput
	 * Size -> 0x0380 (FullSize[0x03B0] - InheritedSize[0x0030])
	 */
	class UPlayerInput : public UObject
	{
	public:
		unsigned char                                              UnknownData_6R4Z[0xF8];                                  // 0x0030(0x00F8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FKeyBind>                                    DebugExecBindings;                                       // 0x0128(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_58XR[0x10];                                  // 0x0138(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FInputActionKeyMapping>                      ActionMappings;                                          // 0x0148(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<struct FInputAxisKeyMapping>                        AxisMappings;                                            // 0x0158(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<class FName>                                        InvertedAxis;                                            // 0x0168(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QBX0[0x238];                                 // 0x0178(0x0238) MISSED OFFSET (PADDING)

	public:
		void SetMouseSensitivity(float Sensitivity);
		void SetBind(const class FName& BindName, const class FString& Command);
		void InvertAxisKey(const struct FKey& AxisKey);
		void InvertAxis(const class FName& AxisName);
		void ClearSmoothing();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PlayerStartPIE
	 * Size -> 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
	 */
	class APlayerStartPIE : public APlayerStart
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PluginCommandlet
	 * Size -> 0x0020 (FullSize[0x00A8] - InheritedSize[0x0088])
	 */
	class UPluginCommandlet : public UCommandlet
	{
	public:
		unsigned char                                              UnknownData_AGZG[0x20];                                  // 0x0088(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PointLight
	 * Size -> 0x0008 (FullSize[0x0248] - InheritedSize[0x0240])
	 */
	class APointLight : public ALight
	{
	public:
		class UPointLightComponent*                                PointLightComponent;                                     // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SetRadius(float NewRadius);
		void SetLightFalloffExponent(float NewLightFalloffExponent);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Polys
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UPolys : public UObject
	{
	public:
		unsigned char                                              UnknownData_6H2B[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PoseableMeshComponent
	 * Size -> 0x0160 (FullSize[0x08A0] - InheritedSize[0x0740])
	 */
	class UPoseableMeshComponent : public USkinnedMeshComponent
	{
	public:
		unsigned char                                              UnknownData_UWBN[0x160];                                 // 0x0740(0x0160) MISSED OFFSET (PADDING)

	public:
		void SetBoneTransformByName(const class FName& BoneName, const struct FTransform& InTransform, EBoneSpaces BoneSpace);
		void SetBoneScaleByName(const class FName& BoneName, const struct FVector& InScale3D, EBoneSpaces BoneSpace);
		void SetBoneRotationByName(const class FName& BoneName, const struct FRotator& InRotation, EBoneSpaces BoneSpace);
		void SetBoneLocationByName(const class FName& BoneName, const struct FVector& InLocation, EBoneSpaces BoneSpace);
		void ResetBoneTransformByName(const class FName& BoneName);
		struct FTransform GetBoneTransformByName(const class FName& BoneName, EBoneSpaces BoneSpace);
		struct FVector GetBoneScaleByName(const class FName& BoneName, EBoneSpaces BoneSpace);
		struct FRotator GetBoneRotationByName(const class FName& BoneName, EBoneSpaces BoneSpace);
		struct FVector GetBoneLocationByName(const class FName& BoneName, EBoneSpaces BoneSpace);
		void CopyPoseFromSkeletalComponent(class USkeletalMeshComponent* InComponentToCopy);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PoseAsset
	 * Size -> 0x00B8 (FullSize[0x0140] - InheritedSize[0x0088])
	 */
	class UPoseAsset : public UAnimationAsset
	{
	public:
		struct FPoseDataContainer                                  PoseContainer;                                           // 0x0088(0x0090) NativeAccessSpecifierPrivate
		bool                                                       bAdditivePose;                                           // 0x0118(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9NK2[0x3];                                   // 0x0119(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BasePoseIndex;                                           // 0x011C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                RetargetSource;                                          // 0x0120(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2IK8[0x4];                                   // 0x012C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTransform>                                  RetargetSourceAssetReferencePose;                        // 0x0130(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PoseWatch
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UPoseWatch : public UObject
	{
	public:
		class UEdGraphNode*                                        Node;                                                    // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              PoseWatchColour;                                         // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9SX8[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PostProcessComponent
	 * Size -> 0x0570 (FullSize[0x0790] - InheritedSize[0x0220])
	 */
	class UPostProcessComponent : public USceneComponent
	{
	public:
		struct FPostProcessSettings                                Settings;                                                // 0x0220(0x0560) Edit, BlueprintVisible, Interp, NativeAccessSpecifierPublic
		float                                                      Priority;                                                // 0x0780(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendRadius;                                             // 0x0784(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendWeight;                                             // 0x0788(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnabled : 1;                                            // 0x078C(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUnbound : 1;                                            // 0x078C(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N4ID[0x3];                                   // 0x078D(0x0003) MISSED OFFSET (PADDING)

	public:
		void AddOrUpdateBlendable(float InWeight);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PostProcessVolume
	 * Size -> 0x0578 (FullSize[0x07E0] - InheritedSize[0x0268])
	 */
	class APostProcessVolume : public AVolume
	{
	public:
		unsigned char                                              UnknownData_ZFBT[0x8];                                   // 0x0268(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPostProcessSettings                                Settings;                                                // 0x0270(0x0560) Edit, BlueprintVisible, Interp, NativeAccessSpecifierPublic
		float                                                      Priority;                                                // 0x07D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendRadius;                                             // 0x07D4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendWeight;                                             // 0x07D8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnabled : 1;                                            // 0x07DC(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUnbound : 1;                                            // 0x07DC(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P7ZR[0x3];                                   // 0x07DD(0x0003) MISSED OFFSET (PADDING)

	public:
		void AddOrUpdateBlendable(float InWeight);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PrecomputedVisibilityOverrideVolume
	 * Size -> 0x0030 (FullSize[0x0298] - InheritedSize[0x0268])
	 */
	class APrecomputedVisibilityOverrideVolume : public AVolume
	{
	public:
		TArray<class AActor*>                                      OverrideVisibleActors;                                   // 0x0268(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      OverrideInvisibleActors;                                 // 0x0278(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        OverrideInvisibleLevels;                                 // 0x0288(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PrecomputedVisibilityVolume
	 * Size -> 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
	 */
	class APrecomputedVisibilityVolume : public AVolume
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PreviewCollectionInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UPreviewCollectionInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PreviewMeshCollection
	 * Size -> 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
	 */
	class UPreviewMeshCollection : public UDataAsset
	{
	public:
		unsigned char                                              UnknownData_E9ZJ[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeleton*                                           Skeleton;                                                // 0x0040(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FPreviewMeshCollectionEntry>                 SkeletalMeshes;                                          // 0x0048(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.PrimaryAssetLabel
	 * Size -> 0x0040 (FullSize[0x0078] - InheritedSize[0x0038])
	 */
	class UPrimaryAssetLabel : public UPrimaryDataAsset
	{
	public:
		struct FPrimaryAssetRules                                  Rules;                                                   // 0x0038(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bLabelAssetsInMyDirectory : 1;                           // 0x0044(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsRuntimeLabel : 1;                                     // 0x0044(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KNTI[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ExplicitAssets[0x10];                                    // 0x0045(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              ExplicitBlueprints[0x10];                                // 0x0058(0x0010) UNKNOWN PROPERTY: ArrayProperty
		struct FCollectionReference                                AssetCollection;                                         // 0x0068(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IX21[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ProxyLODMeshSimplificationSettings
	 * Size -> 0x0010 (FullSize[0x0058] - InheritedSize[0x0048])
	 */
	class UProxyLODMeshSimplificationSettings : public UDeveloperSettings
	{
	public:
		class FName                                                ProxyLODMeshReductionModuleName;                         // 0x0048(0x000C) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1RU5[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.RadialForceActor
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class ARadialForceActor : public ARigidBodyBase
	{
	public:
		class URadialForceComponent*                               ForceComponent;                                          // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void ToggleForce();
		void FireImpulse();
		void EnableForce();
		void DisableForce();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.RadialForceComponent
	 * Size -> 0x0030 (FullSize[0x0250] - InheritedSize[0x0220])
	 */
	class URadialForceComponent : public USceneComponent
	{
	public:
		float                                                      ImpulseStrength;                                         // 0x0220(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bImpulseVelChange : 1;                                   // 0x0224(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreOwningActor : 1;                                  // 0x0224(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XFJM[0x3];                                   // 0x0225(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ForceStrength;                                           // 0x0228(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DestructibleDamage;                                      // 0x022C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<EObjectTypeQuery>                                   ObjectTypesToAffect;                                     // 0x0230(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_5OT2[0x10];                                  // 0x0240(0x0010) MISSED OFFSET (PADDING)

	public:
		void RemoveObjectTypeToAffect(EObjectTypeQuery ObjectType);
		void FireImpulse();
		void AddObjectTypeToAffect(EObjectTypeQuery ObjectType);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.RectLight
	 * Size -> 0x0008 (FullSize[0x0248] - InheritedSize[0x0240])
	 */
	class ARectLight : public ALight
	{
	public:
		class URectLightComponent*                                 RectLightComponent;                                      // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.RectLightComponent
	 * Size -> 0x0020 (FullSize[0x03D0] - InheritedSize[0x03B0])
	 */
	class URectLightComponent : public ULocalLightComponent
	{
	public:
		float                                                      SourceWidth;                                             // 0x03B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SourceHeight;                                            // 0x03B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BarnDoorAngle;                                           // 0x03B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BarnDoorLength;                                          // 0x03BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture*                                            SourceTexture;                                           // 0x03C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8T7L[0x8];                                   // 0x03C8(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetSourceWidth(float bNewValue);
		void SetSourceTexture(class UTexture* bNewValue);
		void SetSourceHeight(float NewValue);
		void SetBarnDoorLength(float NewValue);
		void SetBarnDoorAngle(float NewValue);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.RendererSettings
	 * Size -> 0x0128 (FullSize[0x0170] - InheritedSize[0x0048])
	 */
	class URendererSettings : public UDeveloperSettings
	{
	public:
		unsigned char                                              bMobileDisableVertexFog : 1;                             // 0x0048(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H12W[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxMobileCascades;                                       // 0x004C(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMobileMSAASampleCount                                     MobileMSAASampleCount;                                   // 0x0050(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MPNW[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bMobileAllowDitheredLODTransition : 1;                   // 0x0054(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMobileAllowSoftwareOcclusionCulling : 1;                // 0x0054(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMobileVirtualTextures : 1;                              // 0x0054(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDiscardUnusedQualityLevels : 1;                         // 0x0054(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOcclusionCulling : 1;                                   // 0x0054(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EBF3[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinScreenRadiusForLights;                                // 0x0058(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinScreenRadiusForEarlyZPass;                            // 0x005C(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinScreenRadiusForCSMdepth;                              // 0x0060(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPrecomputedVisibilityWarning : 1;                       // 0x0064(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTextureStreaming : 1;                                   // 0x0064(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseDXT5NormalMaps : 1;                                  // 0x0064(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bVirtualTextures : 1;                                    // 0x0064(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bVirtualTextureEnableAutoImport : 1;                     // 0x0064(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bVirtualTexturedLightmaps : 1;                           // 0x0064(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VCYB[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   VirtualTextureTileSize;                                  // 0x0068(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   VirtualTextureTileBorderSize;                            // 0x006C(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   VirtualTextureFeedbackFactor;                            // 0x0070(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bVirtualTextureEnableCompressZlib : 1;                   // 0x0074(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bVirtualTextureEnableCompressCrunch : 1;                 // 0x0074(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bClearCoatEnableSecondNormal : 1;                        // 0x0074(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2BC7[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ReflectionCaptureResolution;                             // 0x0078(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bReflectionCaptureCompression : 1;                       // 0x007C(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ReflectionEnvironmentLightmapMixBasedOnRoughness : 1;    // 0x007C(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForwardShading : 1;                                     // 0x007C(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bVertexFoggingForOpaque : 1;                             // 0x007C(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAllowStaticLighting : 1;                                // 0x007C(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseNormalMapsForStaticLighting : 1;                     // 0x007C(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bGenerateMeshDistanceFields : 1;                         // 0x007C(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEightBitMeshDistanceFields : 1;                         // 0x007C(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bGenerateLandscapeGIData : 1;                            // 0x007D(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCompressMeshDistanceFields : 1;                         // 0x007D(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4P2A[0x2];                                   // 0x007E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TessellationAdaptivePixelsPerTriangle;                   // 0x0080(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSeparateTranslucency : 1;                               // 0x0084(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D7WU[0x3];                                   // 0x0085(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ETranslucentSortPolicy                                     TranslucentSortPolicy;                                   // 0x0088(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FTD3[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             TranslucentSortAxis;                                     // 0x008C(0x000C) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFixedFoveationLevels                                      HMDFixedFoveationLevel;                                  // 0x0098(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECustomDepthStencil                                        CustomDepthStencil;                                      // 0x0099(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2B4R[0x2];                                   // 0x009A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bCustomDepthTaaJitter : 1;                               // 0x009C(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H9EE[0x3];                                   // 0x009D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EAlphaChannelMode                                          bEnableAlphaChannelInPostProcessing;                     // 0x00A0(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XYKU[0x3];                                   // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bDefaultFeatureBloom : 1;                                // 0x00A4(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDefaultFeatureAmbientOcclusion : 1;                     // 0x00A4(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDefaultFeatureAmbientOcclusionStaticFraction : 1;       // 0x00A4(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDefaultFeatureAutoExposure : 1;                         // 0x00A4(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HVEZ[0x3];                                   // 0x00A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EAutoExposureMethodUI                                      DefaultFeatureAutoExposure;                              // 0x00A8(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AW27[0x3];                                   // 0x00A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefaultFeatureAutoExposureBias;                          // 0x00AC(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bExtendDefaultLuminanceRangeInAutoExposureSettings : 1;  // 0x00B0(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsePreExposure : 1;                                     // 0x00B0(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnablePreExposureOnlyInTheEditor : 1;                   // 0x00B0(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDefaultFeatureMotionBlur : 1;                           // 0x00B0(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDefaultFeatureLensFlare : 1;                            // 0x00B0(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTemporalUpsampling : 1;                                 // 0x00B0(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSSGI : 1;                                               // 0x00B0(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QNDZ[0x3];                                   // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EAntiAliasingMethod                                        DefaultFeatureAntiAliasing;                              // 0x00B4(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELightUnits                                                DefaultLightUnits;                                       // 0x00B5(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDefaultBackBufferPixelFormat                              DefaultBackBufferPixelFormat;                            // 0x00B6(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UQXT[0x1];                                   // 0x00B7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bRenderUnbuiltPreviewShadowsInGame : 1;                  // 0x00B8(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bStencilForLODDither : 1;                                // 0x00B8(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SKPI[0x3];                                   // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EEarlyZPass                                                EarlyZPass;                                              // 0x00BC(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QQ3R[0x3];                                   // 0x00BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bEarlyZPassOnlyMaterialMasking : 1;                      // 0x00C0(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDBuffer : 1;                                            // 0x00C0(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JG8S[0x3];                                   // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EClearSceneOptions                                         ClearSceneMethod;                                        // 0x00C4(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O4IK[0x3];                                   // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bBasePassOutputsVelocity : 1;                            // 0x00C8(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bVertexDeformationOutputsVelocity : 1;                   // 0x00C8(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSelectiveBasePassOutputs : 1;                           // 0x00C8(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDefaultParticleCutouts : 1;                             // 0x00C8(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IE6A[0x3];                                   // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    GPUSimulationTextureSizeX;                               // 0x00CC(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GPUSimulationTextureSizeY;                               // 0x00D0(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bGlobalClipPlane : 1;                                    // 0x00D4(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KQHO[0x3];                                   // 0x00D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EGBufferFormat                                             GBufferFormat;                                           // 0x00D8(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z3I1[0x3];                                   // 0x00D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bUseGPUMorphTargets : 1;                                 // 0x00DC(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNvidiaAftermathEnabled : 1;                             // 0x00DC(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMultiView : 1;                                          // 0x00DC(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMobilePostProcessing : 1;                               // 0x00DC(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMobileMultiView : 1;                                    // 0x00DC(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMobileUseHWsRGBEncoding : 1;                            // 0x00DC(0x0001) BIT_FIELD Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRoundRobinOcclusion : 1;                                // 0x00DC(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bODSCapture : 1;                                         // 0x00DC(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMeshStreaming : 1;                                      // 0x00DD(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZN5V[0x2];                                   // 0x00DE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      WireframeCullThreshold;                                  // 0x00E0(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableRayTracing : 1;                                   // 0x00E4(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableRayTracingTextureLOD : 1;                         // 0x00E4(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupportStationarySkylight : 1;                          // 0x00E4(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupportLowQualityLightmaps : 1;                         // 0x00E4(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupportPointLightWholeSceneShadows : 1;                 // 0x00E4(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupportAtmosphericFog : 1;                              // 0x00E4(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupportSkyAtmosphere : 1;                               // 0x00E4(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupportSkyAtmosphereAffectsHeightFog : 1;               // 0x00E4(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupportSkinCacheShaders : 1;                            // 0x00E5(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UAVT[0x2];                                   // 0x00E6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESkinCacheDefaultBehavior                                  DefaultSkinCacheBehavior;                                // 0x00E8(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AHIE[0x3];                                   // 0x00E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SkinCacheSceneMemoryLimitInMB;                           // 0x00EC(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMobileEnableStaticAndCSMShadowReceivers : 1;            // 0x00F0(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMobileEnableMovableLightCSMShaderCulling : 1;           // 0x00F0(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMobileAllowDistanceFieldShadows : 1;                    // 0x00F0(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMobileAllowMovableDirectionalLights : 1;                // 0x00F0(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XX3U[0x3];                                   // 0x00F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   MobileNumDynamicPointLights;                             // 0x00F4(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMobileDynamicPointLightsUseStaticBranch : 1;            // 0x00F8(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMobileAllowMovableSpotlights : 1;                       // 0x00F8(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMobileAllowMovableSpotlightShadows : 1;                 // 0x00F8(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupport16BitBoneIndex : 1;                              // 0x00F8(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bGPUSkinLimit2BoneInfluences : 1;                        // 0x00F8(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupportDepthOnlyIndexBuffers : 1;                       // 0x00F8(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupportReversedIndexBuffers : 1;                        // 0x00F8(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLPV : 1;                                                // 0x00F8(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMobileAmbientOcclusion : 1;                             // 0x00F9(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseUnlimitedBoneInfluences : 1;                         // 0x00F9(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DHN5[0x2];                                   // 0x00FA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UnlimitedBonInfluencesThreshold;                         // 0x00FC(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPerPlatformInt                                     MaxSkinBones;                                            // 0x0100(0x0004) Edit, Config, NoDestructor, NativeAccessSpecifierPublic
		EMobilePlanarReflectionMode                                MobilePlanarReflectionMode;                              // 0x0104(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X97S[0x3];                                   // 0x0105(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bMobileSupportsGen4TAA : 1;                              // 0x0108(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N1ZR[0x3];                                   // 0x0109(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPerPlatformBool                                    bStreamSkeletalMeshLODs;                                 // 0x010C(0x0001) Edit, Config, NoDestructor, NativeAccessSpecifierPublic
		struct FPerPlatformBool                                    bDiscardSkeletalMeshOptionalLODs;                        // 0x010D(0x0001) Edit, Config, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SHKR[0x2];                                   // 0x010E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     VisualizeCalibrationColorMaterialPath;                   // 0x0110(0x0020) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     VisualizeCalibrationCustomMaterialPath;                  // 0x0130(0x0020) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     VisualizeCalibrationGrayscaleMaterialPath;               // 0x0150(0x0020) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.RendererOverrideSettings
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	class URendererOverrideSettings : public UDeveloperSettings
	{
	public:
		unsigned char                                              bSupportAllShaderPermutations : 1;                       // 0x0048(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceRecomputeTangents : 1;                             // 0x0048(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P01S[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ReplayNetConnection
	 * Size -> 0x0800 (FullSize[0x23C8] - InheritedSize[0x1BC8])
	 */
	class UReplayNetConnection : public UNetConnection
	{
	public:
		unsigned char                                              UnknownData_9I49[0x800];                                 // 0x1BC8(0x0800) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ReplaySubsystem
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UReplaySubsystem : public UGameInstanceSubsystem
	{
	public:
		bool                                                       bLoadDefaultMapOnStop;                                   // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9ZB6[0xF];                                   // 0x0039(0x000F) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ReplicationDriver
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UReplicationDriver : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ReplicationConnectionDriver
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UReplicationConnectionDriver : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ReporterBase
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UReporterBase : public UObject
	{
	public:
		unsigned char                                              UnknownData_8KJY[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ReporterGraph
	 * Size -> 0x0078 (FullSize[0x00B0] - InheritedSize[0x0038])
	 */
	class UReporterGraph : public UReporterBase
	{
	public:
		unsigned char                                              UnknownData_MUEX[0x78];                                  // 0x0038(0x0078) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ReverbEffect
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	class UReverbEffect : public UObject
	{
	public:
		bool                                                       bBypassEarlyReflections;                                 // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J6R2[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ReflectionsDelay;                                        // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GainHF;                                                  // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReflectionsGain;                                         // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBypassLateReflections;                                  // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OVVB[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LateDelay;                                               // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DecayTime;                                               // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Density;                                                 // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Diffusion;                                               // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AirAbsorptionGainHF;                                     // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DecayHFRatio;                                            // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LateGain;                                                // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Gain;                                                    // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoomRolloffFactor;                                       // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Rig
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class URig : public UObject
	{
	public:
		unsigned char                                              UnknownData_JZKI[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTransformBase>                              TransformBases;                                          // 0x0038(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FNode>                                       Nodes;                                                   // 0x0048(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.RotatingMovementComponent
	 * Size -> 0x0020 (FullSize[0x0118] - InheritedSize[0x00F8])
	 */
	class URotatingMovementComponent : public UMovementComponent
	{
	public:
		struct FRotator                                            RotationRate;                                            // 0x00F8(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             PivotTranslation;                                        // 0x0104(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRotationInLocalSpace : 1;                               // 0x0110(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LY52[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.RuntimeOptionsBase
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class URuntimeOptionsBase : public UObject
	{
	public:
		unsigned char                                              UnknownData_ID3E[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.RuntimeVirtualTexture
	 * Size -> 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
	 */
	class URuntimeVirtualTexture : public UObject
	{
	public:
		int32_t                                                    TileCount;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    TileSize;                                                // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    TileBorderSize;                                          // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ERuntimeVirtualTextureMaterialType                         MaterialType;                                            // 0x003C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bCompressTextures;                                       // 0x003D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bClearTextures;                                          // 0x003E(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bSinglePhysicalSpace;                                    // 0x003F(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bPrivateSpace;                                           // 0x0040(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bAdaptive;                                               // 0x0041(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bContinuousUpdate;                                       // 0x0042(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_EVCD[0x1];                                   // 0x0043(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RemoveLowMips;                                           // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ETextureGroup                                              LODGroup;                                                // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_I9D3[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Size;                                                    // 0x004C(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class URuntimeVirtualTextureStreamingProxy*                StreamingTexture;                                        // 0x0050(0x0008) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_JVSN[0x48];                                  // 0x0058(0x0048) MISSED OFFSET (PADDING)

	public:
		int32_t GetTileSize();
		int32_t GetTileCount();
		int32_t GetTileBorderSize();
		int32_t GetSize();
		int32_t GetPageTableSize();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.RuntimeVirtualTextureComponent
	 * Size -> 0x0080 (FullSize[0x02A0] - InheritedSize[0x0220])
	 */
	class URuntimeVirtualTextureComponent : public USceneComponent
	{
	public:
		unsigned char                                              BoundsAlignActor[0x30];                                  // 0x0220(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bSetBoundsButton;                                        // 0x0248(0x0001) Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bSnapBoundsToLandscape;                                  // 0x0249(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_CBKL[0x6];                                   // 0x024A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URuntimeVirtualTexture*                              VirtualTexture;                                          // 0x0250(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bEnableScalability;                                      // 0x0258(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_AQFX[0x3];                                   // 0x0259(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   ScalabilityGroup;                                        // 0x025C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHidePrimitives;                                         // 0x0260(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_W3L0[0x7];                                   // 0x0261(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UVirtualTextureBuilder*                              StreamingTexture;                                        // 0x0268(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    StreamLowMips;                                           // 0x0270(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bBuildStreamingMipsButton;                               // 0x0274(0x0001) Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bEnableCompressCrunch;                                   // 0x0275(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bUseStreamingLowMipsInEditor;                            // 0x0276(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bBuildDebugStreamingMips;                                // 0x0277(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_YK0O[0x28];                                  // 0x0278(0x0028) MISSED OFFSET (PADDING)

	public:
		void Invalidate(const struct FBoxSphereBounds& WorldBounds);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.RuntimeVirtualTextureVolume
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class ARuntimeVirtualTextureVolume : public AActor
	{
	public:
		class URuntimeVirtualTextureComponent*                     VirtualTextureComponent;                                 // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.RVOAvoidanceInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class URVOAvoidanceInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Scene
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UScene : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SceneCapture2D
	 * Size -> 0x0008 (FullSize[0x0248] - InheritedSize[0x0240])
	 */
	class ASceneCapture2D : public ASceneCapture
	{
	public:
		class USceneCaptureComponent2D*                            CaptureComponent2D;                                      // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void OnInterpToggle(bool bEnable);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SceneCaptureComponent2D
	 * Size -> 0x0610 (FullSize[0x08E0] - InheritedSize[0x02D0])
	 */
	class USceneCaptureComponent2D : public USceneCaptureComponent
	{
	public:
		ECameraProjectionMode                                      ProjectionType;                                          // 0x02D0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FU5Z[0x3];                                   // 0x02D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FOVAngle;                                                // 0x02D4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OrthoWidth;                                              // 0x02D8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K47Y[0x4];                                   // 0x02DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTextureRenderTarget2D*                              TextureTarget;                                           // 0x02E0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESceneCaptureCompositeMode                                 CompositeMode;                                           // 0x02E8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HJJX[0x7];                                   // 0x02E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPostProcessSettings                                PostProcessSettings;                                     // 0x02F0(0x0560) Edit, BlueprintVisible, Interp, NativeAccessSpecifierPublic
		float                                                      PostProcessBlendWeight;                                  // 0x0850(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CustomNearClippingPlane : 1;                   // 0x0854(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NH56[0x3];                                   // 0x0855(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CustomNearClippingPlane;                                 // 0x0858(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseCustomProjectionMatrix;                              // 0x085C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HET0[0x3];                                   // 0x085D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMatrix                                             CustomProjectionMatrix;                                  // 0x0860(0x0040) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic
		bool                                                       bEnableClipPlane;                                        // 0x08A0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PIAX[0x3];                                   // 0x08A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             ClipPlaneBase;                                           // 0x08A4(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ClipPlaneNormal;                                         // 0x08B0(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCameraCutThisFrame : 1;                                 // 0x08BC(0x0001) BIT_FIELD BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bConsiderUnrenderedOpaquePixelAsFullyTranslucent : 1;    // 0x08BC(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y9EN[0x3];                                   // 0x08BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bDisableFlipCopyGLES;                                    // 0x08C0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ST6F[0x1F];                                  // 0x08C1(0x001F) MISSED OFFSET (PADDING)

	public:
		void RemoveBlendable();
		void CaptureScene();
		void AddOrUpdateBlendable(float InWeight);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SceneCaptureComponentCube
	 * Size -> 0x0030 (FullSize[0x0300] - InheritedSize[0x02D0])
	 */
	class USceneCaptureComponentCube : public USceneCaptureComponent
	{
	public:
		class UTextureRenderTargetCube*                            TextureTarget;                                           // 0x02D0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCaptureRotation;                                        // 0x02D8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HA0C[0x7];                                   // 0x02D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTextureRenderTargetCube*                            TextureTargetLeft;                                       // 0x02E0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTextureRenderTargetCube*                            TextureTargetRight;                                      // 0x02E8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTextureRenderTarget2D*                              TextureTargetODS;                                        // 0x02F0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IPD;                                                     // 0x02F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VGC6[0x4];                                   // 0x02FC(0x0004) MISSED OFFSET (PADDING)

	public:
		void CaptureScene();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SceneCaptureCube
	 * Size -> 0x0008 (FullSize[0x0248] - InheritedSize[0x0240])
	 */
	class ASceneCaptureCube : public ASceneCapture
	{
	public:
		class USceneCaptureComponentCube*                          CaptureComponentCube;                                    // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void OnInterpToggle(bool bEnable);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SCS_Node
	 * Size -> 0x00C8 (FullSize[0x00F8] - InheritedSize[0x0030])
	 */
	class USCS_Node : public UObject
	{
	public:
		class UClass*                                              ComponentClass;                                          // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UActorComponent*                                     ComponentTemplate;                                       // 0x0038(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBlueprintCookedComponentInstancingData             CookedComponentInstancingData;                           // 0x0040(0x0050) NativeAccessSpecifierPublic
		class FName                                                AttachToName;                                            // 0x0090(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ParentComponentOrVariableName;                           // 0x009C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ParentComponentOwnerClassName;                           // 0x00A8(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsParentComponentNative;                                // 0x00B4(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MPBV[0x3];                                   // 0x00B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class USCS_Node*>                                   ChildNodes;                                              // 0x00B8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FBPVariableMetaDataEntry>                    MetaDataArray;                                           // 0x00C8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FGuid                                               VariableGuid;                                            // 0x00D8(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                InternalVariableName;                                    // 0x00E8(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_KKIT[0x4];                                   // 0x00F4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Selection
	 * Size -> 0x0078 (FullSize[0x00A8] - InheritedSize[0x0030])
	 */
	class USelection : public UObject
	{
	public:
		unsigned char                                              UnknownData_81A7[0x78];                                  // 0x0030(0x0078) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ServerStatReplicator
	 * Size -> 0x00C8 (FullSize[0x02F8] - InheritedSize[0x0230])
	 */
	class AServerStatReplicator : public AInfo
	{
	public:
		bool                                                       bUpdateStatNet;                                          // 0x0230(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverwriteClientStats;                                   // 0x0231(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3E20[0x2];                                   // 0x0232(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   Channels;                                                // 0x0234(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   InRate;                                                  // 0x0238(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   OutRate;                                                 // 0x023C(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V7MW[0x4];                                   // 0x0240(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   MaxPacketOverhead;                                       // 0x0244(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   InRateClientMax;                                         // 0x0248(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   InRateClientMin;                                         // 0x024C(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   InRateClientAvg;                                         // 0x0250(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   InPacketsClientMax;                                      // 0x0254(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   InPacketsClientMin;                                      // 0x0258(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   InPacketsClientAvg;                                      // 0x025C(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   OutRateClientMax;                                        // 0x0260(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   OutRateClientMin;                                        // 0x0264(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   OutRateClientAvg;                                        // 0x0268(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   OutPacketsClientMax;                                     // 0x026C(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   OutPacketsClientMin;                                     // 0x0270(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   OutPacketsClientAvg;                                     // 0x0274(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NetNumClients;                                           // 0x0278(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   InPackets;                                               // 0x027C(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   OutPackets;                                              // 0x0280(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   InBunches;                                               // 0x0284(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   OutBunches;                                              // 0x0288(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   OutLoss;                                                 // 0x028C(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   InLoss;                                                  // 0x0290(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   VoiceBytesSent;                                          // 0x0294(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   VoiceBytesRecv;                                          // 0x0298(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   VoicePacketsSent;                                        // 0x029C(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   VoicePacketsRecv;                                        // 0x02A0(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   PercentInVoice;                                          // 0x02A4(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   PercentOutVoice;                                         // 0x02A8(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NumActorChannels;                                        // 0x02AC(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NumConsideredActors;                                     // 0x02B0(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   PrioritizedActors;                                       // 0x02B4(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NumRelevantActors;                                       // 0x02B8(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NumRelevantDeletedActors;                                // 0x02BC(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NumReplicatedActorAttempts;                              // 0x02C0(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NumReplicatedActors;                                     // 0x02C4(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NumActors;                                               // 0x02C8(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NumNetActors;                                            // 0x02CC(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NumDormantActors;                                        // 0x02D0(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NumInitiallyDormantActors;                               // 0x02D4(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NumNetGUIDsAckd;                                         // 0x02D8(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NumNetGUIDsPending;                                      // 0x02DC(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NumNetGUIDsUnAckd;                                       // 0x02E0(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   ObjPathBytes;                                            // 0x02E4(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NetGUIDOutRate;                                          // 0x02E8(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NetGUIDInRate;                                           // 0x02EC(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NetSaturated;                                            // 0x02F0(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TQXI[0x4];                                   // 0x02F4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ShadowMapTexture2D
	 * Size -> 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
	 */
	class UShadowMapTexture2D : public UTexture2D
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SimpleConstructionScript
	 * Size -> 0x0078 (FullSize[0x00A8] - InheritedSize[0x0030])
	 */
	class USimpleConstructionScript : public UObject
	{
	public:
		TArray<class USCS_Node*>                                   RootNodes;                                               // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class USCS_Node*>                                   AllNodes;                                                // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		class USCS_Node*                                           DefaultSceneRootNode;                                    // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BHUM[0x50];                                  // 0x0058(0x0050) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SkeletalMeshEditorData
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class USkeletalMeshEditorData : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SkeletalMeshLODSettings
	 * Size -> 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
	 */
	class USkeletalMeshLODSettings : public UDataAsset
	{
	public:
		struct FPerPlatformInt                                     MinLOD;                                                  // 0x0038(0x0004) Edit, Config, GlobalConfig, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FPerPlatformBool                                    DisableBelowMinLodStripping;                             // 0x003C(0x0001) Edit, Config, GlobalConfig, NoDestructor, Protected, NativeAccessSpecifierProtected
		bool                                                       bOverrideLODStreamingSettings;                           // 0x003D(0x0001) Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FPerPlatformBool                                    bSupportLODStreaming;                                    // 0x003E(0x0001) Edit, Config, GlobalConfig, NoDestructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_O3LT[0x1];                                   // 0x003F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPerPlatformInt                                     MaxNumStreamedLODs;                                      // 0x0040(0x0004) Edit, Config, GlobalConfig, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FPerPlatformInt                                     MaxNumOptionalLODs;                                      // 0x0044(0x0004) Edit, Config, GlobalConfig, NoDestructor, Protected, NativeAccessSpecifierProtected
		TArray<struct FSkeletalMeshLODGroupSettings>               LODGroups;                                               // 0x0048(0x0010) Edit, ZeroConstructor, Config, GlobalConfig, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SkeletalMeshSimplificationSettings
	 * Size -> 0x0010 (FullSize[0x0058] - InheritedSize[0x0048])
	 */
	class USkeletalMeshSimplificationSettings : public UDeveloperSettings
	{
	public:
		class FName                                                SkeletalMeshReductionModuleName;                         // 0x0048(0x000C) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LC3D[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SkeletalMeshSocket
	 * Size -> 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
	 */
	class USkeletalMeshSocket : public UObject
	{
	public:
		class FName                                                SocketName;                                              // 0x0030(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BoneName;                                                // 0x003C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             RelativeLocation;                                        // 0x0048(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RelativeRotation;                                        // 0x0054(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             RelativeScale;                                           // 0x0060(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceAlwaysAnimated;                                    // 0x006C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GV7Y[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (PADDING)

	public:
		void InitializeSocketFromLocation(class USkeletalMeshComponent* SkelComp, const struct FVector& WorldLocation, const struct FVector& WorldNormal);
		struct FVector GetSocketLocation(class USkeletalMeshComponent* SkelComp);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SkyAtmosphereComponent
	 * Size -> 0x00D0 (FullSize[0x02F0] - InheritedSize[0x0220])
	 */
	class USkyAtmosphereComponent : public USceneComponent
	{
	public:
		float                                                      BottomRadius;                                            // 0x021C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              GroundAlbedo;                                            // 0x0220(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AtmosphereHeight;                                        // 0x0224(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MultiScatteringFactor;                                   // 0x0228(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TraceSampleCountScale;                                   // 0x022C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RayleighScatteringScale;                                 // 0x0230(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        RayleighScattering;                                      // 0x0234(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RayleighExponentialDistribution;                         // 0x0244(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MieScatteringScale;                                      // 0x0248(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        MieScattering;                                           // 0x024C(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MieAbsorptionScale;                                      // 0x025C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        MieAbsorption;                                           // 0x0260(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MieAnisotropy;                                           // 0x0270(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MieExponentialDistribution;                              // 0x0274(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OtherAbsorptionScale;                                    // 0x0278(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        OtherAbsorption;                                         // 0x027C(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTentDistribution                                   OtherTentDistribution;                                   // 0x028C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FLinearColor                                        SkyLuminanceFactor;                                      // 0x0298(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AerialPespectiveViewDistanceScale;                       // 0x02A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HeightFogContribution;                                   // 0x02AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TransmittanceMinLightElevationAngle;                     // 0x02B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AerialPerspectiveStartDepth;                             // 0x02B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BRW6[0x24];                                  // 0x02B8(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               bStaticLightingBuiltGUID;                                // 0x02DC(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_71CK[0x4];                                   // 0x02EC(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetSkyLuminanceFactor(const struct FLinearColor& NewValue);
		void SetRayleighScatteringScale(float NewValue);
		void SetRayleighScattering(const struct FLinearColor& NewValue);
		void SetRayleighExponentialDistribution(float NewValue);
		void SetOtherAbsorptionScale(float NewValue);
		void SetOtherAbsorption(const struct FLinearColor& NewValue);
		void SetMultiScatteringFactor(float NewValue);
		void SetMieScatteringScale(float NewValue);
		void SetMieScattering(const struct FLinearColor& NewValue);
		void SetMieExponentialDistribution(float NewValue);
		void SetMieAnisotropy(float NewValue);
		void SetMieAbsorptionScale(float NewValue);
		void SetMieAbsorption(const struct FLinearColor& NewValue);
		void SetHeightFogContribution(float NewValue);
		void SetAtmosphereHeight(float NewValue);
		void SetAerialPespectiveViewDistanceScale(float NewValue);
		void OverrideAtmosphereLightDirection(int32_t AtmosphereLightIndex, const struct FVector& LightDirection);
		struct FLinearColor GetAtmosphereTransmitanceOnGroundAtPlanetTop(class UDirectionalLightComponent* DirectionalLight);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SkyAtmosphere
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class ASkyAtmosphere : public AInfo
	{
	public:
		class USkyAtmosphereComponent*                             SkyAtmosphereComponent;                                  // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SkyLightComponent
	 * Size -> 0x01D0 (FullSize[0x0440] - InheritedSize[0x0270])
	 */
	class USkyLightComponent : public ULightComponentBase
	{
	public:
		class UTextureCube*                                        Cubemap;                                                 // 0x0270(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SourceCubemapAngle;                                      // 0x0278(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CubemapResolution;                                       // 0x027C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SkyDistanceThreshold;                                    // 0x0280(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCaptureEmissiveOnly;                                    // 0x0284(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLowerHemisphereIsBlack;                                 // 0x0285(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_15VG[0x2];                                   // 0x0286(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        LowerHemisphereColor;                                    // 0x0288(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OcclusionMaxDistance;                                    // 0x0298(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Contrast;                                                // 0x029C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OcclusionExponent;                                       // 0x02A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinOcclusion;                                            // 0x02A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              OcclusionTint;                                           // 0x02A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCloudAmbientOcclusion : 1;                              // 0x02AC(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1SML[0x3];                                   // 0x02AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CloudAmbientOcclusionStrength;                           // 0x02B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CloudAmbientOcclusionExtent;                             // 0x02B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CloudAmbientOcclusionMapResolutionScale;                 // 0x02B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CloudAmbientOcclusionApertureScale;                      // 0x02BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOcclusionCombineMode                                      OcclusionCombineMode;                                    // 0x02C0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bVisibleInReflectionCaptures : 1;                        // 0x02C1(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bBHVRStationaryMode : 1;                                 // 0x02C1(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_47KS[0xA6];                                  // 0x02C2(0x00A6) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTextureCube*                                        BlendDestinationCubemap;                                 // 0x0368(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KXXT[0xD0];                                  // 0x0370(0x00D0) MISSED OFFSET (PADDING)

	public:
		void SetVolumetricScatteringIntensity(float NewIntensity);
		void SetOcclusionTint(const struct FColor& InTint);
		void SetOcclusionExponent(float InOcclusionExponent);
		void SetOcclusionContrast(float InOcclusionContrast);
		void SetMinOcclusion(float InMinOcclusion);
		void SetLowerHemisphereColor(const struct FLinearColor& InLowerHemisphereColor);
		void SetLightColor(const struct FLinearColor& NewLightColor);
		void SetIntensity(float NewIntensity);
		void SetIndirectLightingIntensity(float NewIntensity);
		void SetCubemapBlend(class UTextureCube* SourceCubemap, class UTextureCube* DestinationCubemap, float InBlendFraction);
		void SetCubemap(class UTextureCube* NewCubemap);
		void RecaptureSky();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SlateBrushAsset
	 * Size -> 0x0090 (FullSize[0x00C0] - InheritedSize[0x0030])
	 */
	class USlateBrushAsset : public UObject
	{
	public:
		struct FSlateBrush                                         Brush;                                                   // 0x0030(0x0090) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SlateTextureAtlasInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class USlateTextureAtlasInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SmokeTestCommandlet
	 * Size -> 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
	 */
	class USmokeTestCommandlet : public UCommandlet
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundAttenuation
	 * Size -> 0x03A0 (FullSize[0x03D0] - InheritedSize[0x0030])
	 */
	class USoundAttenuation : public UObject
	{
	public:
		struct FSoundAttenuationSettings                           Attenuation;                                             // 0x0030(0x03A0) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundClass
	 * Size -> 0x00A0 (FullSize[0x00D0] - InheritedSize[0x0030])
	 */
	class USoundClass : public UObject
	{
	public:
		struct FSoundClassProperties                               Properties;                                              // 0x0030(0x0078) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		TArray<class USoundClass*>                                 ChildClasses;                                            // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FPassiveSoundMixModifier>                    PassiveSoundMixModifiers;                                // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class USoundClass*                                         ParentClass;                                             // 0x00C8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundConcurrency
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class USoundConcurrency : public UObject
	{
	public:
		struct FSoundConcurrencySettings                           Concurrency;                                             // 0x0030(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundCue
	 * Size -> 0x03D8 (FullSize[0x0550] - InheritedSize[0x0178])
	 */
	class USoundCue : public USoundBase
	{
	public:
		unsigned char                                              bPrimeOnLoad : 1;                                        // 0x0178(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3F1S[0x7];                                   // 0x0179(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USoundNode*                                          FirstNode;                                               // 0x0180(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VolumeMultiplier;                                        // 0x0188(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchMultiplier;                                         // 0x018C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoundAttenuationSettings                           AttenuationOverrides;                                    // 0x0190(0x03A0) Edit, NativeAccessSpecifierPublic
		float                                                      SubtitlePriority;                                        // 0x0530(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_6O03[0x4];                                   // 0x0534(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bOverrideAttenuation : 1;                                // 0x0538(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bExcludeFromRandomNodeBranchCulling : 1;                 // 0x0538(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4VHF[0x3];                                   // 0x0539(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CookedQualityIndex;                                      // 0x053C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bHasPlayWhenSilent : 1;                                  // 0x0540(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8VDU[0xF];                                   // 0x0541(0x000F) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundEffectSourcePresetChain
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class USoundEffectSourcePresetChain : public UObject
	{
	public:
		TArray<struct FSourceEffectChainEntry>                     chain;                                                   // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bPlayEffectChainTails : 1;                               // 0x0040(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F6AB[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundGroups
	 * Size -> 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
	 */
	class USoundGroups : public UObject
	{
	public:
		TArray<struct FSoundGroup>                                 SoundGroupProfiles;                                      // 0x0030(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AG7M[0x50];                                  // 0x0040(0x0050) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundMix
	 * Size -> 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
	 */
	class USoundMix : public UObject
	{
	public:
		unsigned char                                              bApplyEQ : 1;                                            // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_66Q4[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EQPriority;                                              // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAudioEQEffect                                      EQSettings;                                              // 0x0038(0x0040) Edit, NativeAccessSpecifierPublic
		TArray<struct FSoundClassAdjuster>                         SoundClassEffects;                                       // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      initialDelay;                                            // 0x0088(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FadeInTime;                                              // 0x008C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FadeOutTime;                                             // 0x0094(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNode
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class USoundNode : public UObject
	{
	public:
		TArray<class USoundNode*>                                  ChildNodes;                                              // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0XN1[0x10];                                  // 0x0040(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeAssetReferencer
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class USoundNodeAssetReferencer : public USoundNode
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeAttenuation
	 * Size -> 0x03B0 (FullSize[0x0400] - InheritedSize[0x0050])
	 */
	class USoundNodeAttenuation : public USoundNode
	{
	public:
		class USoundAttenuation*                                   AttenuationSettings;                                     // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoundAttenuationSettings                           AttenuationOverrides;                                    // 0x0058(0x03A0) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideAttenuation : 1;                                // 0x03F8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VQ2I[0x7];                                   // 0x03F9(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeBranch
	 * Size -> 0x0010 (FullSize[0x0060] - InheritedSize[0x0050])
	 */
	class USoundNodeBranch : public USoundNode
	{
	public:
		class FName                                                BoolParameterName;                                       // 0x0050(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3F27[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeConcatenator
	 * Size -> 0x0010 (FullSize[0x0060] - InheritedSize[0x0050])
	 */
	class USoundNodeConcatenator : public USoundNode
	{
	public:
		TArray<float>                                              InputVolume;                                             // 0x0050(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeDelay
	 * Size -> 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
	 */
	class USoundNodeDelay : public USoundNode
	{
	public:
		float                                                      DelayMin;                                                // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DelayMax;                                                // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeDialoguePlayer
	 * Size -> 0x0028 (FullSize[0x0078] - InheritedSize[0x0050])
	 */
	class USoundNodeDialoguePlayer : public USoundNode
	{
	public:
		struct FDialogueWaveParameter                              DialogueWaveParameter;                                   // 0x0050(0x0020) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bLooping : 1;                                            // 0x0070(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1RUJ[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeDistanceCrossFade
	 * Size -> 0x0010 (FullSize[0x0060] - InheritedSize[0x0050])
	 */
	class USoundNodeDistanceCrossFade : public USoundNode
	{
	public:
		TArray<struct FDistanceDatum>                              CrossFadeInput;                                          // 0x0050(0x0010) Edit, ExportObject, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeDoppler
	 * Size -> 0x0010 (FullSize[0x0060] - InheritedSize[0x0050])
	 */
	class USoundNodeDoppler : public USoundNode
	{
	public:
		float                                                      DopplerIntensity;                                        // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseSmoothing;                                           // 0x0054(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7931[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SmoothingInterpSpeed;                                    // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UG5R[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeEnveloper
	 * Size -> 0x0148 (FullSize[0x0198] - InheritedSize[0x0050])
	 */
	class USoundNodeEnveloper : public USoundNode
	{
	public:
		float                                                      LoopStart;                                               // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LoopEnd;                                                 // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DurationAfterLoop;                                       // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LoopCount;                                               // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLoopIndefinitely : 1;                                   // 0x0060(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLoop : 1;                                               // 0x0060(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YHBO[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDistributionFloatConstantCurve*                     VolumeInterpCurve;                                       // 0x0068(0x0008) ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDistributionFloatConstantCurve*                     PitchInterpCurve;                                        // 0x0070(0x0008) ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  VolumeCurve;                                             // 0x0078(0x0088) Edit, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  PitchCurve;                                              // 0x0100(0x0088) Edit, NativeAccessSpecifierPublic
		float                                                      PitchMin;                                                // 0x0188(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchMax;                                                // 0x018C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VolumeMin;                                               // 0x0190(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VolumeMax;                                               // 0x0194(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeGroupControl
	 * Size -> 0x0010 (FullSize[0x0060] - InheritedSize[0x0050])
	 */
	class USoundNodeGroupControl : public USoundNode
	{
	public:
		TArray<int32_t>                                            GroupSizes;                                              // 0x0050(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeLooping
	 * Size -> 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
	 */
	class USoundNodeLooping : public USoundNode
	{
	public:
		int32_t                                                    LoopCount;                                               // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLoopIndefinitely : 1;                                   // 0x0054(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3PNQ[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeMature
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class USoundNodeMature : public USoundNode
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeMixer
	 * Size -> 0x0010 (FullSize[0x0060] - InheritedSize[0x0050])
	 */
	class USoundNodeMixer : public USoundNode
	{
	public:
		TArray<float>                                              InputVolume;                                             // 0x0050(0x0010) Edit, ExportObject, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeModulator
	 * Size -> 0x0010 (FullSize[0x0060] - InheritedSize[0x0050])
	 */
	class USoundNodeModulator : public USoundNode
	{
	public:
		float                                                      PitchMin;                                                // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchMax;                                                // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VolumeMin;                                               // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VolumeMax;                                               // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeModulatorContinuous
	 * Size -> 0x0048 (FullSize[0x0098] - InheritedSize[0x0050])
	 */
	class USoundNodeModulatorContinuous : public USoundNode
	{
	public:
		struct FModulatorContinuousParams                          PitchModulationParams;                                   // 0x0050(0x0024) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FModulatorContinuousParams                          VolumeModulationParams;                                  // 0x0074(0x0024) Edit, NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeOscillator
	 * Size -> 0x0028 (FullSize[0x0078] - InheritedSize[0x0050])
	 */
	class USoundNodeOscillator : public USoundNode
	{
	public:
		unsigned char                                              bModulateVolume : 1;                                     // 0x0050(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bModulatePitch : 1;                                      // 0x0050(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RX5R[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AmplitudeMin;                                            // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AmplitudeMax;                                            // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrequencyMin;                                            // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrequencyMax;                                            // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OffsetMin;                                               // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OffsetMax;                                               // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CenterMin;                                               // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CenterMax;                                               // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_97FV[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeParamCrossFade
	 * Size -> 0x0010 (FullSize[0x0070] - InheritedSize[0x0060])
	 */
	class USoundNodeParamCrossFade : public USoundNodeDistanceCrossFade
	{
	public:
		class FName                                                ParamName;                                               // 0x0060(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UOLN[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeQualityLevel
	 * Size -> 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
	 */
	class USoundNodeQualityLevel : public USoundNode
	{
	public:
		int32_t                                                    CookedQualityLevelIndex;                                 // 0x0050(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JH33[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeRandom
	 * Size -> 0x0030 (FullSize[0x0080] - InheritedSize[0x0050])
	 */
	class USoundNodeRandom : public USoundNode
	{
	public:
		TArray<float>                                              Weights;                                                 // 0x0050(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<bool>                                               HasBeenUsed;                                             // 0x0060(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		int32_t                                                    NumRandomUsed;                                           // 0x0070(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PreselectAtLevelLoad;                                    // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShouldExcludeFromBranchCulling : 1;                     // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSoundCueExcludedFromBranchCulling : 1;                  // 0x0078(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bRandomizeWithoutReplacement : 1;                        // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9S8T[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeSoundClass
	 * Size -> 0x0010 (FullSize[0x0060] - InheritedSize[0x0050])
	 */
	class USoundNodeSoundClass : public USoundNode
	{
	public:
		class USoundClass*                                         SoundClassOverride;                                      // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BWUE[0x8];                                   // 0x0058(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeSwitch
	 * Size -> 0x0010 (FullSize[0x0060] - InheritedSize[0x0050])
	 */
	class USoundNodeSwitch : public USoundNode
	{
	public:
		class FName                                                IntParameterName;                                        // 0x0050(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MIKF[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeWaveParam
	 * Size -> 0x0010 (FullSize[0x0060] - InheritedSize[0x0050])
	 */
	class USoundNodeWaveParam : public USoundNode
	{
	public:
		class FName                                                WaveParameterName;                                       // 0x0050(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_368W[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundNodeWavePlayer
	 * Size -> 0x0048 (FullSize[0x0098] - InheritedSize[0x0050])
	 */
	class USoundNodeWavePlayer : public USoundNodeAssetReferencer
	{
	public:
		unsigned char                                              SoundWaveAssetPtr[0x30];                                 // 0x0050(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
		class USoundWave*                                          SoundWave;                                               // 0x0080(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_7IXJ[0x8];                                   // 0x0088(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bLooping : 1;                                            // 0x0090(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6UXL[0x7];                                   // 0x0091(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundSourceBus
	 * Size -> 0x0018 (FullSize[0x0390] - InheritedSize[0x0378])
	 */
	class USoundSourceBus : public USoundWave
	{
	public:
		ESourceBusChannels                                         SourceBusChannels;                                       // 0x0378(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GAR3[0x3];                                   // 0x0379(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SourceBusDuration;                                       // 0x037C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAudioBus*                                           AudioBus;                                                // 0x0380(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAutoDeactivateWhenSilent : 1;                           // 0x0388(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U6TJ[0x7];                                   // 0x0389(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundSubmixBase
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class USoundSubmixBase : public UObject
	{
	public:
		TArray<class USoundSubmixBase*>                            ChildSubmixes;                                           // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundSubmixWithParentBase
	 * Size -> 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
	 */
	class USoundSubmixWithParentBase : public USoundSubmixBase
	{
	public:
		class USoundSubmixBase*                                    ParentSubmix;                                            // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundSubmix
	 * Size -> 0x0080 (FullSize[0x00C8] - InheritedSize[0x0048])
	 */
	class USoundSubmix : public USoundSubmixWithParentBase
	{
	public:
		unsigned char                                              bMuteWhenBackgrounded : 1;                               // 0x0048(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I63V[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class USoundEffectSubmixPreset*>                    SubmixEffectChain;                                       // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class USoundfieldEncodingSettingsBase*                     AmbisonicsPluginSettings;                                // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnvelopeFollowerAttackTime;                              // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnvelopeFollowerReleaseTime;                             // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGainParamMode                                             GainMode;                                                // 0x0070(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PMNS[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OutputVolume;                                            // 0x0074(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WetLevel;                                                // 0x0078(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DryLevel;                                                // 0x007C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoundModulationDestinationSettings                 OutputVolumeModulation;                                  // 0x0080(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSoundModulationDestinationSettings                 WetLevelModulation;                                      // 0x0090(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSoundModulationDestinationSettings                 DryLevelModulation;                                      // 0x00A0(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSubmixRecordedFileDone;                                // 0x00B0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6R4A[0x8];                                   // 0x00C0(0x0008) MISSED OFFSET (PADDING)

	public:
		void StopSpectralAnalysis(class UObject* WorldContextObject);
		void StopRecordingOutput(class UObject* WorldContextObject, EAudioRecordingExportType ExportType, const class FString& Name, const class FString& Path, class USoundWave* ExistingSoundWaveToOverwrite);
		void StopEnvelopeFollowing(class UObject* WorldContextObject);
		void StartSpectralAnalysis(class UObject* WorldContextObject, EFFTSize FFTSize, EFFTPeakInterpolationMethod InterpolationMethod, EFFTWindowType WindowType, float HopSize, EAudioSpectrumType SpectrumType);
		void StartRecordingOutput(class UObject* WorldContextObject, float ExpectedDuration);
		void StartEnvelopeFollowing(class UObject* WorldContextObject);
		void SetSubmixOutputVolume(class UObject* WorldContextObject, float InOutputVolume);
		void RemoveSpectralAnalysisDelegate(class UObject* WorldContextObject, const class FScriptDelegate& OnSubmixSpectralAnalysisBP);
		void AddSpectralAnalysisDelegate(class UObject* WorldContextObject, TArray<struct FSoundSubmixSpectralAnalysisBandSettings> InBandSettings, const class FScriptDelegate& OnSubmixSpectralAnalysisBP, float UpdateRate, float DecibelNoiseFloor, bool bDoNormalize, bool bDoAutoRange, float AutoRangeAttackTime, float AutoRangeReleaseTime);
		void AddEnvelopeFollowerDelegate(class UObject* WorldContextObject, const class FScriptDelegate& OnSubmixEnvelopeBP);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundfieldSubmix
	 * Size -> 0x0030 (FullSize[0x0078] - InheritedSize[0x0048])
	 */
	class USoundfieldSubmix : public USoundSubmixWithParentBase
	{
	public:
		class FName                                                SoundfieldEncodingFormat;                                // 0x0048(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8XP4[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USoundfieldEncodingSettingsBase*                     EncodingSettings;                                        // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class USoundfieldEffectBase*>                       SoundfieldEffectChain;                                   // 0x0060(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class UClass*                                              EncodingSettingsClass;                                   // 0x0070(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.EndpointSubmix
	 * Size -> 0x0020 (FullSize[0x0060] - InheritedSize[0x0040])
	 */
	class UEndpointSubmix : public USoundSubmixBase
	{
	public:
		class FName                                                EndpointType;                                            // 0x0040(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K90Q[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              EndpointSettingsClass;                                   // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAudioEndpointSettingsBase*                          EndpointSettings;                                        // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SoundfieldEndpointSubmix
	 * Size -> 0x0040 (FullSize[0x0080] - InheritedSize[0x0040])
	 */
	class USoundfieldEndpointSubmix : public USoundSubmixBase
	{
	public:
		class FName                                                SoundfieldEndpointType;                                  // 0x0040(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F1W6[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              EndpointSettingsClass;                                   // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundfieldEndpointSettingsBase*                     EndpointSettings;                                        // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              EncodingSettingsClass;                                   // 0x0060(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundfieldEncodingSettingsBase*                     EncodingSettings;                                        // 0x0068(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class USoundfieldEffectBase*>                       SoundfieldEffectChain;                                   // 0x0070(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SpectatorPawnMovement
	 * Size -> 0x0008 (FullSize[0x0168] - InheritedSize[0x0160])
	 */
	class USpectatorPawnMovement : public UFloatingPawnMovement
	{
	public:
		unsigned char                                              bIgnoreTimeDilation : 1;                                 // 0x0160(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RWS2[0x7];                                   // 0x0161(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SphereReflectionCapture
	 * Size -> 0x0008 (FullSize[0x0240] - InheritedSize[0x0238])
	 */
	class ASphereReflectionCapture : public AReflectionCapture
	{
	public:
		class UDrawSphereComponent*                                DrawCaptureRadius;                                       // 0x0238(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SphereReflectionCaptureComponent
	 * Size -> 0x0010 (FullSize[0x02D0] - InheritedSize[0x02C0])
	 */
	class USphereReflectionCaptureComponent : public UReflectionCaptureComponent
	{
	public:
		float                                                      InfluenceRadius;                                         // 0x02C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CaptureDistanceScale;                                    // 0x02C4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDrawSphereComponent*                                PreviewInfluenceRadius;                                  // 0x02C8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SplineMetadata
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class USplineMetadata : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SplineMeshActor
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class ASplineMeshActor : public AActor
	{
	public:
		class USplineMeshComponent*                                SplineMeshComponent;                                     // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SplineMeshComponent
	 * Size -> 0x00A0 (FullSize[0x05E0] - InheritedSize[0x0540])
	 */
	class USplineMeshComponent : public UStaticMeshComponent
	{
	public:
		unsigned char                                              UnknownData_04AN[0x8];                                   // 0x0540(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSplineMeshParams                                   SplineParams;                                            // 0x0548(0x0058) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             SplineUpDir;                                             // 0x05A0(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SplineBoundaryMin;                                       // 0x05AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               CachedMeshBodySetupGuid;                                 // 0x05B0(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBodySetup*                                          BodySetup;                                               // 0x05C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SplineBoundaryMax;                                       // 0x05C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAllowSplineEditingPerInstance : 1;                      // 0x05CC(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSmoothInterpRollScale : 1;                              // 0x05CC(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMeshDirty : 1;                                          // 0x05CC(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESplineMeshAxis                                            ForwardAxis;                                             // 0x05CD(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HXAP[0x2];                                   // 0x05CE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      VirtualTextureMainPassMaxDrawDistance;                   // 0x05D0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KEQB[0xC];                                   // 0x05D4(0x000C) MISSED OFFSET (PADDING)

	public:
		void UpdateMesh();
		void SetStartTangent(const struct FVector& StartTangent, bool bUpdateMesh);
		void SetStartScale(const struct FVector2D& StartScale, bool bUpdateMesh);
		void SetStartRoll(float StartRoll, bool bUpdateMesh);
		void SetStartPosition(const struct FVector& StartPos, bool bUpdateMesh);
		void SetStartOffset(const struct FVector2D& StartOffset, bool bUpdateMesh);
		void SetStartAndEnd(const struct FVector& StartPos, const struct FVector& StartTangent, const struct FVector& EndPos, const struct FVector& EndTangent, bool bUpdateMesh);
		void SetSplineUpDir(const struct FVector& InSplineUpDir, bool bUpdateMesh);
		void SetForwardAxis(ESplineMeshAxis InForwardAxis, bool bUpdateMesh);
		void SetEndTangent(const struct FVector& EndTangent, bool bUpdateMesh);
		void SetEndScale(const struct FVector2D& EndScale, bool bUpdateMesh);
		void SetEndRoll(float EndRoll, bool bUpdateMesh);
		void SetEndPosition(const struct FVector& EndPos, bool bUpdateMesh);
		void SetEndOffset(const struct FVector2D& EndOffset, bool bUpdateMesh);
		void SetBoundaryMin(float InBoundaryMin, bool bUpdateMesh);
		void SetBoundaryMax(float InBoundaryMax, bool bUpdateMesh);
		struct FVector GetStartTangent();
		struct FVector2D GetStartScale();
		float GetStartRoll();
		struct FVector GetStartPosition();
		struct FVector2D GetStartOffset();
		struct FVector GetSplineUpDir();
		ESplineMeshAxis GetForwardAxis();
		struct FVector GetEndTangent();
		struct FVector2D GetEndScale();
		float GetEndRoll();
		struct FVector GetEndPosition();
		struct FVector2D GetEndOffset();
		float GetBoundaryMin();
		float GetBoundaryMax();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.StaticMesh
	 * Size -> 0x0250 (FullSize[0x02B8] - InheritedSize[0x0068])
	 */
	class UStaticMesh : public UStreamableRenderAsset
	{
	public:
		unsigned char                                              UnknownData_ZP5R[0x20];                                  // 0x0068(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPerPlatformInt                                     MinLOD;                                                  // 0x0088(0x0004) NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bLimitLODRangeForShadow;                                 // 0x008C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WL4S[0x3];                                   // 0x008D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBHVRPerDetailModeInt                               ShadowMinLOD;                                            // 0x0090(0x00A0) NativeAccessSpecifierPublic
		struct FBHVRPerDetailModeInt                               ShadowMaxLOD;                                            // 0x0130(0x00A0) NativeAccessSpecifierPublic
		float                                                      LpvBiasMultiplier;                                       // 0x01D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IH4E[0x4];                                   // 0x01D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FStaticMaterial>                             StaticMaterials;                                         // 0x01D8(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      LightmapUVDensity;                                       // 0x01E8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LightMapResolution;                                      // 0x01EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LightMapCoordinateIndex;                                 // 0x01F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceFieldSelfShadowBias;                             // 0x01F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideComponentDetailMode;                            // 0x01F8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDetailMode                                                DetailMode;                                              // 0x01F9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P8BO[0x2];                                   // 0x01FA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DetailModeBitMask;                                       // 0x01FC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideReceivesDecals;                                 // 0x0200(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReceivesDecals;                                         // 0x0201(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELightmapGenerationMode                                    LightmapGenerationMode;                                  // 0x0202(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B09R[0x1];                                   // 0x0203(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPerPlatformFloat                                   DefaultLDMaxDrawDistance;                                // 0x0204(0x0004) Edit, NoDestructor, NativeAccessSpecifierPublic
		class UBodySetup*                                          BodySetup;                                               // 0x0208(0x0008) Edit, ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LODForCollision;                                         // 0x0210(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bGenerateMeshDistanceField : 1;                          // 0x0214(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bStripComplexCollisionForConsole : 1;                    // 0x0214(0x0001) BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHasNavigationData : 1;                                  // 0x0214(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupportUniformlyDistributedSampling : 1;                // 0x0214(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupportPhysicalMaterialMasks : 1;                       // 0x0214(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupportRayTracing : 1;                                  // 0x0214(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsBuiltAtRuntime : 1;                                   // 0x0214(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBatchingMode                                              BatchingMode;                                            // 0x0215(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4GOY[0x2];                                   // 0x0216(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BatchingDiameter;                                        // 0x0218(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAllowCPUAccess : 1;                                     // 0x021C(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSupportGpuUniformlyDistributedSampling : 1;             // 0x021C(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1TH1[0x23];                                  // 0x021D(0x0023) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UStaticMeshSocket*>                           Sockets;                                                 // 0x0240(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FIKB[0x10];                                  // 0x0250(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             PositiveBoundsExtension;                                 // 0x0260(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             NegativeBoundsExtension;                                 // 0x026C(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBoxSphereBounds                                    ExtendedBounds;                                          // 0x0278(0x001C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    ElementToIgnoreForTexFactor;                             // 0x0294(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UAssetUserData*>                              AssetUserData;                                           // 0x0298(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected
		class UObject*                                             EditableMesh;                                            // 0x02A8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UNavCollisionBase*                                   NavCollision;                                            // 0x02B0(0x0008) Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void UpdateShadowLOD();
		void SetStaticMaterials(TArray<struct FStaticMaterial> InStaticMaterials);
		void RemoveSocket(class UStaticMeshSocket* Socket);
		TArray<struct FStaticMaterial> GetStaticMaterials();
		int32_t GetNumSections(int32_t InLOD);
		int32_t GetNumLODs();
		void GetMinimumLODForPlatforms(TMap<class FName, int32_t>* PlatformMinimumLODs);
		int32_t GetMinimumLODForPlatform(const class FName& PlatformName);
		int32_t GetMaterialIndex(const class FName& MaterialSlotName);
		class UMaterialInterface* GetMaterial(int32_t MaterialIndex);
		struct FBoxSphereBounds GetBounds();
		struct FBox GetBoundingBox();
		class UStaticMeshSocket* FindSocket(const class FName& InSocketName);
		class UStaticMeshDescription* STATIC_CreateStaticMeshDescription(class UObject* Outer);
		void BuildFromStaticMeshDescriptions(TArray<class UStaticMeshDescription*> StaticMeshDescriptions, bool bBuildSimpleCollision);
		void AddSocket(class UStaticMeshSocket* Socket);
		class FName AddMaterial(class UMaterialInterface* Material);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.StaticMeshSocket
	 * Size -> 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
	 */
	class UStaticMeshSocket : public UObject
	{
	public:
		class FName                                                SocketName;                                              // 0x0030(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             RelativeLocation;                                        // 0x003C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RelativeRotation;                                        // 0x0048(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             RelativeScale;                                           // 0x0054(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Tag;                                                     // 0x0060(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.StereoLayerShape
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UStereoLayerShape : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.StereoLayerShapeQuad
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UStereoLayerShapeQuad : public UStereoLayerShape
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.StereoLayerShapeCylinder
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UStereoLayerShapeCylinder : public UStereoLayerShape
	{
	public:
		float                                                      Radius;                                                  // 0x0030(0x0004) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverlayArc;                                              // 0x0034(0x0004) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Height;                                                  // 0x0038(0x0004) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TE7X[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetRadius(float InRadius);
		void SetOverlayArc(float InOverlayArc);
		void SetHeight(int32_t InHeight);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.StereoLayerShapeCubemap
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UStereoLayerShapeCubemap : public UStereoLayerShape
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.StereoLayerShapeEquirect
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	class UStereoLayerShapeEquirect : public UStereoLayerShape
	{
	public:
		struct FBox2D                                              LeftUVRect;                                              // 0x0030(0x0014) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic
		struct FBox2D                                              RightUVRect;                                             // 0x0044(0x0014) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic
		struct FVector2D                                           LeftScale;                                               // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           RightScale;                                              // 0x0060(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           LeftBias;                                                // 0x0068(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           RightBias;                                               // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SetEquirectProps(const struct FEquirectProps& InScaleBiases);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.StereoLayerComponent
	 * Size -> 0x00E0 (FullSize[0x0300] - InheritedSize[0x0220])
	 */
	class UStereoLayerComponent : public USceneComponent
	{
	public:
		class UTexture*                                            Texture;                                                 // 0x0220(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture*                                            LeftTexture;                                             // 0x0228(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bQuadPreserveTextureRatio : 1;                           // 0x0230(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NKLW[0x3];                                   // 0x0231(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           QuadSize;                                                // 0x0234(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FBox2D                                              UVRect;                                                  // 0x023C(0x0014) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, NativeAccessSpecifierProtected
		float                                                      CylinderRadius;                                          // 0x0250(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      CylinderOverlayArc;                                      // 0x0254(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    CylinderHeight;                                          // 0x0258(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FEquirectProps                                      EquirectProps;                                           // 0x025C(0x0048) Deprecated, NoDestructor, Protected, NativeAccessSpecifierProtected
		EStereoLayerType                                           StereoLayerType;                                         // 0x02A4(0x0001) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EStereoLayerShape                                          StereoLayerShape;                                        // 0x02A5(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_AW47[0x2];                                   // 0x02A6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStereoLayerShape*                                   Shape;                                                   // 0x02A8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    Priority;                                                // 0x02B0(0x0004) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_GYCU[0x4C];                                  // 0x02B4(0x004C) MISSED OFFSET (PADDING)

	public:
		void SetUVRect(const struct FBox2D& InUVRect);
		void SetTexture(class UTexture* InTexture);
		void SetQuadSize(const struct FVector2D& InQuadSize);
		void SetPriority(int32_t InPriority);
		void SetLeftTexture(class UTexture* InTexture);
		void SetEquirectProps(const struct FEquirectProps& InScaleBiases);
		void MarkTextureForUpdate();
		struct FBox2D GetUVRect();
		class UTexture* GetTexture();
		struct FVector2D GetQuadSize();
		int32_t GetPriority();
		class UTexture* GetLeftTexture();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.StereoLayerFunctionLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UStereoLayerFunctionLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_ShowSplashScreen();
		void STATIC_SetSplashScreen(class UTexture* Texture, const struct FVector2D& Scale, const struct FVector& Offset, bool bShowLoadingMovie, bool bShowOnSet);
		void STATIC_HideSplashScreen();
		void STATIC_EnableAutoLoadingSplashScreen(bool InAutoShowEnabled);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.StringTable
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UStringTable : public UObject
	{
	public:
		unsigned char                                              UnknownData_JG18[0x20];                                  // 0x0030(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SubsurfaceProfile
	 * Size -> 0x0090 (FullSize[0x00C0] - InheritedSize[0x0030])
	 */
	class USubsurfaceProfile : public UObject
	{
	public:
		struct FSubsurfaceProfileStruct                            Settings;                                                // 0x0030(0x008C) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J6EB[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SubsystemBlueprintLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class USubsystemBlueprintLibrary : public UBlueprintFunctionLibrary
	{
	public:
		class UWorldSubsystem* STATIC_GetWorldSubsystem(class UObject* ContextObject, class UClass* Class);
		class ULocalPlayerSubsystem* STATIC_GetLocalPlayerSubSystemFromPlayerController(class APlayerController* PlayerController, class UClass* Class);
		class ULocalPlayerSubsystem* STATIC_GetLocalPlayerSubsystem(class UObject* ContextObject, class UClass* Class);
		class UGameInstanceSubsystem* STATIC_GetGameInstanceSubsystem(class UObject* ContextObject, class UClass* Class);
		class UEngineSubsystem* STATIC_GetEngineSubsystem(class UClass* Class);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SubUVAnimation
	 * Size -> 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
	 */
	class USubUVAnimation : public UObject
	{
	public:
		class UTexture2D*                                          SubUVTexture;                                            // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubImages_Horizontal;                                    // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubImages_Vertical;                                      // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESubUVBoundingVertexCount                                  BoundingMode;                                            // 0x0040(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOpacitySourceMode                                         OpacitySourceMode;                                       // 0x0041(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YWOK[0x2];                                   // 0x0042(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AlphaThreshold;                                          // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OBO7[0x28];                                  // 0x0048(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.SystemTimeTimecodeProvider
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class USystemTimeTimecodeProvider : public UTimecodeProvider
	{
	public:
		struct FFrameRate                                          FrameRate;                                               // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGenerateFullFrame;                                      // 0x0040(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseHighPerformanceClock;                                // 0x0041(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_87M2[0x6];                                   // 0x0042(0x0006) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TargetPoint
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class ATargetPoint : public AActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TextPropertyTestObject
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	class UTextPropertyTestObject : public UObject
	{
	public:
		class FText                                                DefaultedText;                                           // 0x0030(0x0018) NativeAccessSpecifierPublic
		class FText                                                UndefaultedText;                                         // 0x0048(0x0018) NativeAccessSpecifierPublic
		class FText                                                TransientText;                                           // 0x0060(0x0018) NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TextRenderActor
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class ATextRenderActor : public AActor
	{
	public:
		class UTextRenderComponent*                                TextRender;                                              // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TextRenderComponent
	 * Size -> 0x0050 (FullSize[0x04D0] - InheritedSize[0x0480])
	 */
	class UTextRenderComponent : public UPrimitiveComponent
	{
	public:
		class FText                                                Text;                                                    // 0x0480(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  TextMaterial;                                            // 0x0498(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFont*                                               Font;                                                    // 0x04A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHorizTextAligment                                         HorizontalAlignment;                                     // 0x04A8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVerticalTextAligment                                      VerticalAlignment;                                       // 0x04A9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CZV1[0x2];                                   // 0x04AA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FColor                                              TextRenderColor;                                         // 0x04AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      XScale;                                                  // 0x04B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YScale;                                                  // 0x04B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WorldSize;                                               // 0x04B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InvDefaultSize;                                          // 0x04BC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HorizSpacingAdjust;                                      // 0x04C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VertSpacingAdjust;                                       // 0x04C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAlwaysRenderAsText : 1;                                 // 0x04C8(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6I2Y[0x7];                                   // 0x04C9(0x0007) MISSED OFFSET (PADDING)

	public:
		void SetYScale(float value);
		void SetXScale(float value);
		void SetWorldSize(float value);
		void SetVertSpacingAdjust(float value);
		void SetVerticalAlignment(EVerticalTextAligment value);
		void SetTextRenderColor(const struct FColor& value);
		void SetTextMaterial(class UMaterialInterface* Material);
		void SetText(const class FString& value);
		void SetHorizSpacingAdjust(float value);
		void SetHorizontalAlignment(EHorizTextAligment value);
		void SetFont(class UFont* value);
		void K2_SetText(const class FText& value);
		struct FVector GetTextWorldSize();
		struct FVector GetTextLocalSize();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Texture2DArray
	 * Size -> 0x0060 (FullSize[0x01E0] - InheritedSize[0x0180])
	 */
	class UTexture2DArray : public UTexture
	{
	public:
		unsigned char                                              UnknownData_DYUP[0x50];                                  // 0x0180(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ETextureAddress                                            AddressX;                                                // 0x01D0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETextureAddress                                            AddressY;                                                // 0x01D1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETextureAddress                                            AddressZ;                                                // 0x01D2(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T46O[0xD];                                   // 0x01D3(0x000D) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.Texture2DDynamic
	 * Size -> 0x0010 (FullSize[0x0190] - InheritedSize[0x0180])
	 */
	class UTexture2DDynamic : public UTexture
	{
	public:
		EPixelFormat                                               Format;                                                  // 0x0180(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WXCG[0xF];                                   // 0x0181(0x000F) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TextureLightProfile
	 * Size -> 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
	 */
	class UTextureLightProfile : public UTexture2D
	{
	public:
		float                                                      TextureMultiplier;                                       // 0x01BC(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TextureMipDataProviderFactory
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UTextureMipDataProviderFactory : public UAssetUserData
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TextureRenderTarget2DArray
	 * Size -> 0x0020 (FullSize[0x01A0] - InheritedSize[0x0180])
	 */
	class UTextureRenderTarget2DArray : public UTextureRenderTarget
	{
	public:
		int32_t                                                    SizeX;                                                   // 0x0180(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SizeY;                                                   // 0x0184(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slices;                                                  // 0x0188(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        ClearColor;                                              // 0x018C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPixelFormat                                               OverrideFormat;                                          // 0x019C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHDR : 1;                                                // 0x019D(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceLinearGamma : 1;                                   // 0x019D(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X46V[0x2];                                   // 0x019E(0x0002) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TextureRenderTargetCube
	 * Size -> 0x0020 (FullSize[0x01A0] - InheritedSize[0x0180])
	 */
	class UTextureRenderTargetCube : public UTextureRenderTarget
	{
	public:
		int32_t                                                    SizeX;                                                   // 0x0180(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        ClearColor;                                              // 0x0184(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPixelFormat                                               OverrideFormat;                                          // 0x0194(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHDR : 1;                                                // 0x0195(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceLinearGamma : 1;                                   // 0x0195(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EWWR[0xA];                                   // 0x0196(0x000A) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TextureRenderTargetVolume
	 * Size -> 0x0020 (FullSize[0x01A0] - InheritedSize[0x0180])
	 */
	class UTextureRenderTargetVolume : public UTextureRenderTarget
	{
	public:
		int32_t                                                    SizeX;                                                   // 0x0180(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SizeY;                                                   // 0x0184(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SizeZ;                                                   // 0x0188(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        ClearColor;                                              // 0x018C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPixelFormat                                               OverrideFormat;                                          // 0x019C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHDR : 1;                                                // 0x019D(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceLinearGamma : 1;                                   // 0x019D(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NJUY[0x2];                                   // 0x019E(0x0002) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ThumbnailInfo
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UThumbnailInfo : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TimelineComponent
	 * Size -> 0x00B0 (FullSize[0x0168] - InheritedSize[0x00B8])
	 */
	class UTimelineComponent : public UActorComponent
	{
	public:
		struct FTimeline                                           TheTimeline;                                             // 0x00B8(0x00A8) Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              bIgnoreTimeDilation : 1;                                 // 0x0160(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TJH8[0x7];                                   // 0x0161(0x0007) MISSED OFFSET (PADDING)

	public:
		void Stop();
		void SetVectorCurve(class UCurveVector* NewVectorCurve, const class FName& VectorTrackName);
		void SetTimelineLengthMode(ETimelineLengthMode NewLengthMode);
		void SetTimelineLength(float NewLength);
		void SetPlayRate(float NewRate);
		void SetPlaybackPosition(float NewPosition, bool bFireEvents, bool bFireUpdate);
		void SetNewTime(float NewTime);
		void SetLooping(bool bNewLooping);
		void SetLinearColorCurve(class UCurveLinearColor* NewLinearColorCurve, const class FName& LinearColorTrackName);
		void SetIgnoreTimeDilation(bool bNewIgnoreTimeDilation);
		void SetFloatCurve(class UCurveFloat* NewFloatCurve, const class FName& FloatTrackName);
		void ReverseFromEnd();
		void Reverse();
		void PlayFromStart();
		void Play();
		void OnRep_Timeline();
		bool IsReversing();
		bool IsPlaying();
		bool IsLooping();
		float GetTimelineLength();
		float GetPlayRate();
		float GetPlaybackPosition();
		bool GetIgnoreTimeDilation();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TimelineTemplate
	 * Size -> 0x00A8 (FullSize[0x00D8] - InheritedSize[0x0030])
	 */
	class UTimelineTemplate : public UObject
	{
	public:
		float                                                      TimelineLength;                                          // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETimelineLengthMode                                        LengthMode;                                              // 0x0034(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAutoPlay : 1;                                           // 0x0035(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLoop : 1;                                               // 0x0035(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bReplicated : 1;                                         // 0x0035(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreTimeDilation : 1;                                 // 0x0035(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YEOL[0x2];                                   // 0x0036(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UpdateInterval;                                          // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KXKG[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTTEventTrack>                               EventTracks;                                             // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTTFloatTrack>                               FloatTracks;                                             // 0x0050(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTTVectorTrack>                              VectorTracks;                                            // 0x0060(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTTLinearColorTrack>                         LinearColorTracks;                                       // 0x0070(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FBPVariableMetaDataEntry>                    MetaDataArray;                                           // 0x0080(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FGuid                                               TimelineGuid;                                            // 0x0090(0x0010) ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETickingGroup                                              TimelineTickGroup;                                       // 0x00A0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1O1Q[0x3];                                   // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                VariableName;                                            // 0x00A4(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                DirectionPropertyName;                                   // 0x00B0(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                UpdateFunctionName;                                      // 0x00BC(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                FinishedFunctionName;                                    // 0x00C8(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_J4L8[0x4];                                   // 0x00D4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TireType
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UTireType : public UDataAsset
	{
	public:
		float                                                      FrictionScale;                                           // 0x0038(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W4CT[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TouchInterface
	 * Size -> 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
	 */
	class UTouchInterface : public UObject
	{
	public:
		TArray<struct FTouchInputControl>                          Controls;                                                // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      ActiveOpacity;                                           // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InactiveOpacity;                                         // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeUntilDeactive;                                       // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeUntilReset;                                          // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ActivationDelay;                                         // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPreventRecenter;                                        // 0x0054(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IZ1Y[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StartupDelay;                                            // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DF20[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TriggerBase
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class ATriggerBase : public AActor
	{
	public:
		class UShapeComponent*                                     CollisionComponent;                                      // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TriggerBox
	 * Size -> 0x0000 (FullSize[0x0238] - InheritedSize[0x0238])
	 */
	class ATriggerBox : public ATriggerBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TriggerCapsule
	 * Size -> 0x0000 (FullSize[0x0238] - InheritedSize[0x0238])
	 */
	class ATriggerCapsule : public ATriggerBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TriggerSphere
	 * Size -> 0x0000 (FullSize[0x0238] - InheritedSize[0x0238])
	 */
	class ATriggerSphere : public ATriggerBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TriggerVolume
	 * Size -> 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
	 */
	class ATriggerVolume : public AVolume
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.TwitterIntegrationBase
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	class UTwitterIntegrationBase : public UPlatformInterfaceBase
	{
	public:
		bool TwitterRequest(const class FString& URL, TArray<class FString> ParamKeysAndValues, ETwitterRequestMethod RequestMethod, int32_t AccountIndex);
		bool ShowTweetUI(const class FString& InitialMessage, const class FString& URL, const class FString& Picture);
		void Init();
		int32_t GetNumAccounts();
		class FString GetAccountName(int32_t AccountIndex);
		bool CanShowTweetUI();
		bool AuthorizeAccounts();
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.UserDefinedEnum
	 * Size -> 0x0050 (FullSize[0x00B8] - InheritedSize[0x0068])
	 */
	class UUserDefinedEnum : public UEnum
	{
	public:
		TMap<class FName, class FText>                             DisplayNameMap;                                          // 0x0068(0x0050) NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.UserDefinedStruct
	 * Size -> 0x0048 (FullSize[0x0110] - InheritedSize[0x00C8])
	 */
	class UUserDefinedStruct : public UScriptStruct
	{
	public:
		EUserDefinedStructureStatus                                Status;                                                  // 0x00C8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IUSG[0x3];                                   // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               Guid;                                                    // 0x00CC(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VMI6[0x34];                                  // 0x00DC(0x0034) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.UserInterfaceSettings
	 * Size -> 0x0278 (FullSize[0x02C0] - InheritedSize[0x0048])
	 */
	class UUserInterfaceSettings : public UDeveloperSettings
	{
	public:
		ERenderFocusRule                                           RenderFocusRule;                                         // 0x0048(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HW7Z[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EMouseCursor, struct FHardwareCursorReference>        HardwareCursors;                                         // 0x0050(0x0050) Edit, Config, NativeAccessSpecifierPublic
		TMap<EMouseCursor, struct FSoftClassPath>                  SoftwareCursors;                                         // 0x00A0(0x0050) Edit, Config, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      DefaultCursor;                                           // 0x00F0(0x0020) ZeroConstructor, Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      TextEditBeamCursor;                                      // 0x0110(0x0020) ZeroConstructor, Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      CrosshairsCursor;                                        // 0x0130(0x0020) ZeroConstructor, Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      HandCursor;                                              // 0x0150(0x0020) ZeroConstructor, Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      GrabHandCursor;                                          // 0x0170(0x0020) ZeroConstructor, Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      GrabHandClosedCursor;                                    // 0x0190(0x0020) ZeroConstructor, Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      SlashedCircleCursor;                                     // 0x01B0(0x0020) ZeroConstructor, Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ApplicationScale;                                        // 0x01D0(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EUIScalingRule                                             UIScaleRule;                                             // 0x01D4(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I186[0x3];                                   // 0x01D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftClassPath                                      CustomScalingRuleClass;                                  // 0x01D8(0x0020) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  UIScaleCurve;                                            // 0x01F8(0x0088) Edit, Config, NativeAccessSpecifierPublic
		bool                                                       bAllowHighDPIInGameMode;                                 // 0x0280(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_33AI[0x3];                                   // 0x0281(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FIntPoint                                           DesignScreenSize;                                        // 0x0284(0x0008) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoadWidgetsOnDedicatedServer;                           // 0x028C(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3G0Y[0x3];                                   // 0x028D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UObject*>                                     CursorClasses;                                           // 0x0290(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class UClass*                                              CustomScalingRuleClassInstance;                          // 0x02A0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDPICustomScalingRule*                               CustomScalingRule;                                       // 0x02A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_WTNR[0x10];                                  // 0x02B0(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VectorField
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UVectorField : public UObject
	{
	public:
		struct FBox                                                Bounds;                                                  // 0x0030(0x001C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Intensity;                                               // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VectorFieldAnimated
	 * Size -> 0x0040 (FullSize[0x0090] - InheritedSize[0x0050])
	 */
	class UVectorFieldAnimated : public UVectorField
	{
	public:
		class UTexture2D*                                          Texture;                                                 // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVectorFieldConstructionOp                                 ConstructionOp;                                          // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZFLF[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    VolumeSizeX;                                             // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VolumeSizeY;                                             // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VolumeSizeZ;                                             // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubImagesX;                                              // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubImagesY;                                              // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FrameCount;                                              // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FramesPerSecond;                                         // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLoop : 1;                                               // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U8VK[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UVectorFieldStatic*                                  NoiseField;                                              // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NoiseScale;                                              // 0x0088(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NoiseMax;                                                // 0x008C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VectorFieldComponent
	 * Size -> 0x0030 (FullSize[0x04B0] - InheritedSize[0x0480])
	 */
	class UVectorFieldComponent : public UPrimitiveComponent
	{
	public:
		class UVectorField*                                        VectorField;                                             // 0x0480(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Intensity;                                               // 0x0488(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Tightness;                                               // 0x048C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPreviewVectorField : 1;                                 // 0x0490(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZJ3B[0x1F];                                  // 0x0491(0x001F) MISSED OFFSET (PADDING)

	public:
		void SetIntensity(float NewIntensity);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VectorFieldStatic
	 * Size -> 0x0050 (FullSize[0x00A0] - InheritedSize[0x0050])
	 */
	class UVectorFieldStatic : public UVectorField
	{
	public:
		int32_t                                                    SizeX;                                                   // 0x0050(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SizeY;                                                   // 0x0054(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SizeZ;                                                   // 0x0058(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowCPUAccess;                                         // 0x005C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HI0G[0x43];                                  // 0x005D(0x0043) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VectorFieldVolume
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class AVectorFieldVolume : public AActor
	{
	public:
		class UVectorFieldComponent*                               VectorFieldComponent;                                    // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.ViewportStatsSubsystem
	 * Size -> 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
	 */
	class UViewportStatsSubsystem : public UWorldSubsystem
	{
	public:
		unsigned char                                              UnknownData_WJO0[0x20];                                  // 0x0038(0x0020) MISSED OFFSET (PADDING)

	public:
		void RemoveDisplayDelegate(int32_t IndexToRemove);
		void AddTimedDisplay(const class FText& Text, const struct FLinearColor& Color, float Duration);
		int32_t AddDisplayDelegate(const class FScriptDelegate& Delegate);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VirtualTexture
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UVirtualTexture : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.LightMapVirtualTexture
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class ULightMapVirtualTexture : public UVirtualTexture
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.RuntimeVirtualTextureStreamingProxy
	 * Size -> 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
	 */
	class URuntimeVirtualTextureStreamingProxy : public UTexture2D
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VirtualTexture2D
	 * Size -> 0x0010 (FullSize[0x01D0] - InheritedSize[0x01C0])
	 */
	class UVirtualTexture2D : public UTexture2D
	{
	public:
		struct FVirtualTextureBuildSettings                        Settings;                                                // 0x01B8(0x000C) NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bContinuousUpdate;                                       // 0x01C4(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSinglePhysicalSpace;                                    // 0x01C5(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FIMI[0xA];                                   // 0x01C6(0x000A) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VirtualTextureBuilder
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UVirtualTextureBuilder : public UObject
	{
	public:
		class UVirtualTexture2D*                                   Texture;                                                 // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint64_t                                                   BuildHash;                                               // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VirtualTexturePoolConfig
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UVirtualTexturePoolConfig : public UObject
	{
	public:
		int32_t                                                    DefaultSizeInMegabyte;                                   // 0x0030(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MDNH[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVirtualTextureSpacePoolConfig>              Pools;                                                   // 0x0038(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VisualLoggerAutomationTests
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UVisualLoggerAutomationTests : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VisualLoggerDebugSnapshotInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UVisualLoggerDebugSnapshotInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VisualLoggerKismetLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UVisualLoggerKismetLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_RedirectVislog(class UObject* SourceOwner, class UObject* DestinationOwner);
		void STATIC_LogText(class UObject* WorldContextObject, const class FString& Text, const class FName& LogCategory, bool bAddToMessageLog);
		void STATIC_LogSegment(class UObject* WorldContextObject, const struct FVector& SegmentStart, const struct FVector& SegmentEnd, const class FString& Text, const struct FLinearColor& ObjectColor, float Thickness, const class FName& CategoryName, bool bAddToMessageLog);
		void STATIC_LogLocation(class UObject* WorldContextObject, const struct FVector& Location, const class FString& Text, const struct FLinearColor& ObjectColor, float Radius, const class FName& LogCategory, bool bAddToMessageLog);
		void STATIC_LogBox(class UObject* WorldContextObject, const struct FBox& BoxShape, const class FString& Text, const struct FLinearColor& ObjectColor, const class FName& LogCategory, bool bAddToMessageLog);
		void STATIC_EnableRecording(bool bEnabled);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VoiceChannel
	 * Size -> 0x0010 (FullSize[0x0088] - InheritedSize[0x0078])
	 */
	class UVoiceChannel : public UChannel
	{
	public:
		unsigned char                                              UnknownData_AKSU[0x10];                                  // 0x0078(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VOIPTalker
	 * Size -> 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
	 */
	class UVOIPTalker : public UActorComponent
	{
	public:
		struct FVoiceSettings                                      Settings;                                                // 0x00B8(0x0018) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F5SQ[0x20];                                  // 0x00D0(0x0020) MISSED OFFSET (PADDING)

	public:
		void RegisterWithPlayerState(class APlayerState* OwningState);
		float GetVoiceLevel();
		class UVOIPTalker* STATIC_CreateTalkerForPlayer(class APlayerState* OwningState);
		void BPOnTalkingEnd();
		void BPOnTalkingBegin(class UAudioComponent* AudioComponent);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VOIPStatics
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UVOIPStatics : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_SetMicThreshold(float InThreshold);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VolumeTexture
	 * Size -> 0x0050 (FullSize[0x01D0] - InheritedSize[0x0180])
	 */
	class UVolumeTexture : public UTexture
	{
	public:
		unsigned char                                              UnknownData_82L4[0x50];                                  // 0x0180(0x0050) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VolumetricCloudComponent
	 * Size -> 0x0040 (FullSize[0x0260] - InheritedSize[0x0220])
	 */
	class UVolumetricCloudComponent : public USceneComponent
	{
	public:
		float                                                      LayerHeight;                                             // 0x021C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TracingStartMaxDistance;                                 // 0x0220(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TracingMaxDistance;                                      // 0x0224(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlanetRadius;                                            // 0x0228(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              GroundAlbedo;                                            // 0x022C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  Material;                                                // 0x0230(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUsePerSampleAtmosphericLightTransmittance : 1;          // 0x0238(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JYBU[0x3];                                   // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SkyLightCloudBottomOcclusion;                            // 0x023C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewSampleCountScale;                                    // 0x0240(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReflectionSampleCountScale;                              // 0x0244(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShadowViewSampleCountScale;                              // 0x0248(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShadowReflectionSampleCountScale;                        // 0x024C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShadowTracingDistance;                                   // 0x0250(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StopTracingTransmittanceThreshold;                       // 0x0254(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XSD7[0x8];                                   // 0x0258(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetViewSampleCountScale(float NewValue);
		void SetTracingStartMaxDistance(float NewValue);
		void SetTracingMaxDistance(float NewValue);
		void SetStopTracingTransmittanceThreshold(float NewValue);
		void SetSkyLightCloudBottomOcclusion(float NewValue);
		void SetShadowViewSampleCountScale(float NewValue);
		void SetShadowTracingDistance(float NewValue);
		void SetShadowReflectionSampleCountScale(float NewValue);
		void SetReflectionSampleCountScale(float NewValue);
		void SetPlanetRadius(float NewValue);
		void SetMaterial(class UMaterialInterface* NewValue);
		void SetLayerHeight(float NewValue);
		void SetLayerBottomAltitude(float NewValue);
		void SetGroundAlbedo(const struct FColor& NewValue);
		void SetbUsePerSampleAtmosphericLightTransmittance(bool NewValue);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VolumetricCloud
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class AVolumetricCloud : public AInfo
	{
	public:
		class UVolumetricCloudComponent*                           VolumetricCloudComponent;                                // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.VolumetricLightmapDensityVolume
	 * Size -> 0x0008 (FullSize[0x0270] - InheritedSize[0x0268])
	 */
	class AVolumetricLightmapDensityVolume : public AVolume
	{
	public:
		struct FInt32Interval                                      AllowedMipLevelRange;                                    // 0x0268(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.WindDirectionalSource
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class AWindDirectionalSource : public AInfo
	{
	public:
		class UWindDirectionalSourceComponent*                     Component;                                               // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.WindDirectionalSourceComponent
	 * Size -> 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
	 */
	class UWindDirectionalSourceComponent : public USceneComponent
	{
	public:
		float                                                      Speed;                                                   // 0x021C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinGustAmount;                                           // 0x0220(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxGustAmount;                                           // 0x0224(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0228(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPointWind : 1;                                          // 0x022C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MFPM[0x13];                                  // 0x022D(0x0013) MISSED OFFSET (PADDING)

	public:
		void SetWindType(EWindSourceType InNewType);
		void SetStrength(float InNewStrength);
		void SetSpeed(float InNewSpeed);
		void SetRadius(float InNewRadius);
		void SetMinimumGustAmount(float InNewMinGust);
		void SetMaximumGustAmount(float InNewMaxGust);
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.WorldComposition
	 * Size -> 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
	 */
	class UWorldComposition : public UObject
	{
	public:
		unsigned char                                              UnknownData_YTAD[0x20];                                  // 0x0030(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ULevelStreaming*>                             TilesStreaming;                                          // 0x0050(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		double                                                     TilesStreamingTimeThreshold;                             // 0x0060(0x0008) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoadAllTilesDuringCinematic;                            // 0x0068(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRebaseOriginIn3DSpace;                                  // 0x0069(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6I9C[0x2];                                   // 0x006A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RebaseOriginDistance;                                    // 0x006C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.HierarchicalLODSetup
	 * Size -> 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
	 */
	class UHierarchicalLODSetup : public UObject
	{
	public:
		TArray<struct FHierarchicalSimplification>                 HierarchicalLODSetup;                                    // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              OverrideBaseMaterial[0x30];                              // 0x0040(0x0030) UNKNOWN PROPERTY: SoftObjectProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Engine.WorldSettings
	 * Size -> 0x0180 (FullSize[0x03B0] - InheritedSize[0x0230])
	 */
	class AWorldSettings : public AInfo
	{
	public:
		unsigned char                                              UnknownData_MHD0[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    VisibilityCellSize;                                      // 0x0238(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVisibilityAggressiveness                                  VisibilityAggressiveness;                                // 0x023C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPrecomputeVisibility : 1;                               // 0x023D(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPlaceCellsOnlyAlongCameraTracks : 1;                    // 0x023D(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableWorldBoundsChecks : 1;                            // 0x023D(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableNavigationSystem : 1;                             // 0x023D(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bEnableAISystem : 1;                                     // 0x023D(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableWorldComposition : 1;                             // 0x023D(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseClientSideLevelStreamingVolumes : 1;                 // 0x023D(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableWorldOriginRebasing : 1;                          // 0x023D(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bWorldGravitySet : 1;                                    // 0x023E(0x0001) BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bGlobalGravitySet : 1;                                   // 0x023E(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMinimizeBSPSections : 1;                                // 0x023E(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bForceNoPrecomputedLighting : 1;                         // 0x023E(0x0001) BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHighPriorityLoading : 1;                                // 0x023E(0x0001) BIT_FIELD Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHighPriorityLoadingLocal : 1;                           // 0x023E(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideDefaultBroadphaseSettings : 1;                  // 0x023E(0x0001) BIT_FIELD Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TJ66[0x1];                                   // 0x023F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UNavigationSystemConfig*                             NavigationSystemConfig;                                  // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UNavigationSystemConfig*                             NavigationSystemConfigOverride;                          // 0x0248(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      WorldToMeters;                                           // 0x0250(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      KillZ;                                                   // 0x0254(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              KillZDamageType;                                         // 0x0258(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WorldGravityZ;                                           // 0x0260(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlobalGravityZ;                                          // 0x0264(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DefaultPhysicsVolumeClass;                               // 0x0268(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              PhysicsCollisionHandlerClass;                            // 0x0270(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DefaultGameMode;                                         // 0x0278(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              GameNetworkManagerClass;                                 // 0x0280(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PackedLightAndShadowMapTextureSize;                      // 0x0288(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             DefaultColorScale;                                       // 0x028C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DoAllowBatching;                                         // 0x0298(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CIH3[0x3];                                   // 0x0299(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefaultMaxDistanceFieldOcclusionDistance;                // 0x029C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlobalDistanceFieldViewDistance;                         // 0x02A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DynamicIndirectShadowsSelfShadowingIntensity;            // 0x02A4(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FReverbSettings                                     DefaultReverbSettings;                                   // 0x02A8(0x0020) Edit, Config, NoDestructor, NativeAccessSpecifierPublic
		struct FInteriorSettings                                   DefaultAmbientZoneSettings;                              // 0x02C8(0x0024) Edit, Config, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HT04[0x4];                                   // 0x02EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USoundMix*                                           DefaultBaseSoundMix;                                     // 0x02F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeDilation;                                            // 0x02F8(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MatineeTimeDilation;                                     // 0x02FC(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DemoPlayTimeDilation;                                    // 0x0300(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinGlobalTimeDilation;                                   // 0x0304(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxGlobalTimeDilation;                                   // 0x0308(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinUndilatedFrameTime;                                   // 0x030C(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxUndilatedFrameTime;                                   // 0x0310(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBroadphaseSettings                                 BroadphaseSettings;                                      // 0x0314(0x0040) Edit, Config, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4WO5[0x4];                                   // 0x0354(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerState*                                        Pauser;                                                  // 0x0358(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FNetViewer>                                  ReplicationViewers;                                      // 0x0360(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UAssetUserData*>                              AssetUserData;                                           // 0x0370(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		class APlayerState*                                        PauserPlayerState;                                       // 0x0380(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    MaxNumberOfBookmarks;                                    // 0x0388(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_E1NG[0x4];                                   // 0x038C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              DefaultBookmarkClass;                                    // 0x0390(0x0008) ZeroConstructor, Config, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UBookmarkBase*>                               BookmarkArray;                                           // 0x0398(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		class UClass*                                              LastBookmarkClass;                                       // 0x03A8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void OnRep_WorldGravityZ();
		static UClass* StaticClass();
	};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
